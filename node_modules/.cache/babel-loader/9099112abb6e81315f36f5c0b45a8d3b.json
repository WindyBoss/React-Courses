{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/SignupForm/SignupForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport PropTypes from 'prop-types';\nimport { FormElement } from './components/FormElement';\nimport { UserList } from './components/UserList';\nimport { UserListText, MainFormContainer } from './styles/SignupForm.styled';\nimport { themeContext } from 'context/authContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst shortid = require('shortid');\n\nconst SignupFormHooks = _ref => {\n  let {\n    onSubmit\n  } = _ref;\n\n  const handleSubmit = (values, _ref2) => {\n    let {\n      resetForm\n    } = _ref2;\n    const user = { ...values,\n      id: shortid.generate()\n    };\n    onSubmit(user);\n    resetForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormElement, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = SignupFormHooks;\nSignupFormHooks.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n\nconst SignupForm = () => {\n  _s();\n\n  const {\n    mainTheme\n  } = useContext(themeContext);\n  const [userList, setUserList] = useState([]);\n\n  const notify = () => toast.error('Email already exists');\n\n  const collectUsers = user => {\n    if (!userList.find(userItem => userItem.email === user.email)) {\n      setUserList([...userList, user]);\n    } else {\n      notify();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'inline-flex',\n        border: `1px solid ${mainTheme.colors.containerBorderColor}`,\n        padding: '20px',\n        margin: '10px 30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(MainFormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: mainTheme.colors.mainText\n          },\n          children: \"Signup form with hooks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SignupFormHooks, {\n          onSubmit: collectUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px 30px',\n        display: 'inline-block',\n        border: `1px solid ${mainTheme.colors.containerBorderColor}`,\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: 'auto',\n          width: '305px',\n          display: 'flex',\n          border: `1px solid ${mainTheme.colors.containerBorderColor}`,\n          padding: '20px',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(UserListText, {\n          colors: mainTheme.colors,\n          children: \"User List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserListText, {\n          colors: mainTheme.colors,\n          children: [\"Number of users: \", userList.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {\n        userList: userList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SignupForm, \"PQygnGDLCJ51L0fJbpP1VaOiltE=\");\n\n_c2 = SignupForm;\nexport default SignupForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignupFormHooks\");\n$RefreshReg$(_c2, \"SignupForm\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/SignupForm/SignupForm.jsx"],"names":["React","useContext","useState","toast","PropTypes","FormElement","UserList","UserListText","MainFormContainer","themeContext","shortid","require","SignupFormHooks","onSubmit","handleSubmit","values","resetForm","user","id","generate","propTypes","func","isRequired","SignupForm","mainTheme","userList","setUserList","notify","error","collectUsers","find","userItem","email","display","border","colors","containerBorderColor","padding","margin","color","mainText","marginLeft","width","justifyContent","length"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport PropTypes from 'prop-types';\n\nimport { FormElement } from './components/FormElement';\nimport { UserList } from './components/UserList';\nimport {\n  UserListText,\n  MainFormContainer,\n} from './styles/SignupForm.styled';\n\nimport { themeContext } from 'context/authContext';\n\nconst shortid = require('shortid');\n\nconst SignupFormHooks = ({ onSubmit }) => {\n  const handleSubmit = (values, { resetForm }) => {\n    const user = { ...values, id: shortid.generate() };\n    onSubmit(user);\n    resetForm();\n  };\n\n  return (\n    <>\n      <FormElement onSubmit={handleSubmit} />\n    </>\n  );\n};\n\nSignupFormHooks.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst SignupForm = () => {\n  const { mainTheme } = useContext(themeContext);\n\n  const [userList, setUserList] = useState([]);\n  const notify = () => toast.error('Email already exists');\n\n  const collectUsers = user => {\n    if (!userList.find(userItem => userItem.email === user.email)) {\n      setUserList([...userList, user]);\n    } else {\n      notify();\n    }\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'inline-flex',\n          border: `1px solid ${mainTheme.colors.containerBorderColor}`,\n          padding: '20px',\n          margin: '10px 30px',\n        }}\n      >\n        <MainFormContainer>\n          <p style={{ color: mainTheme.colors.mainText }}>\n            Signup form with hooks\n          </p>\n          <SignupFormHooks onSubmit={collectUsers} />\n        </MainFormContainer>\n      </div>\n      <div\n        style={{\n          margin: '10px 30px',\n          display: 'inline-block',\n          border: `1px solid ${mainTheme.colors.containerBorderColor}`,\n          padding: '20px',\n        }}\n      >\n        <div\n          style={{\n            marginLeft: 'auto',\n            width: '305px',\n            display: 'flex',\n            border: `1px solid ${mainTheme.colors.containerBorderColor}`,\n            padding: '20px',\n            justifyContent: 'space-between',\n          }}\n        >\n          <UserListText colors={mainTheme.colors}>User List</UserListText>\n          <UserListText colors={mainTheme.colors}>\n            Number of users: {userList.length}\n          </UserListText>\n        </div>\n        <UserList userList={userList} />\n      </div>\n    </>\n  );\n};\n\n\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}