{"ast":null,"code":"import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport todoReducer from './todos/todoSlice';\nimport counterReducer from './counter/counterSlice';\nimport storage from 'reduxjs-toolkit-persist/lib/storage';\nimport { persistReducer, persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'reduxjs-toolkit-persist';\nimport logger from 'redux-logger';\nconst persistConfig = {\n  key: 'root',\n  storage: storage\n};\nconst persistClickConfig = {\n  key: 'clicks',\n  storage: storage\n}; // middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware(),\n// .concat(todoReducer.middleware)\n\nconsole.log(todoReducer.middleware);\nconst rootReducer = combineReducers({\n  todoList: persistReducer(persistConfig, todoReducer),\n  counter: persistReducer(persistClickConfig, counterReducer)\n});\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      /* ignore persistance actions */\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  }).concat(logger),\n  devTools: process.env.NODE_ENV !== 'production',\n  enhancers: defaultEnhancers => {\n    console.log(defaultEnhancers);\n    return defaultEnhancers;\n  }\n});\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/redux/store.js"],"names":["configureStore","combineReducers","todoReducer","counterReducer","storage","persistReducer","persistStore","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","persistClickConfig","console","log","middleware","rootReducer","todoList","counter","store","reducer","getDefaultMiddleware","serializableCheck","ignoredActions","concat","devTools","process","env","NODE_ENV","enhancers","defaultEnhancers","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,OAAP,MAAoB,qCAApB;AAEA,SACIC,cADJ,EAEIC,YAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,KAPJ,EAQIC,QARJ,QASO,yBATP;AAWA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBX,EAAAA,OAAO,EAAEA;AAFS,CAAtB;AAKA,MAAMY,kBAAkB,GAAG;AACvBD,EAAAA,GAAG,EAAE,QADkB;AAEvBX,EAAAA,OAAO,EAAEA;AAFc,CAA3B,C,CAKA;AACA;AAEA;;AAEAa,OAAO,CAACC,GAAR,CAAYhB,WAAW,CAACiB,UAAxB;AAEA,MAAMC,WAAW,GAAGnB,eAAe,CAAC;AAChCoB,EAAAA,QAAQ,EAAEhB,cAAc,CAACS,aAAD,EAAgBZ,WAAhB,CADQ;AAEhCoB,EAAAA,OAAO,EAAEjB,cAAc,CAACW,kBAAD,EAAqBb,cAArB;AAFS,CAAD,CAAnC;AAKA,MAAMoB,KAAK,GAAGvB,cAAc,CAAC;AACzBwB,EAAAA,OAAO,EAAEJ,WADgB;AAEzBD,EAAAA,UAAU,EAAEM,oBAAoB,IAC5BA,oBAAoB,CAAC;AACjBC,IAAAA,iBAAiB,EAAE;AACf;AACAC,MAAAA,cAAc,EAAE,CAACpB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AAFD;AADF,GAAD,CAApB,CAKGgB,MALH,CAKUf,MALV,CAHqB;AASzBgB,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YATV;AAUzBC,EAAAA,SAAS,EAAEC,gBAAgB,IAAI;AAC3BjB,IAAAA,OAAO,CAACC,GAAR,CAAYgB,gBAAZ;AACA,WAAOA,gBAAP;AACH;AAbwB,CAAD,CAA5B;AAgBA,MAAMC,SAAS,GAAG7B,YAAY,CAACiB,KAAD,CAA9B;AAEA,SAASA,KAAT,EAAgBY,SAAhB","sourcesContent":["import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport todoReducer from './todos/todoSlice';\nimport counterReducer from './counter/counterSlice';\nimport storage from 'reduxjs-toolkit-persist/lib/storage';\n\nimport {\n    persistReducer,\n    persistStore,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'reduxjs-toolkit-persist';\n\nimport logger from 'redux-logger';\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n};\n\nconst persistClickConfig = {\n    key: 'clicks',\n    storage: storage,\n};\n\n// middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware(),\n\n// .concat(todoReducer.middleware)\n\nconsole.log(todoReducer.middleware)\n\nconst rootReducer = combineReducers({\n    todoList: persistReducer(persistConfig, todoReducer),\n    counter: persistReducer(persistClickConfig, counterReducer),\n});\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware: getDefaultMiddleware =>\n        getDefaultMiddleware({\n            serializableCheck: {\n                /* ignore persistance actions */\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n            },\n        }).concat(logger),\n    devTools: process.env.NODE_ENV !== 'production',\n    enhancers: defaultEnhancers => {\n        console.log(defaultEnhancers);\n        return defaultEnhancers;\n    },\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };"]},"metadata":{},"sourceType":"module"}