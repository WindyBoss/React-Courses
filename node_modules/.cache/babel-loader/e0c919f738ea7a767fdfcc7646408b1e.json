{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const todoSlice = createSlice({\n  name: 'todos',\n  initialState: [],\n  reducers: {\n    addTodo: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.todos.push(payload);\n    },\n    deleteTodo: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      return state.todos.filter(_ref3 => {\n        let {\n          id\n        } = _ref3;\n        return id !== payload;\n      });\n    },\n    toggleComplicated: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      return state.todos.map(todo => todo.id === payload ? { ...todo,\n        completed: !todo.completed\n      } : todo);\n    }\n  }\n}); // export const todoSlice = createSlice({\n//     name: 'todos',\n//     initialState,\n//     reducers: {\n//         addTodo: (state, { payload }) => {\n//             state.todos.push(payload);\n//         },\n//         deleteTodo: (state, { payload }) =>\n//             state.todos.filter(({ id }) => id !== payload),\n// toggleComplicated: ({ todoList }, { payload }) => {\n//     console.log(todoList);\n//     return todoList.map(todo =>\n//         todo.id === payload ? {...todo, completed: !todo.completed } : todo\n//     );\n// },\n//     },\n// });\n\nexport const {\n  addTodo,\n  deleteTodo,\n  toggleComplicated\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/redux/todos/todoSlice.js"],"names":["createSlice","todoSlice","name","initialState","reducers","addTodo","state","payload","todos","push","deleteTodo","filter","id","toggleComplicated","map","todo","completed","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACjCE,EAAAA,IAAI,EAAE,OAD2B;AAEjCC,EAAAA,YAAY,EAAE,EAFmB;AAGjCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,CAACC,KAAD,WAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AAC7BD,MAAAA,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiBF,OAAjB;AACH,KAHK;AAKNG,IAAAA,UAAU,EAAE,CAACJ,KAAD;AAAA,UAAQ;AAAEC,QAAAA;AAAF,OAAR;AAAA,aACRD,KAAK,CAACE,KAAN,CAAYG,MAAZ,CAAmB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAYA,EAAE,KAAKL,OAAnB;AAAA,OAAnB,CADQ;AAAA,KALN;AAQNM,IAAAA,iBAAiB,EAAE,CAACP,KAAD,YAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AACvC,aAAOD,KAAK,CAACE,KAAN,CAAYM,GAAZ,CAAgBC,IAAI,IACvBA,IAAI,CAACH,EAAL,KAAYL,OAAZ,GAAsB,EAAC,GAAGQ,IAAJ;AAAUC,QAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAA3B,OAAtB,GAA+DD,IAD5D,CAAP;AAGH;AAZK;AAHuB,CAAD,CAA7B,C,CAmBP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAM;AAAEV,EAAAA,OAAF;AAAWK,EAAAA,UAAX;AAAuBG,EAAAA;AAAvB,IAA6CZ,SAAS,CAACgB,OAA7D;AAEP,eAAehB,SAAS,CAACiB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const todoSlice = createSlice({\n    name: 'todos',\n    initialState: [],\n    reducers: {\n        addTodo: (state, { payload }) => {\n            state.todos.push(payload);\n        },\n\n        deleteTodo: (state, { payload }) =>\n            state.todos.filter(({ id }) => id !== payload),\n\n        toggleComplicated: (state, { payload }) => {\n            return state.todos.map(todo =>\n                todo.id === payload ? {...todo, completed: !todo.completed } : todo\n            );\n        },\n    },\n});\n\n// export const todoSlice = createSlice({\n//     name: 'todos',\n//     initialState,\n//     reducers: {\n//         addTodo: (state, { payload }) => {\n//             state.todos.push(payload);\n//         },\n\n//         deleteTodo: (state, { payload }) =>\n//             state.todos.filter(({ id }) => id !== payload),\n\n// toggleComplicated: ({ todoList }, { payload }) => {\n//     console.log(todoList);\n//     return todoList.map(todo =>\n//         todo.id === payload ? {...todo, completed: !todo.completed } : todo\n//     );\n// },\n//     },\n// });\n\nexport const { addTodo, deleteTodo, toggleComplicated } = todoSlice.actions;\n\nexport default todoSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}