{"ast":null,"code":"import { createAction, createReducer, current } from '@reduxjs/toolkit';\nconst initialState = [];\nconst addTodo = createAction('todos/addTodo');\nconst deleteTodo = createAction('todos/deleteTodo');\nconst toggleTodo = createAction('todos/toggleTodo');\nexport const todoReducer = createReducer(initialState, builder => {\n  builder.addCase(addTodo, (state, _ref) => {\n    let {\n      payload\n    } = _ref;\n    return state.push(payload);\n  }).addCase(deleteTodo, (state, _ref2) => {\n    let {\n      payload\n    } = _ref2;\n    return [...state.filter(_ref3 => {\n      let {\n        id\n      } = _ref3;\n      return id !== payload;\n    })];\n  }).addCase(toggleTodo, (state, _ref4) => {\n    let {\n      payload\n    } = _ref4;\n    return state.map(todo => todo.id === payload ? { ...todo,\n      completed: !todo.completed\n    } : todo);\n  }).addDefaultCase(state => {\n    return state;\n  });\n}); // export const todoReducer = createReducer(initialState, {\n//     [addTodo]: (state, { payload }) => {\n//         state.push(payload);\n//     },\n//     [deleteTodo]: (state, { payload }) => {\n//         return [...state.filter(({ id }) => id !== payload)];\n//     },\n//     [toggleTodo]: (state, { payload }) => {\n//         return state.map(todo =>\n//             todo.id === payload ? {...todo, completed: !todo.completed } : todo\n//         );\n//     },\n// });\n\nexport { addTodo, deleteTodo, toggleTodo };","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/redux/todos/todoReducer.js"],"names":["createAction","createReducer","current","initialState","addTodo","deleteTodo","toggleTodo","todoReducer","builder","addCase","state","payload","push","filter","id","map","todo","completed","addDefaultCase"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,EAAsCC,OAAtC,QAAqD,kBAArD;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,OAAO,GAAGJ,YAAY,CAAC,eAAD,CAA5B;AACA,MAAMK,UAAU,GAAGL,YAAY,CAAC,kBAAD,CAA/B;AACA,MAAMM,UAAU,GAAGN,YAAY,CAAC,kBAAD,CAA/B;AAEA,OAAO,MAAMO,WAAW,GAAGN,aAAa,CAACE,YAAD,EAAeK,OAAO,IAAI;AAC9DA,EAAAA,OAAO,CACFC,OADL,CACaL,OADb,EACsB,CAACM,KAAD;AAAA,QAAQ;AAAEC,MAAAA;AAAF,KAAR;AAAA,WAAwBD,KAAK,CAACE,IAAN,CAAWD,OAAX,CAAxB;AAAA,GADtB,EAEKF,OAFL,CAEaJ,UAFb,EAEyB,CAACK,KAAD;AAAA,QAAQ;AAAEC,MAAAA;AAAF,KAAR;AAAA,WAAwB,CACzC,GAAGD,KAAK,CAACG,MAAN,CAAa;AAAA,UAAC;AAAEC,QAAAA;AAAF,OAAD;AAAA,aAAYA,EAAE,KAAKH,OAAnB;AAAA,KAAb,CADsC,CAAxB;AAAA,GAFzB,EAKKF,OALL,CAKaH,UALb,EAKyB,CAACI,KAAD;AAAA,QAAQ;AAAEC,MAAAA;AAAF,KAAR;AAAA,WACjBD,KAAK,CAACK,GAAN,CAAUC,IAAI,IACVA,IAAI,CAACF,EAAL,KAAYH,OAAZ,GAAsB,EAAC,GAAGK,IAAJ;AAAUC,MAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAA3B,KAAtB,GAA+DD,IADnE,CADiB;AAAA,GALzB,EAUKE,cAVL,CAUoBR,KAAK,IAAI;AACrB,WAAOA,KAAP;AACH,GAZL;AAaH,CAduC,CAAjC,C,CAgBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASN,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B","sourcesContent":["import { createAction, createReducer, current } from '@reduxjs/toolkit';\n\nconst initialState = [];\nconst addTodo = createAction('todos/addTodo');\nconst deleteTodo = createAction('todos/deleteTodo');\nconst toggleTodo = createAction('todos/toggleTodo');\n\nexport const todoReducer = createReducer(initialState, builder => {\n    builder\n        .addCase(addTodo, (state, { payload }) => state.push(payload))\n        .addCase(deleteTodo, (state, { payload }) => [\n            ...state.filter(({ id }) => id !== payload),\n        ])\n        .addCase(toggleTodo, (state, { payload }) =>\n            state.map(todo =>\n                todo.id === payload ? {...todo, completed: !todo.completed } : todo\n            )\n        )\n        .addDefaultCase(state => {\n            return state;\n        });\n});\n\n// export const todoReducer = createReducer(initialState, {\n//     [addTodo]: (state, { payload }) => {\n//         state.push(payload);\n//     },\n//     [deleteTodo]: (state, { payload }) => {\n//         return [...state.filter(({ id }) => id !== payload)];\n//     },\n//     [toggleTodo]: (state, { payload }) => {\n//         return state.map(todo =>\n//             todo.id === payload ? {...todo, completed: !todo.completed } : todo\n//         );\n//     },\n// });\n\nexport { addTodo, deleteTodo, toggleTodo };"]},"metadata":{},"sourceType":"module"}