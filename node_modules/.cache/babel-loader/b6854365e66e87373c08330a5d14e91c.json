{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react'; // This is custom hook which also response for state machine changes, and return state\n\nexport const useFetch = (apiState, makeFetch, params) => {\n  _s();\n\n  const [state, setState] = useState(null);\n  const fetchData = useCallback(async () => {\n    apiState.pending();\n\n    try {\n      setState(await makeFetch(params));\n      apiState.success();\n    } catch (error) {\n      apiState.error();\n    }\n  }, [apiState, makeFetch, params]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return state;\n};\n\n_s(useFetch, \"g37ZTu+mj8RQmGr0IazNTrJwY64=\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/Hooks/useFetch.js"],"names":["useState","useEffect","useCallback","useFetch","apiState","makeFetch","params","state","setState","fetchData","pending","success","error"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,SAAX,EAAsBC,MAAtB,KAAiC;AAAA;;AACrD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMS,SAAS,GAAGP,WAAW,CAAC,YAAY;AACxCE,IAAAA,QAAQ,CAACM,OAAT;;AACA,QAAI;AACFF,MAAAA,QAAQ,CAAC,MAAMH,SAAS,CAACC,MAAD,CAAhB,CAAR;AACAF,MAAAA,QAAQ,CAACO,OAAT;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdR,MAAAA,QAAQ,CAACQ,KAAT;AACD;AACF,GAR4B,EAQ1B,CAACR,QAAD,EAAWC,SAAX,EAAsBC,MAAtB,CAR0B,CAA7B;AAUAL,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAIA,SAAOF,KAAP;AACD,CAlBI;;GAAMJ,Q","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\n// This is custom hook which also response for state machine changes, and return state\nexport const useFetch = (apiState, makeFetch, params) => {\n    const [state, setState] = useState(null);\n  \n    const fetchData = useCallback(async () => {\n      apiState.pending();\n      try {\n        setState(await makeFetch(params));\n        apiState.success();\n      } catch (error) {\n        apiState.error();\n      }\n    }, [apiState, makeFetch, params]);\n  \n    useEffect(() => {\n      fetchData();\n    }, [fetchData]);\n  \n    return state;\n  }"]},"metadata":{},"sourceType":"module"}