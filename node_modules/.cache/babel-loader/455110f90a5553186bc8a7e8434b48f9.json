{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Video.jsx\",\n    _s = $RefreshSig$();\n\nimport { Component, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Player } from '../components/Player/Player';\nimport { VideoList } from '../components/Player/VideoList';\nimport { VideoContainer, PlayerWrapper } from '../components/Player/Player.styled'; // -> this is the main container, which receives videolist, creates video select method, and play gives the selected link to component, which plays video\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass VideoClass extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      selectedVideo: null\n    };\n\n    this.selectVideo = link => {\n      this.setState({\n        selectedVideo: link\n      });\n    };\n  }\n\n  render() {\n    const {\n      selectedVideo\n    } = this.state;\n    const {\n      colors,\n      videos\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(VideoContainer, {\n      colors: colors,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Selected video: \", selectedVideo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayerWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(VideoList, {\n          videos: videos,\n          onSelect: this.selectVideo,\n          colors: colors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Player, {\n          url: selectedVideo,\n          colors: colors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\n\nfunction VideoHooks(_ref) {\n  _s();\n\n  let {\n    colors,\n    videos\n  } = _ref;\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  return /*#__PURE__*/_jsxDEV(VideoContainer, {\n    colors: colors,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Selected video: \", selectedVideo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(PlayerWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(VideoList, {\n        videos: videos,\n        onSelect: setSelectedVideo,\n        colors: colors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Player, {\n        url: selectedVideo,\n        colors: colors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VideoHooks, \"2WJSNS9e/v/J6WdyH+35pInMpMA=\");\n\n_c = VideoHooks;\n;\nexport function Video(_ref2) {\n  let {\n    colors,\n    videos\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Video;\n;\n/*\n* Use Proptypes for checking type of props data of the component\n*/\n\nVideo.propTypes = {\n  videos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    link: PropTypes.string.isRequired\n  })).isRequired,\n  colors: PropTypes.objectOf(PropTypes.string).isRequired\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VideoHooks\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Video.jsx"],"names":["Component","useState","PropTypes","Player","VideoList","VideoContainer","PlayerWrapper","VideoClass","state","selectedVideo","selectVideo","link","setState","render","colors","videos","props","VideoHooks","setSelectedVideo","Video","propTypes","arrayOf","shape","id","number","isRequired","string","objectOf"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,oCAA9C,C,CAEA;;;;AACA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCQ,KADiC,GACzB;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KADyB;;AAAA,SAGjCC,WAHiC,GAGnBC,IAAI,IAAI;AACpB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,aAAa,EAAEE;AAAjB,OAAd;AACD,KALgC;AAAA;;AAOjCE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA;AAAF,QAAoB,KAAKD,KAA/B;AACA,UAAM;AAAEM,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAqB,KAAKC,KAAhC;AACA,wBACE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAGF,MAAzB;AAAA,8BACE;AAAA,uCAAsBL,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,MAAM,EAAGM,MAApB;AAA6B,UAAA,QAAQ,EAAG,KAAKL,WAA7C;AAA2D,UAAA,MAAM,EAAGI;AAApE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAGL,aAAd;AAA+B,UAAA,MAAM,EAAGK;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAnBgC;;AAoBlC;;AAGD,SAASG,UAAT,OAAyC;AAAA;;AAAA,MAApB;AAAEH,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAoB;AACrC,QAAM,CAAEN,aAAF,EAAiBS,gBAAjB,IAAsCjB,QAAQ,CAAC,IAAD,CAApD;AACE,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAGa,MAAzB;AAAA,4BACE;AAAA,qCAAsBL,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,MAAM,EAAGM,MAApB;AAA6B,QAAA,QAAQ,EAAGG,gBAAxC;AAA2D,QAAA,MAAM,EAAGJ;AAApE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAGL,aAAd;AAA+B,QAAA,MAAM,EAAGK;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASH;;GAXMG,U;;KAAAA,U;AAWN;AAEH,OAAO,SAASE,KAAT,QAAkC;AAAA,MAAlB;AAACL,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAkB;AACrC,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;MAPeI,K;AAOf;AAGD;AACA;AACA;;AAGAA,KAAK,CAACC,SAAN,GAAkB;AAChBL,EAAAA,MAAM,EAAEb,SAAS,CAACmB,OAAV,CAAkBnB,SAAS,CAACoB,KAAV,CAAgB;AACxCC,IAAAA,EAAE,EAAErB,SAAS,CAACsB,MAAV,CAAiBC,UADmB;AAExCd,IAAAA,IAAI,EAAET,SAAS,CAACwB,MAAV,CAAiBD;AAFiB,GAAhB,CAAlB,EAGJA,UAJY;AAKhBX,EAAAA,MAAM,EAAEZ,SAAS,CAACyB,QAAV,CAAmBzB,SAAS,CAACwB,MAA7B,EAAqCD;AAL7B,CAAlB","sourcesContent":["import { Component, useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport { Player } from '../components/Player/Player';\nimport { VideoList } from '../components/Player/VideoList';\nimport { VideoContainer, PlayerWrapper } from '../components/Player/Player.styled';\n\n// -> this is the main container, which receives videolist, creates video select method, and play gives the selected link to component, which plays video\nclass VideoClass extends Component {\n  state = { selectedVideo: null };\n\n  selectVideo = link => {\n    this.setState({ selectedVideo: link });\n  };\n\n  render() {\n    const { selectedVideo } = this.state;\n    const { colors, videos } = this.props;\n    return (\n      <VideoContainer colors={ colors }>\n        <h1>Selected video: { selectedVideo }</h1>\n        <PlayerWrapper>\n          <VideoList videos={ videos } onSelect={ this.selectVideo } colors={ colors } />\n          <Player url={ selectedVideo }  colors={ colors }/>\n        </PlayerWrapper>\n      </VideoContainer>\n    );\n  };\n};\n\n\nfunction VideoHooks ({ colors, videos }) {\n    const [ selectedVideo, setSelectedVideo ] = useState(null);\n      return (\n        <VideoContainer colors={ colors }>\n          <h1>Selected video: { selectedVideo }</h1>\n          <PlayerWrapper>\n            <VideoList videos={ videos } onSelect={ setSelectedVideo } colors={ colors } />\n            <Player url={ selectedVideo }  colors={ colors }/>\n          </PlayerWrapper>\n        </VideoContainer>\n      );\n  };\n\nexport function Video ({colors, videos}) {\n    return (\n        <div>\n            {/* <VideoClass colors={ colors } videos={ videos }/> */}\n            {/* <VideoHooks colors={ colors } videos={ videos }/> */}\n        </div>\n    );\n};\n\n\n/*\n* Use Proptypes for checking type of props data of the component\n*/\n\n\nVideo.propTypes = {\n  videos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    link: PropTypes.string.isRequired\n  })).isRequired,\n  colors: PropTypes.objectOf(PropTypes.string).isRequired,\n};"]},"metadata":{},"sourceType":"module"}