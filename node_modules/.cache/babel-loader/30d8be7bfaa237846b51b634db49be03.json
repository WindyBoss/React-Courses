{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/context/AuthProvider.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport authContext from './authContext';\n/*\n * authContext.Provider - is a component-wrapper, which is responsible for providing the information (props) to the rest of the app\n * inside authContext.Provider - we can hold the props (data or methods), which can be used in all components in App\n */\n// ! This AuthProvider is made by class component. The AuthProvider on hooks is in Provide.js\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AuthProvider extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      user: null,\n      logIn: () => {\n        this.setState({\n          user: 'Mango'\n        });\n      },\n      logOut: () => {\n        this.setState({\n          user: null\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n      value: this.state,\n      children: [\" \", this.props.children, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 18\n    }, this);\n  }\n\n}\n;\nAuthProvider.propTypes = {\n  children: PropTypes.any.isRequired\n};","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/context/AuthProvider.js"],"names":["React","Component","PropTypes","authContext","AuthProvider","state","user","logIn","setState","logOut","render","props","children","propTypes","any","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA;AACA;AACA;AACA;AAEA;;;AAEA,eAAe,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAChDI,KADgD,GACxC;AACJC,MAAAA,IAAI,EAAE,IADF;AAEJC,MAAAA,KAAK,EAAE,MAAM;AACT,aAAKC,QAAL,CAAc;AAAEF,UAAAA,IAAI,EAAE;AAAR,SAAd;AACH,OAJG;AAKJG,MAAAA,MAAM,EAAE,MAAM;AACV,aAAKD,QAAL,CAAc;AAAEF,UAAAA,IAAI,EAAE;AAAR,SAAd;AACH;AAPG,KADwC;AAAA;;AAWhDI,EAAAA,MAAM,GAAG;AACL,wBAAS,QACL,WADK,CACO,QADP;AACgB,MAAA,KAAK,EAAK,KAAKL,KAD/B;AAAA,sBAC2C,KAAKM,KAAL,CAAWC,QADtD;AAAA;AAAA;AAAA;AAAA;AAAA,YAAT;AAIH;;AAhB+C;AAiBnD;AAEDR,YAAY,CAACS,SAAb,GAAyB;AACrBD,EAAAA,QAAQ,EAAEV,SAAS,CAACY,GAAV,CAAcC;AADH,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport authContext from './authContext';\n\n/*\n * authContext.Provider - is a component-wrapper, which is responsible for providing the information (props) to the rest of the app\n * inside authContext.Provider - we can hold the props (data or methods), which can be used in all components in App\n */\n\n// ! This AuthProvider is made by class component. The AuthProvider on hooks is in Provide.js\n\nexport default class AuthProvider extends Component {\n    state = {\n        user: null,\n        logIn: () => {\n            this.setState({ user: 'Mango' });\n        },\n        logOut: () => {\n            this.setState({ user: null });\n        },\n    };\n\n    render() {\n        return ( <\n            authContext.Provider value = { this.state } > { this.props.children } <\n            /authContext.Provider>\n        );\n    };\n};\n\nAuthProvider.propTypes = {\n    children: PropTypes.any.isRequired,\n};"]},"metadata":{},"sourceType":"module"}