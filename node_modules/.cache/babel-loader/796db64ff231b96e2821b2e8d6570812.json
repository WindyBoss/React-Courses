{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nvar styles = {\n  \"alertDangerContainer\": \"_1alIC\",\n  \"alertDangerHeading\": \"_nqCmj\",\n  \"alertDangerInfo\": \"_2Qem8\"\n};\n\nvar Alert = function Alert(_ref) {\n  var txtMainHeading = _ref.txtMainHeading,\n      customClassName = _ref.customClassName,\n      txtSubHeading = _ref.txtSubHeading,\n      alertStyles = _ref.alertStyles;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: alertStyles.alertDangerContainer + \" \" + customClassName\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: alertStyles.alertDangerHeading\n  }, txtMainHeading), /*#__PURE__*/React.createElement(\"span\", {\n    className: alertStyles.alertDangerInfo\n  }, txtSubHeading));\n};\n\nvar ReactInternetSpeedMeter = function ReactInternetSpeedMeter(_ref) {\n  var _ref$txtMainHeading = _ref.txtMainHeading,\n      txtMainHeading = _ref$txtMainHeading === void 0 ? 'Opps...' : _ref$txtMainHeading,\n      _ref$outputType = _ref.outputType,\n      outputType = _ref$outputType === void 0 ? 'alert' : _ref$outputType,\n      customClassName = _ref.customClassName,\n      _ref$pingInterval = _ref.pingInterval,\n      pingInterval = _ref$pingInterval === void 0 ? 30000 : _ref$pingInterval,\n      _ref$thresholdUnit = _ref.thresholdUnit,\n      thresholdUnit = _ref$thresholdUnit === void 0 ? 'megabyte' : _ref$thresholdUnit,\n      _ref$threshold = _ref.threshold,\n      threshold = _ref$threshold === void 0 ? 7 : _ref$threshold,\n      _ref$txtSubHeading = _ref.txtSubHeading,\n      txtSubHeading = _ref$txtSubHeading === void 0 ? 'Diconnected from internet' : _ref$txtSubHeading,\n      imageUrl = _ref.imageUrl,\n      downloadSize = _ref.downloadSize,\n      _ref$callbackFunction = _ref.callbackFunctionOnNetworkDown,\n      callbackFunctionOnNetworkDown = _ref$callbackFunction === void 0 ? function () {\n    return console.log('No callback on Network Down');\n  } : _ref$callbackFunction,\n      _ref$callbackFunction2 = _ref.callbackFunctionOnNetworkTest,\n      callbackFunctionOnNetworkTest = _ref$callbackFunction2 === void 0 ? function () {\n    return console.log('No callback On Network test');\n  } : _ref$callbackFunction2,\n      _ref$callbackFunction3 = _ref.callbackFunctionOnError,\n      callbackFunctionOnError = _ref$callbackFunction3 === void 0 ? function () {\n    return console.log('error in downloading image');\n  } : _ref$callbackFunction3;\n\n  var _useState = useState(false),\n      isNetworkDown = _useState[0],\n      setisNetworkDown = _useState[1];\n\n  var intervalFun;\n  window.addEventListener('offline', function () {\n    return setisNetworkDown(true);\n  });\n  window.addEventListener('online', function () {\n    return setisNetworkDown(false);\n  });\n\n  var startCalculating = function startCalculating() {\n    return window.setTimeout(MeasureConnectionSpeed, pingInterval);\n  };\n\n  useEffect(function () {\n    intervalFun = startCalculating();\n    return function () {\n      return window.clearInterval(intervalFun);\n    };\n  }, []);\n\n  var MeasureConnectionSpeed = function MeasureConnectionSpeed() {\n    var startTime, endTime;\n    var download = new Image();\n    startTime = new Date().getTime();\n    var cacheBuster = '?nnn=' + startTime;\n    download.src = imageUrl + cacheBuster;\n\n    download.onload = function (d) {\n      endTime = new Date().getTime();\n      showResults(startTime, endTime);\n    };\n\n    download.onerror = function (err, msg) {\n      console.log('err', err);\n      callbackFunctionOnError(err);\n      window.clearInterval(intervalFun);\n    };\n\n    startCalculating();\n  };\n\n  var showResults = function showResults(startTime, endTime) {\n    var duration = (endTime - startTime) / 1000;\n    var bitsLoaded = downloadSize * 8;\n    var speedBps = (bitsLoaded / duration).toFixed(2);\n    var speedKbps = (speedBps / 1024).toFixed(2);\n    var speedMbps = (speedKbps / 1024).toFixed(2);\n    setNetworStatus(speedBps, speedKbps, speedMbps);\n  };\n\n  var setNetworStatus = function setNetworStatus(speedBps, speedKbps, speedMbps) {\n    if (thresholdUnit === 'byte') {\n      if (speedBps < threshold) {\n        setisNetworkDown(true);\n        callbackFunctionOnNetworkDown(speedBps);\n      } else {\n        setisNetworkDown(false);\n      }\n\n      callbackFunctionOnNetworkTest(speedBps);\n    } else if (thresholdUnit === 'kilobyte') {\n      if (speedKbps < threshold) {\n        setisNetworkDown(true);\n        callbackFunctionOnNetworkDown(speedKbps);\n      } else {\n        setisNetworkDown(false);\n      }\n\n      callbackFunctionOnNetworkTest(speedKbps);\n    } else if (thresholdUnit === 'megabyte') {\n      if (speedMbps < threshold) {\n        setisNetworkDown(true);\n        callbackFunctionOnNetworkDown(speedMbps);\n      } else {\n        setisNetworkDown(false);\n      }\n\n      callbackFunctionOnNetworkTest(speedMbps);\n    } else {\n      console.log('Invalid thresholdUnit');\n    }\n  };\n\n  if (isNetworkDown) {\n    if (outputType === 'alert') {\n      return /*#__PURE__*/React.createElement(Alert, {\n        alertStyles: styles,\n        customClassName: customClassName,\n        txtMainHeading: txtMainHeading,\n        txtSubHeading: txtSubHeading\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", null);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", null);\n};\n\nexport { ReactInternetSpeedMeter };","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/node_modules/react-internet-meter/src/components/alerts/index.js","/Users/vitaliy/Documents/GitHub/React-Courses/node_modules/react-internet-meter/src/index.js"],"names":["Alert","txtMainHeading","customClassName","txtSubHeading","alertStyles","alertDangerHeading","alertDangerInfo","ReactInternetSpeedMeter","outputType","pingInterval","thresholdUnit","threshold","imageUrl","downloadSize","callbackFunctionOnNetworkDown","console","callbackFunctionOnNetworkTest","callbackFunctionOnError","isNetworkDown","setisNetworkDown","useState","window","startCalculating","useEffect","intervalFun","MeasureConnectionSpeed","download","startTime","cacheBuster","endTime","showResults","duration","bitsLoaded","speedBps","speedKbps","speedMbps","setNetworStatus"],"mappings":"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","sourcesContent":["import React from 'react' \n\n\nconst Alert = ({txtMainHeading,customClassName,txtSubHeading,alertStyles}) => {\n    return (\n        <div className={`${alertStyles.alertDangerContainer} ${customClassName}`}>\n            <span className={alertStyles.alertDangerHeading}>{txtMainHeading}</span>\n            <span className={alertStyles.alertDangerInfo}>{txtSubHeading}</span>\n        </div>\n    )\n}\n\n\nexport {\n    Alert\n}","import React, { useEffect, useState } from 'react'\nimport styles from './styles.module.css'\n\nimport { Alert } from './components'\n\nexport const ReactInternetSpeedMeter = ({\n  txtMainHeading = 'Opps...',\n  outputType = 'alert',\n  customClassName,\n  pingInterval = 30000,\n  thresholdUnit = 'megabyte',\n  threshold = 7,\n  txtSubHeading = 'Diconnected from internet',\n  imageUrl,\n  downloadSize, //bytes\n  callbackFunctionOnNetworkDown = () => console.log('No callback on Network Down'),\n  callbackFunctionOnNetworkTest = () => console.log('No callback On Network test'),\n  callbackFunctionOnError = () => console.log('error in downloading image')\n}) => {\n  const [isNetworkDown, setisNetworkDown] = useState(false)\n  let intervalFun\n\n  window.addEventListener('offline', () => setisNetworkDown(true));\n  window.addEventListener('online', () => setisNetworkDown(false));\n\n  const startCalculating = () => {\n    return window.setTimeout(MeasureConnectionSpeed, pingInterval);\n  }\n\n  useEffect(() => {\n    intervalFun = startCalculating()\n    return () => window.clearInterval(intervalFun)\n  }, [])\n\n  const MeasureConnectionSpeed = () => {\n    var startTime, endTime;\n    var download = new Image();\n    startTime = (new Date()).getTime();\n\n    var cacheBuster = '?nnn=' + startTime;\n    download.src = imageUrl + cacheBuster;\n\n    download.onload = function (d) {\n      endTime = (new Date()).getTime();\n      showResults(startTime, endTime);\n    }\n\n    download.onerror = function (err, msg) {\n      console.log('err', err)\n      callbackFunctionOnError(err)\n      window.clearInterval(intervalFun)\n    }\n    startCalculating()\n  }\n\n  const showResults = (startTime, endTime) => {\n    const duration = (endTime - startTime) / 1000;\n\n    const bitsLoaded = downloadSize * 8;\n    const speedBps = (bitsLoaded / duration).toFixed(2);\n    const speedKbps = (speedBps / 1024).toFixed(2);\n    const speedMbps = (speedKbps / 1024).toFixed(2);\n\n    setNetworStatus(speedBps, speedKbps, speedMbps)\n  }\n\n  const setNetworStatus = (speedBps, speedKbps, speedMbps) => {\n    if (thresholdUnit === 'byte') {\n      if (speedBps < threshold) {\n        setisNetworkDown(true)\n        callbackFunctionOnNetworkDown(speedBps)\n      } else {\n        setisNetworkDown(false)\n      }\n      callbackFunctionOnNetworkTest(speedBps)\n    }\n    else if (thresholdUnit === 'kilobyte') {\n      if (speedKbps < threshold) {\n        setisNetworkDown(true)\n        callbackFunctionOnNetworkDown(speedKbps)\n      } else {\n        setisNetworkDown(false)\n      }\n      callbackFunctionOnNetworkTest(speedKbps)\n\n    }\n    else if (thresholdUnit === 'megabyte') {\n      if (speedMbps < threshold) {\n        setisNetworkDown(true)\n        callbackFunctionOnNetworkDown(speedMbps)\n      } else {\n        setisNetworkDown(false)\n      }\n      callbackFunctionOnNetworkTest(speedMbps)\n\n    }\n    else {\n      console.log('Invalid thresholdUnit')\n    }\n  }\n\n  if (isNetworkDown) {\n    if (outputType === 'alert') {\n      return <Alert\n        alertStyles={styles}\n        customClassName={customClassName}\n        txtMainHeading={txtMainHeading}\n        txtSubHeading={txtSubHeading} />\n    }\n\n    return <div />\n  }\n  return <div />\n}\n"]},"metadata":{},"sourceType":"module"}