{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/components/News/NewSearchForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport PropTypes from 'prop-types';\nimport { themeContext } from '../../context/authContext';\nimport { ButtonStyled, TextFieldStyled } from 'components/globalStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class NewSearchFormClass extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      query: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        query: e.currentTarget.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.onSubmit(this.state.query);\n      this.setState({\n        query: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(themeContext.Consumer, {\n      children: _ref => {\n        let {\n          mainTheme\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextFieldStyled, {\n            colors: mainTheme.colors,\n            type: \"text\",\n            value: this.state.query,\n            onChange: this.handleChange,\n            id: \"outlined-basic\",\n            label: \"Text News\",\n            variant: \"outlined\",\n            size: \"small\",\n            color: \"secondary\",\n            hoverColor: \"primary\",\n            focused: \"focused\",\n            darkTheme: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(ButtonStyled, {\n            style: {\n              fontSize: '10px',\n              marginLeft: '10px'\n            },\n            endIcon: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 16\n            }, this),\n            colors: mainTheme.colors,\n            type: \"submit\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;\nNewSearchFormClass.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport function NewSearchFormHooks(_ref2) {\n  _s();\n\n  let {\n    onSubmit\n  } = _ref2;\n\n  /*\n  * instead of using state in class, we use useState hook to create state in functional component Hook\n  * useState => returns array with two elements: [x, setX], where x is element of state and setX is function to change it\n  * It is good practice to use useState hook for single element of state in functional component, because it is easier to control\n  */\n  const [query, setQuery] = useState('');\n  /*\n  * in Hook function component instead of methods of the class we use functions inside functional component\n  */\n\n  const handleChange = e => setQuery(e.currentTarget.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n  /*\n  * TextField => styled input taken from Mui library\n  * Button => styled button taken from Mui library, with icon (SearchIcon)\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(themeContext.Consumer, {\n    children: _ref3 => {\n      let {\n        mainTheme\n      } = _ref3;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextFieldStyled, {\n          colors: mainTheme.colors,\n          type: \"text\",\n          value: query,\n          onChange: handleChange,\n          id: \"outlined-basic\",\n          label: \"Text News\",\n          variant: \"outlined\",\n          size: \"small\",\n          color: \"secondary\",\n          hoverColor: \"primary\",\n          focused: \"focused\",\n          darkTheme: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ButtonStyled, {\n          style: {\n            fontSize: '10px',\n            marginLeft: '10px'\n          },\n          endIcon: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 16\n          }, this),\n          colors: mainTheme.colors,\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewSearchFormHooks, \"qO/HZodsWTfJhuzZtdaxiosei2U=\");\n\n_c = NewSearchFormHooks;\n;\nNewSearchFormHooks.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"NewSearchFormHooks\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/components/News/NewSearchForm.jsx"],"names":["React","Component","useState","TextField","SearchIcon","PropTypes","themeContext","ButtonStyled","TextFieldStyled","NewSearchFormClass","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","render","mainTheme","display","alignItems","colors","fontSize","marginLeft","propTypes","func","isRequired","NewSearchFormHooks","setQuery"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport PropTypes from 'prop-types';\n\nimport { themeContext } from '../../context/authContext'\nimport { ButtonStyled, TextFieldStyled } from 'components/globalStyles';\n\n\nexport class NewSearchFormClass extends Component {\n  state = { query: '' };\n\n  handleChange = e => {\n    this.setState({ query: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <themeContext.Consumer>\n      {({mainTheme}) => (    \n      <form onSubmit={this.handleSubmit} style={{ display: 'flex', alignItems: 'center' }}>\n        <TextFieldStyled\n        colors={mainTheme.colors}\n          type=\"text\"\n          value={this.state.query}\n          onChange={this.handleChange}\n          id=\"outlined-basic\"\n          label={\"Text News\"}\n          variant=\"outlined\"\n          size=\"small\"\n          color=\"secondary\"\n          hoverColor=\"primary\"\n          focused='focused'\n          darkTheme={true}\n        />\n      <ButtonStyled \n      style={{ fontSize: '10px', marginLeft: '10px' }} \n      endIcon={<SearchIcon />} \n      colors={mainTheme.colors} \n      type=\"submit\">Search</ButtonStyled>\n      </form>\n    )}\n    </themeContext.Consumer>          \n\n    );\n  };\n};\n\nNewSearchFormClass.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n\nexport function NewSearchFormHooks({ onSubmit }) {\n  /*\n  * instead of using state in class, we use useState hook to create state in functional component Hook\n  * useState => returns array with two elements: [x, setX], where x is element of state and setX is function to change it\n  * It is good practice to use useState hook for single element of state in functional component, because it is easier to control\n  */\n  const [query, setQuery] = useState('');\n\n  /*\n  * in Hook function component instead of methods of the class we use functions inside functional component\n  */\n  const handleChange = e => setQuery(e.currentTarget.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  /*\n  * TextField => styled input taken from Mui library\n  * Button => styled button taken from Mui library, with icon (SearchIcon)\n  */\n\n  return (\n    <themeContext.Consumer>\n    {({mainTheme}) => (  \n    <form onSubmit={handleSubmit} style={{display: 'flex', alignItems: 'center'}}>\n        <TextFieldStyled\n        colors={mainTheme.colors}\n          type=\"text\"\n          value={query}\n          onChange={handleChange}\n          id=\"outlined-basic\"\n          label={\"Text News\"}\n          variant=\"outlined\"\n          size=\"small\"\n          color=\"secondary\"\n          hoverColor=\"primary\"\n          focused='focused'\n          darkTheme={true}\n        />\n      <ButtonStyled \n      style={{ fontSize: '10px', marginLeft: '10px' }} \n      endIcon={<SearchIcon />} \n      colors={mainTheme.colors} \n      type=\"submit\">Search</ButtonStyled>\n    </form>\n    )}\n    </themeContext.Consumer>          \n  );\n};\n\nNewSearchFormHooks.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}