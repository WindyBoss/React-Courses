{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  todos: []\n};\nexport const todoSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    // addTodo: (state, { payload }) => {\n    //     state.todos.push(payload);\n    // },\n    addTodo: state => {\n      console.log(state.todos);\n    },\n    deleteTodo: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      return state.todos.filter(_ref2 => {\n        let {\n          id\n        } = _ref2;\n        return id !== payload;\n      });\n    }\n  }\n}); // export const todoSlice = createSlice({\n//     name: 'todos',\n//     initialState,\n//     reducers: {\n//         addTodo: (state, { payload }) => {\n//             state.todos.push(payload);\n//         },\n//         deleteTodo: (state, { payload }) =>\n//             state.todos.filter(({ id }) => id !== payload),\n//         // toggleComplicated: ({ todoList }, { payload }) => {\n//         //     console.log(todoList);\n//         //     return todoList.map(todo =>\n//         //         todo.id === payload ? {...todo, completed: !todo.completed } : todo\n//         //     );\n//         // },\n//     },\n// });\n\nexport const {\n  addTodo,\n  deleteTodo,\n  toggleComplicated\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/redux/todos/todoSlice.js"],"names":["createSlice","initialState","todos","todoSlice","name","reducers","addTodo","state","console","log","deleteTodo","payload","filter","id","toggleComplicated","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;AACjCI,EAAAA,IAAI,EAAE,OAD2B;AAEjCH,EAAAA,YAFiC;AAGjCI,EAAAA,QAAQ,EAAE;AACN;AACA;AACA;AAEAC,IAAAA,OAAO,EAAEC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACL,KAAlB;AACH,KAPK;AASNQ,IAAAA,UAAU,EAAE,CAACH,KAAD;AAAA,UAAQ;AAAEI,QAAAA;AAAF,OAAR;AAAA,aACRJ,KAAK,CAACL,KAAN,CAAYU,MAAZ,CAAmB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAYA,EAAE,KAAKF,OAAnB;AAAA,OAAnB,CADQ;AAAA;AATN;AAHuB,CAAD,CAA7B,C,CAiBP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAM;AAAEL,EAAAA,OAAF;AAAWI,EAAAA,UAAX;AAAuBI,EAAAA;AAAvB,IAA6CX,SAAS,CAACY,OAA7D;AAEP,eAAeZ,SAAS,CAACa,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    todos: [],\n};\n\nexport const todoSlice = createSlice({\n    name: 'todos',\n    initialState,\n    reducers: {\n        // addTodo: (state, { payload }) => {\n        //     state.todos.push(payload);\n        // },\n\n        addTodo: state => {\n            console.log(state.todos);\n        },\n\n        deleteTodo: (state, { payload }) =>\n            state.todos.filter(({ id }) => id !== payload),\n    },\n});\n\n// export const todoSlice = createSlice({\n//     name: 'todos',\n//     initialState,\n//     reducers: {\n//         addTodo: (state, { payload }) => {\n//             state.todos.push(payload);\n//         },\n\n//         deleteTodo: (state, { payload }) =>\n//             state.todos.filter(({ id }) => id !== payload),\n\n//         // toggleComplicated: ({ todoList }, { payload }) => {\n//         //     console.log(todoList);\n//         //     return todoList.map(todo =>\n//         //         todo.id === payload ? {...todo, completed: !todo.completed } : todo\n//         //     );\n//         // },\n//     },\n// });\n\nexport const { addTodo, deleteTodo, toggleComplicated } = todoSlice.actions;\n\nexport default todoSlice.reducer;"]},"metadata":{},"sourceType":"module"}