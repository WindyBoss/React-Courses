{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport todos from 'data/todos.json';\nexport const todoSlice = createSlice({\n  name: 'todos',\n  initialState: {\n    todos: [...todos],\n    filter: ''\n  },\n  reducers: {\n    addTodo: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.todos.push(payload);\n    },\n    deleteTodo: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      return { ...state,\n        todos: [...state.todos.filter(_ref3 => {\n          let {\n            id\n          } = _ref3;\n          return id !== payload;\n        })]\n      };\n    },\n    toggleComplicated: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      return { ...state,\n        todos: [...state.todos.map(todo => todo.id === payload ? { ...todo,\n          completed: !todo.completed\n        } : todo)]\n      };\n    }\n  }\n});\nexport const {\n  addTodo,\n  deleteTodo,\n  toggleComplicated\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/redux/todos/todoSlice.js"],"names":["createSlice","todos","todoSlice","name","initialState","filter","reducers","addTodo","state","payload","push","deleteTodo","id","toggleComplicated","map","todo","completed","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;AACjCG,EAAAA,IAAI,EAAE,OAD2B;AAEjCC,EAAAA,YAAY,EAAE;AAAEH,IAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ,CAAT;AAAqBI,IAAAA,MAAM,EAAE;AAA7B,GAFmB;AAGjCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,CAACC,KAAD,WAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AAC7BD,MAAAA,KAAK,CAACP,KAAN,CAAYS,IAAZ,CAAiBD,OAAjB;AACH,KAHK;AAKNE,IAAAA,UAAU,EAAE,CAACH,KAAD,YAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AAChC,aAAO,EACH,GAAGD,KADA;AAEHP,QAAAA,KAAK,EAAE,CAAC,GAAGO,KAAK,CAACP,KAAN,CAAYI,MAAZ,CAAmB;AAAA,cAAC;AAAEO,YAAAA;AAAF,WAAD;AAAA,iBAAYA,EAAE,KAAKH,OAAnB;AAAA,SAAnB,CAAJ;AAFJ,OAAP;AAIH,KAVK;AAYNI,IAAAA,iBAAiB,EAAE,CAACL,KAAD,YAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AACvC,aAAO,EACH,GAAGD,KADA;AAEHP,QAAAA,KAAK,EAAE,CACH,GAAGO,KAAK,CAACP,KAAN,CAAYa,GAAZ,CAAgBC,IAAI,IACnBA,IAAI,CAACH,EAAL,KAAYH,OAAZ,GAAsB,EAAC,GAAGM,IAAJ;AAAUC,UAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAA3B,SAAtB,GAA+DD,IADhE,CADA;AAFJ,OAAP;AAQH;AArBK;AAHuB,CAAD,CAA7B;AA4BP,OAAO,MAAM;AAAER,EAAAA,OAAF;AAAWI,EAAAA,UAAX;AAAuBE,EAAAA;AAAvB,IAA6CX,SAAS,CAACe,OAA7D;AAEP,eAAef,SAAS,CAACgB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport todos from 'data/todos.json';\n\nexport const todoSlice = createSlice({\n    name: 'todos',\n    initialState: { todos: [...todos], filter: '' },\n    reducers: {\n        addTodo: (state, { payload }) => {\n            state.todos.push(payload);\n        },\n\n        deleteTodo: (state, { payload }) => {\n            return {\n                ...state,\n                todos: [...state.todos.filter(({ id }) => id !== payload)],\n            };\n        },\n\n        toggleComplicated: (state, { payload }) => {\n            return {\n                ...state,\n                todos: [\n                    ...state.todos.map(todo =>\n                        todo.id === payload ? {...todo, completed: !todo.completed } : todo\n                    ),\n                ],\n            };\n        },\n    },\n});\n\nexport const { addTodo, deleteTodo, toggleComplicated } = todoSlice.actions;\n\nexport default todoSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}