{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/components/globalStyles.jsx\",\n    _s = $RefreshSig$();\n\nimport { createGlobalStyle } from 'styled-components';\nimport Button from '@mui/material/Button';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalStyle = createGlobalStyle`\n* {\n  box-sizing: border-box;\n  }\n  html {\n    scroll-behavior: smooth;\n  }\n  body {\n    background-color: ${props => props.theme.colors.globalBgColor};\n    min-height: 100vh;\n    margin: 0;\n    font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Oxygen', 'Ubuntu',\n    'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n    line-height: 1.5;\n    scroll-behavior: smooth;\n  }\n  img {\n    display: block;\n    max-width: 100%;\n  }\n  ul {\n    padding: 0;\n    margin: 0;\n    list-style: none;\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p {\n    margin: 0;\n  }\n`;\nexport const btnStyles = (_ref, hover) => {\n  let {\n    btnTextColor,\n    btnBgColor,\n    btnBorderColor,\n    hoverBtnColor,\n    hoverBtnBgColor\n  } = _ref;\n  return {\n    color: !hover ? `${btnTextColor}` : `${hoverBtnColor}`,\n    backgroundColor: !hover ? `${btnBgColor}` : `${hoverBtnBgColor}`,\n    border: `1px solid ${btnBorderColor}`\n  };\n};\n\nconst buttonStyle = _ref2 => {\n  let {\n    hover\n  } = _ref2;\n  return {\n    borderRadius: '6px',\n    border: '1px solid',\n    borderColor: hover ? 'black' : 'red',\n    color: hover ? 'black' : 'red',\n    padding: '8px 16px'\n  };\n};\n\nexport function ButtonStyled(_ref3) {\n  _s();\n\n  let {\n    children,\n    onClick\n  } = _ref3;\n  const [hover, setHover] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    style: buttonStyle({\n      hover\n    }),\n    onPointerOver: () => setHover(true),\n    onPointerOut: () => setHover(false),\n    onClick: onClick,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ButtonStyled, \"bRXmKus9fOZFlca/6zXTYU+twGY=\");\n\n_c = ButtonStyled;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonStyled\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/components/globalStyles.jsx"],"names":["createGlobalStyle","Button","useState","GlobalStyle","props","theme","colors","globalBgColor","btnStyles","hover","btnTextColor","btnBgColor","btnBorderColor","hoverBtnColor","hoverBtnBgColor","color","backgroundColor","border","buttonStyle","borderRadius","borderColor","padding","ButtonStyled","children","onClick","setHover"],"mappings":";;;AAAA,SAASA,iBAAT,QAAkC,mBAAlC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,OAAO,MAAMC,WAAW,GAAGH,iBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBI,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,aAAc;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlCO;AAqCP,OAAO,MAAMC,SAAS,GAAG,OAA6EC,KAA7E,KAAuF;AAAA,MAAtF;AAACC,IAAAA,YAAD;AAAeC,IAAAA,UAAf;AAA2BC,IAAAA,cAA3B;AAA2CC,IAAAA,aAA3C;AAA0DC,IAAAA;AAA1D,GAAsF;AAC5G,SACE;AACEC,IAAAA,KAAK,EAAE,CAACN,KAAD,GAAU,GAAEC,YAAa,EAAzB,GAA8B,GAAEG,aAAc,EADvD;AAEEG,IAAAA,eAAe,EAAE,CAACP,KAAD,GAAU,GAAEE,UAAW,EAAvB,GAA4B,GAAEG,eAAgB,EAFjE;AAGEG,IAAAA,MAAM,EAAG,aAAYL,cAAe;AAHtC,GADF;AAOH,CARM;;AAWP,MAAMM,WAAW,GAAG;AAAA,MAAC;AAACT,IAAAA;AAAD,GAAD;AAAA,SAAc;AAC9BU,IAAAA,YAAY,EAAE,KADgB;AAE9BF,IAAAA,MAAM,EAAE,WAFsB;AAG9BG,IAAAA,WAAW,EAAEX,KAAK,GAAG,OAAH,GAAa,KAHD;AAI9BM,IAAAA,KAAK,EAAEN,KAAK,GAAG,OAAH,GAAY,KAJM;AAK9BY,IAAAA,OAAO,EAAE;AALqB,GAAd;AAAA,CAApB;;AAQE,OAAO,SAASC,YAAT,QAA4C;AAAA;;AAAA,MAArB;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAqB;AAClD,QAAM,CAACf,KAAD,EAAQgB,QAAR,IAAoBvB,QAAQ,CAAC,KAAD,CAAlC;AACA,sBACC,QAAC,MAAD;AACE,IAAA,KAAK,EAAEgB,WAAW,CAAC;AAACT,MAAAA;AAAD,KAAD,CADpB;AAEE,IAAA,aAAa,EAAE,MAAKgB,QAAQ,CAAC,IAAD,CAF9B;AAGE,IAAA,YAAY,EAAE,MAAMA,QAAQ,CAAC,KAAD,CAH9B;AAIE,IAAA,OAAO,EAAED,OAJX;AAAA,cAMGD;AANH;AAAA;AAAA;AAAA;AAAA,UADD;AAUF;;GAZiBD,Y;;KAAAA,Y","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport Button from '@mui/material/Button';\nimport { useState } from 'react';\n\n\nexport const GlobalStyle = createGlobalStyle`\n* {\n  box-sizing: border-box;\n  }\n  html {\n    scroll-behavior: smooth;\n  }\n  body {\n    background-color: ${props => props.theme.colors.globalBgColor};\n    min-height: 100vh;\n    margin: 0;\n    font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Oxygen', 'Ubuntu',\n    'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n    line-height: 1.5;\n    scroll-behavior: smooth;\n  }\n  img {\n    display: block;\n    max-width: 100%;\n  }\n  ul {\n    padding: 0;\n    margin: 0;\n    list-style: none;\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p {\n    margin: 0;\n  }\n`;\n\n\nexport const btnStyles = ({btnTextColor, btnBgColor, btnBorderColor, hoverBtnColor, hoverBtnBgColor}, hover) => {\n    return (\n      {\n        color: !hover ? `${btnTextColor}` : `${hoverBtnColor}`, \n        backgroundColor: !hover ? `${btnBgColor}` : `${hoverBtnBgColor}`,\n        border: `1px solid ${btnBorderColor}`,\n      }\n    );\n};\n\n\nconst buttonStyle = ({hover}) => ({\n    borderRadius: '6px',\n    border: '1px solid',\n    borderColor: hover ? 'black' : 'red',\n    color: hover ? 'black': 'red',\n    padding: '8px 16px', \n  })\n\n  export function ButtonStyled ({children, onClick}) {\n   const [hover, setHover] = useState(false);    \n   return (\n    <Button\n      style={buttonStyle({hover})}\n      onPointerOver={()=> setHover(true)}\n      onPointerOut={() => setHover(false)}\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  )\n}"]},"metadata":{},"sourceType":"module"}