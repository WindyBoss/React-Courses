{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Todolist/components/TodoListWrapper.jsx\";\nimport { ListEl, TodoListContainer } from '../styles/TodoList.styled';\nimport TodoEl from './TodoEl';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TodoListWrapper(_ref) {\n  let {\n    todoList,\n    onDelete,\n    onToggle,\n    themeColors\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(TodoListContainer, {\n    children: todoList.map(_ref2 => {\n      let {\n        id,\n        name,\n        deadline,\n        description,\n        completed,\n        priority\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(ListEl, {\n        colors: themeColors,\n        children: /*#__PURE__*/_jsxDEV(TodoEl, {\n          id: id,\n          name: name,\n          deadline: deadline,\n          description: description,\n          completed: completed,\n          priority: priority,\n          deleteTask: onDelete,\n          toggleCompleted: onToggle,\n          colors: themeColors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = TodoListWrapper;\n;\nTodoListWrapper.propTypes = {\n  todoList: PropTypes.arrayOf(PropTypes.shape({\n    completed: PropTypes.bool.isRequired,\n    deadline: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    priority: PropTypes.string.isRequired\n  })).isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  themeColors: PropTypes.objectOf(PropTypes.string).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListWrapper\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Todolist/components/TodoListWrapper.jsx"],"names":["ListEl","TodoListContainer","TodoEl","PropTypes","TodoListWrapper","todoList","onDelete","onToggle","themeColors","map","id","name","deadline","description","completed","priority","propTypes","arrayOf","shape","bool","isRequired","string","func","objectOf"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,iBAAjB,QAA0C,2BAA1C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAO,SAASC,eAAT,OAKJ;AAAA,MAL6B;AAC9BC,IAAAA,QAD8B;AAE9BC,IAAAA,QAF8B;AAG9BC,IAAAA,QAH8B;AAI9BC,IAAAA;AAJ8B,GAK7B;AACD,sBACE,QAAC,iBAAD;AAAA,cACGH,QAAQ,CAACI,GAAT,CAAa;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA,QAAZ;AAAsBC,QAAAA,WAAtB;AAAmCC,QAAAA,SAAnC;AAA8CC,QAAAA;AAA9C,OAAD;AAAA,0BACZ,QAAC,MAAD;AAAiB,QAAA,MAAM,EAAEP,WAAzB;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,EAAE,EAAEE,EADN;AAEE,UAAA,IAAI,EAAEC,IAFR;AAGE,UAAA,QAAQ,EAAEC,QAHZ;AAIE,UAAA,WAAW,EAAEC,WAJf;AAKE,UAAA,SAAS,EAAEC,SALb;AAME,UAAA,QAAQ,EAAEC,QANZ;AAOE,UAAA,UAAU,EAAET,QAPd;AAQE,UAAA,eAAe,EAAEC,QARnB;AASE,UAAA,MAAM,EAAEC;AATV;AAAA;AAAA;AAAA;AAAA;AADF,SAAaE,EAAb;AAAA;AAAA;AAAA;AAAA,cADY;AAAA,KAAb;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;KAzBeN,e;AAyBf;AAGDA,eAAe,CAACY,SAAhB,GAA4B;AAC1BX,EAAAA,QAAQ,EAAEF,SAAS,CAACc,OAAV,CAAkBd,SAAS,CAACe,KAAV,CAAgB;AAC1CJ,IAAAA,SAAS,EAAEX,SAAS,CAACgB,IAAV,CAAeC,UADgB;AAE1CR,IAAAA,QAAQ,EAAET,SAAS,CAACkB,MAAV,CAAiBD,UAFe;AAG1CP,IAAAA,WAAW,EAAEV,SAAS,CAACkB,MAAV,CAAiBD,UAHY;AAI1CV,IAAAA,EAAE,EAAEP,SAAS,CAACkB,MAAV,CAAiBD,UAJqB;AAK1CT,IAAAA,IAAI,EAAER,SAAS,CAACkB,MAAV,CAAiBD,UALmB;AAM1CL,IAAAA,QAAQ,EAAEZ,SAAS,CAACkB,MAAV,CAAiBD;AANe,GAAhB,CAAlB,EAONA,UARsB;AAS1Bd,EAAAA,QAAQ,EAAEH,SAAS,CAACmB,IAAV,CAAeF,UATC;AAU1Bb,EAAAA,QAAQ,EAAEJ,SAAS,CAACmB,IAAV,CAAeF,UAVC;AAW1BZ,EAAAA,WAAW,EAAEL,SAAS,CAACoB,QAAV,CAAmBpB,SAAS,CAACkB,MAA7B,EAAqCD;AAXxB,CAA5B","sourcesContent":["import { ListEl, TodoListContainer } from '../styles/TodoList.styled';\nimport TodoEl from './TodoEl';\nimport PropTypes from 'prop-types';\n\nexport function TodoListWrapper({\n  todoList,\n  onDelete,\n  onToggle,\n  themeColors,\n}) {\n  return (\n    <TodoListContainer>\n      {todoList.map(({ id, name, deadline, description, completed, priority }) => (\n        <ListEl key={id} colors={themeColors}>\n          <TodoEl\n            id={id}\n            name={name}\n            deadline={deadline}\n            description={description}\n            completed={completed}\n            priority={priority}\n            deleteTask={onDelete}\n            toggleCompleted={onToggle}\n            colors={themeColors}\n          />\n        </ListEl>\n      ))}\n    </TodoListContainer>\n  );\n};\n\n\nTodoListWrapper.propTypes = {\n  todoList: PropTypes.arrayOf(PropTypes.shape({\n    completed: PropTypes.bool.isRequired,\n    deadline: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    priority: PropTypes.string.isRequired,\n  })).isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  themeColors: PropTypes.objectOf(PropTypes.string).isRequired,\n};"]},"metadata":{},"sourceType":"module"}