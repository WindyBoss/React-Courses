{"ast":null,"code":"import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport counterReducer from './counter/counterSlice';\nimport storage from 'reduxjs-toolkit-persist/lib/storage';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport apiService from 'service/apiService';\nimport { persistReducer, persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'reduxjs-toolkit-persist';\nimport logger from 'redux-logger';\nconst persistConfig = {\n  key: 'root',\n  storage: storage\n};\nconst persistClickConfig = {\n  key: 'clicks',\n  storage: storage\n};\nconst rootReducer = combineReducers({\n  todoList: persistReducer(persistConfig, apiService.reducer),\n  counter: persistReducer(persistClickConfig, counterReducer)\n});\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  }).concat(apiService.middleware).concat(logger),\n  devTools: process.env.NODE_ENV !== 'production',\n  enhancers: defaultEnhancers => {\n    console.log(defaultEnhancers);\n    return defaultEnhancers;\n  }\n});\nsetupListeners(store.dispatch);\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/redux/store.js"],"names":["configureStore","combineReducers","counterReducer","storage","setupListeners","apiService","persistReducer","persistStore","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","persistClickConfig","rootReducer","todoList","reducer","counter","store","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","devTools","process","env","NODE_ENV","enhancers","defaultEnhancers","console","log","dispatch","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,OAAP,MAAoB,qCAApB;AAEA,SAASC,cAAT,QAA+B,wBAA/B;AAEA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,SACIC,cADJ,EAEIC,YAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,KAPJ,EAQIC,QARJ,QASO,yBATP;AAWA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBb,EAAAA,OAAO,EAAEA;AAFS,CAAtB;AAKA,MAAMc,kBAAkB,GAAG;AACvBD,EAAAA,GAAG,EAAE,QADkB;AAEvBb,EAAAA,OAAO,EAAEA;AAFc,CAA3B;AAKA,MAAMe,WAAW,GAAGjB,eAAe,CAAC;AAChCkB,EAAAA,QAAQ,EAAEb,cAAc,CAACS,aAAD,EAAgBV,UAAU,CAACe,OAA3B,CADQ;AAEhCC,EAAAA,OAAO,EAAEf,cAAc,CAACW,kBAAD,EAAqBf,cAArB;AAFS,CAAD,CAAnC;AAKA,MAAMoB,KAAK,GAAGtB,cAAc,CAAC;AACzBoB,EAAAA,OAAO,EAAEF,WADgB;AAEzBK,EAAAA,UAAU,EAAEC,oBAAoB,IAC5BA,oBAAoB,CAAC;AACjBC,IAAAA,iBAAiB,EAAE;AACfC,MAAAA,cAAc,EAAE,CAAClB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADD;AADF,GAAD,CAApB,CAKCc,MALD,CAKQtB,UAAU,CAACkB,UALnB,EAMCI,MAND,CAMQb,MANR,CAHqB;AAUzBc,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAVV;AAWzBC,EAAAA,SAAS,EAAEC,gBAAgB,IAAI;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,gBAAZ;AACA,WAAOA,gBAAP;AACH;AAdwB,CAAD,CAA5B;AAgBA7B,cAAc,CAACkB,KAAK,CAACc,QAAP,CAAd;AACA,MAAMC,SAAS,GAAG9B,YAAY,CAACe,KAAD,CAA9B;AAEA,SAASA,KAAT,EAAgBe,SAAhB","sourcesContent":["import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport counterReducer from './counter/counterSlice';\nimport storage from 'reduxjs-toolkit-persist/lib/storage';\n\nimport { setupListeners } from '@reduxjs/toolkit/query';\n\nimport apiService from 'service/apiService';\n\nimport {\n    persistReducer,\n    persistStore,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'reduxjs-toolkit-persist';\n\nimport logger from 'redux-logger';\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n};\n\nconst persistClickConfig = {\n    key: 'clicks',\n    storage: storage,\n};\n\nconst rootReducer = combineReducers({\n    todoList: persistReducer(persistConfig, apiService.reducer),\n    counter: persistReducer(persistClickConfig, counterReducer),\n});\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware: getDefaultMiddleware =>\n        getDefaultMiddleware({\n            serializableCheck: {\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n            },\n        })\n        .concat(apiService.middleware)\n        .concat(logger),\n    devTools: process.env.NODE_ENV !== 'production',\n    enhancers: defaultEnhancers => {\n        console.log(defaultEnhancers);\n        return defaultEnhancers;\n    },\n});\nsetupListeners(store.dispatch);\nconst persistor = persistStore(store);\n\nexport { store, persistor };"]},"metadata":{},"sourceType":"module"}