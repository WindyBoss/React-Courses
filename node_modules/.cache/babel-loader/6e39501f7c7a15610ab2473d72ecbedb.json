{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/components/SignupForm/FormElement.jsx\";\nimport React from \"react\";\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik, Field, Form } from 'formik';\nimport { FormContainer, FormLabel, LabelName, SubmitButton } from './SignupForm.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupSchema = Yup.object().shape({\n  email: Yup.string().required('Required'),\n  password: Yup.string().required('Required')\n});\nexport const FormElement = _ref => {\n  let {\n    onSubmit\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      autocomplete: \"off\",\n      validationSchema: SignupSchema,\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      onSubmit: onSubmit,\n      children: _ref2 => {\n        let {\n          isSubmitting\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(FormContainer, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              className: \"label-hover\",\n              children: [/*#__PURE__*/_jsxDEV(LabelName, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"email\",\n                name: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              className: \"label-hover\",\n              children: [/*#__PURE__*/_jsxDEV(LabelName, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                name: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n              type: \"submit\",\n              variant: \"contained\",\n              style: {\n                marginLeft: 'auto'\n              },\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = FormElement;\nFormElement.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FormElement\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/components/SignupForm/FormElement.jsx"],"names":["React","Yup","PropTypes","Formik","Field","Form","FormContainer","FormLabel","LabelName","SubmitButton","SignupSchema","object","shape","email","string","required","password","FormElement","onSubmit","isSubmitting","marginLeft","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,QAApC;AAEA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,SAAnC,EAA8CC,YAA9C,QAAkE,qBAAlE;;AAEA,MAAMC,YAAY,GAAGT,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;AACtCC,EAAAA,KAAK,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CAD+B;AAEtCC,EAAAA,QAAQ,EAAEf,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,UAAtB;AAF4B,CAAnB,CAArB;AAKA,OAAO,MAAME,WAAW,GAAG,QAAkB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC3C,sBACE;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAC,KAArB;AACE,MAAA,gBAAgB,EAAER,YADpB;AAEE,MAAA,aAAa,EAAE;AAAEG,QAAAA,KAAK,EAAE,EAAT;AAAaG,QAAAA,QAAQ,EAAE;AAAvB,OAFjB;AAGE,MAAA,QAAQ,EAAEE,QAHZ;AAAA,gBAKG;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,4BACC,QAAC,IAAD;AAAA,iCACE,QAAC,aAAD;AAAA,oCACE,QAAC,SAAD;AAAW,cAAA,SAAS,EAAC,aAArB;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,OAAZ;AAAoB,gBAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAME,QAAC,SAAD;AAAW,cAAA,SAAS,EAAC,aAArB;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAWE,QAAC,YAAD;AAAc,cAAA,IAAI,EAAC,QAAnB;AAA4B,cAAA,OAAO,EAAC,WAApC;AAAgD,cAAA,KAAK,EAAE;AAACC,gBAAAA,UAAU,EAAE;AAAb,eAAvD;AAA6E,cAAA,QAAQ,EAAED,YAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD;AAAA;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BA,CA5BK;KAAMF,W;AA8BZA,WAAW,CAACI,SAAZ,GAAwB;AACvBH,EAAAA,QAAQ,EAAEhB,SAAS,CAACoB,IAAV,CAAeC;AADF,CAAxB","sourcesContent":["import React from \"react\";\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik, Field, Form } from 'formik';\n\nimport { FormContainer, FormLabel, LabelName, SubmitButton } from './SignupForm.styled';\n\nconst SignupSchema = Yup.object().shape({\n  email: Yup.string().required('Required'),\n  password: Yup.string().required('Required'),\n});\n\nexport const FormElement = ({ onSubmit }) => {\n  return (\n    <div>\n      <Formik autocomplete=\"off\"\n        validationSchema={SignupSchema}\n        initialValues={{ email: '', password: '' }}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <FormContainer>\n              <FormLabel className='label-hover'>\n                <LabelName>Email</LabelName>\n                <Field type=\"email\" name=\"email\"></Field>\n              </FormLabel>\n\n              <FormLabel className='label-hover'>\n                <LabelName>Password</LabelName>\n                <Field type='text' name=\"password\"></Field>\n              </FormLabel>\n\n              <SubmitButton type=\"submit\" variant=\"contained\" style={{marginLeft: 'auto'}} disabled={isSubmitting}>Submit</SubmitButton>\n            </FormContainer>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n }\n\n FormElement.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n"]},"metadata":{},"sourceType":"module"}