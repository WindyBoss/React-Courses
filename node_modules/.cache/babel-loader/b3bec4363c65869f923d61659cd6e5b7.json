{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Todos/Todos.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useGetTodosQuery } from 'service/apiService';\nimport { TodoListWrapper } from './components/TodoListWrapper';\nimport TodoFilter from './components/TodoFilter';\nimport TodoEditor from './components/TodoEditor';\nimport ModalWindow from 'components/ModalWindow';\nimport { StyledList, HeaderTextContainer, Text } from './styles/TodoList.styled';\nimport { themeContext } from 'context/themeContext';\nimport { ButtonStyled } from 'components/CommonComponents';\nimport CreateTwoToneIcon from '@mui/icons-material/CreateTwoTone';\nimport { useModal } from 'hooks';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function Todos() {\n  _s();\n\n  const [showModal, toggleModal] = useModal(false);\n  const listRef = /*#__PURE__*/React.createRef();\n  const {\n    data\n  } = await useGetTodosQuery();\n  console.log(data);\n  /*\n   * useDispatch - connect actions with active UI elements\n   * useSelector - returns state elements\n   */\n\n  const dispatch = useDispatch();\n  const storeTodos = useSelector(state => state.todoList.todos);\n  const filter = useSelector(state => state.todoList.filter);\n\n  const filterTodos = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return storeTodos.filter(todo => todo.name.includes(normalizedFilter) || todo.description.includes(normalizedFilter));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Todos, \"HDB2SzzAXqt/H/PtxpzojUdgppo=\", false, function () {\n  return [useModal, useGetTodosQuery, useDispatch, useSelector, useSelector];\n});\n\n_c = Todos;\n\nfunction TodoContainer(_ref) {\n  _s2();\n\n  let {\n    listRef,\n    completedTasksNumber,\n    todos,\n    filterTasks,\n    toggleModal,\n    deleteTask,\n    toggleCompleted,\n    addTask,\n    showModal\n  } = _ref;\n  const {\n    mainTheme\n  } = useContext(themeContext);\n  return /*#__PURE__*/_jsxDEV(StyledList, {\n    ref: listRef,\n    children: [/*#__PURE__*/_jsxDEV(HeaderTextContainer, {\n      colors: mainTheme.colors,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Year Task List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Completed: \", completedTasksNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Total: \", todos.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoFilter, {\n        colors: mainTheme.colors,\n        onChange: filterTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonStyled, {\n        colors: mainTheme.colors,\n        onClick: toggleModal,\n        \"aria-label\": \"showModal\",\n        endIcon: /*#__PURE__*/_jsxDEV(CreateTwoToneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 20\n        }, this),\n        addFeat: {\n          position: 'absolute',\n          right: '10px',\n          top: '10px'\n        },\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoListWrapper, {\n      todoList: todos,\n      onDelete: deleteTask,\n      onToggle: toggleCompleted,\n      themeColors: mainTheme.colors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(ModalWindow, {\n      todolist: \"todolist\",\n      onSubmit: addTask,\n      onClick: toggleModal,\n      mainTheme: mainTheme,\n      children: /*#__PURE__*/_jsxDEV(TodoEditor, {\n        colors: mainTheme.colors,\n        onSubmit: addTask,\n        onClick: toggleModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(TodoContainer, \"6O+QO+COAUPkhIjn1biEpC1Pcjc=\");\n\n_c2 = TodoContainer;\nexport default Todos;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Todos\");\n$RefreshReg$(_c2, \"TodoContainer\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Todos/Todos.jsx"],"names":["React","useContext","useState","useEffect","useSelector","useDispatch","useGetTodosQuery","TodoListWrapper","TodoFilter","TodoEditor","ModalWindow","StyledList","HeaderTextContainer","Text","themeContext","ButtonStyled","CreateTwoToneIcon","useModal","Todos","showModal","toggleModal","listRef","createRef","data","console","log","dispatch","storeTodos","state","todoList","todos","filter","filterTodos","normalizedFilter","toLowerCase","todo","name","includes","description","TodoContainer","completedTasksNumber","filterTasks","deleteTask","toggleCompleted","addTask","mainTheme","colors","length","position","right","top"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { useGetTodosQuery } from 'service/apiService';\n\nimport { TodoListWrapper } from './components/TodoListWrapper';\nimport TodoFilter from './components/TodoFilter';\nimport TodoEditor from './components/TodoEditor';\nimport ModalWindow from 'components/ModalWindow';\n\nimport {\n  StyledList,\n  HeaderTextContainer,\n  Text,\n} from './styles/TodoList.styled';\n\nimport { themeContext } from 'context/themeContext';\n\nimport { ButtonStyled } from 'components/CommonComponents';\nimport CreateTwoToneIcon from '@mui/icons-material/CreateTwoTone';\n\nimport { useModal } from 'hooks';\n\nasync function Todos () {\n  const [showModal, toggleModal] = useModal(false);\n  const listRef = React.createRef();\n\n  const { data } = await useGetTodosQuery();\n\n  console.log(data);\n\n  /*\n   * useDispatch - connect actions with active UI elements\n   * useSelector - returns state elements\n   */\n\n  const dispatch = useDispatch();\n  const storeTodos = useSelector(state => state.todoList.todos);\n  const filter = useSelector(state => state.todoList.filter);\n\n  const filterTodos = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return storeTodos.filter(\n      todo =>\n        todo.name.includes(normalizedFilter) ||\n        todo.description.includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <>\n      {/* {isLoading && <>Loading...</>}\n      {isSuccess && <>isSuccess...</>}\n      {isError && <>isError...</>} */}\n    </>\n  );\n}\n\nfunction TodoContainer({\n  listRef,\n  completedTasksNumber,\n  todos,\n  filterTasks,\n  toggleModal,\n  deleteTask,\n  toggleCompleted,\n  addTask,\n  showModal,\n}) {\n  const { mainTheme } = useContext(themeContext);\n\n  return (\n    <StyledList ref={listRef}>\n      <HeaderTextContainer colors={mainTheme.colors}>\n        <h2>Year Task List</h2>\n        <Text>Completed: {completedTasksNumber}</Text>\n        <Text>Total: {todos.length}</Text>\n        <TodoFilter colors={mainTheme.colors} onChange={filterTasks} />\n        <ButtonStyled\n          colors={mainTheme.colors}\n          onClick={toggleModal}\n          aria-label=\"showModal\"\n          endIcon={<CreateTwoToneIcon />}\n          addFeat={{ position: 'absolute', right: '10px', top: '10px' }}\n        >\n          Add Task\n        </ButtonStyled>\n      </HeaderTextContainer>\n\n      <TodoListWrapper\n        todoList={todos}\n        onDelete={deleteTask}\n        onToggle={toggleCompleted}\n        themeColors={mainTheme.colors}\n      />\n      {showModal && (\n        <ModalWindow\n          todolist=\"todolist\"\n          onSubmit={addTask}\n          onClick={toggleModal}\n          mainTheme={mainTheme}\n        >\n          <TodoEditor\n            colors={mainTheme.colors}\n            onSubmit={addTask}\n            onClick={toggleModal}\n          />\n        </ModalWindow>\n      )}\n    </StyledList>\n  );\n}\n\nexport default Todos;\n"]},"metadata":{},"sourceType":"module"}