{"ast":null,"code":"// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { PureComponent } from 'react';\nexport class PersistGate extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      bootstrapped: false\n    };\n\n    this.handlePersistorState = () => {\n      const {\n        persistor\n      } = this.props;\n      const {\n        bootstrapped\n      } = persistor.getState();\n\n      if (bootstrapped) {\n        if (this.props.onBeforeLift) {\n          Promise.resolve(this.props.onBeforeLift()).finally(() => this.setState({\n            bootstrapped: true\n          }));\n        } else {\n          this.setState({\n            bootstrapped: true\n          });\n        }\n\n        this._unsubscribe && this._unsubscribe();\n      }\n    };\n  }\n\n  componentDidMount() {\n    this._unsubscribe = this.props.persistor.subscribe(this.handlePersistorState.bind(this));\n    this.handlePersistorState();\n  }\n\n  componentWillUnmount() {\n    this._unsubscribe && this._unsubscribe();\n  }\n\n  render() {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof this.props.children === 'function' && this.props.loading) console.error('reduxjs-toolkit-persist: PersistGate expects either a function child or loading prop, but not both. The loading prop will be ignored.');\n    }\n\n    if (typeof this.props.children === 'function') {\n      return this.props.children(this.state.bootstrapped);\n    }\n\n    return this.state.bootstrapped ? this.props.children : this.props.loading;\n  }\n\n}\nPersistGate.defaultProps = {\n  children: null,\n  loading: null\n};","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/node_modules/reduxjs-toolkit-persist/es/integration/react.js"],"names":["PureComponent","PersistGate","constructor","arguments","state","bootstrapped","handlePersistorState","persistor","props","getState","onBeforeLift","Promise","resolve","finally","setState","_unsubscribe","componentDidMount","subscribe","bind","componentWillUnmount","render","process","env","NODE_ENV","children","loading","console","error","defaultProps"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,OAA9B;AACA,OAAO,MAAMC,WAAN,SAA0BD,aAA1B,CAAwC;AAC3CE,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;;AAGA,SAAKC,oBAAL,GAA4B,MAAM;AAC9B,YAAM;AAAEC,QAAAA;AAAF,UAAgB,KAAKC,KAA3B;AACA,YAAM;AAAEH,QAAAA;AAAF,UAAmBE,SAAS,CAACE,QAAV,EAAzB;;AACA,UAAIJ,YAAJ,EAAkB;AACd,YAAI,KAAKG,KAAL,CAAWE,YAAf,EAA6B;AACzBC,UAAAA,OAAO,CAACC,OAAR,CAAgB,KAAKJ,KAAL,CAAWE,YAAX,EAAhB,EACKG,OADL,CACa,MAAM,KAAKC,QAAL,CAAc;AAAET,YAAAA,YAAY,EAAE;AAAhB,WAAd,CADnB;AAEH,SAHD,MAIK;AACD,eAAKS,QAAL,CAAc;AAAET,YAAAA,YAAY,EAAE;AAAhB,WAAd;AACH;;AACD,aAAKU,YAAL,IAAqB,KAAKA,YAAL,EAArB;AACH;AACJ,KAbD;AAcH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,YAAL,GAAoB,KAAKP,KAAL,CAAWD,SAAX,CAAqBU,SAArB,CAA+B,KAAKX,oBAAL,CAA0BY,IAA1B,CAA+B,IAA/B,CAA/B,CAApB;AACA,SAAKZ,oBAAL;AACH;;AACDa,EAAAA,oBAAoB,GAAG;AACnB,SAAKJ,YAAL,IAAqB,KAAKA,YAAL,EAArB;AACH;;AACDK,EAAAA,MAAM,GAAG;AACL,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvC,UAAI,OAAO,KAAKf,KAAL,CAAWgB,QAAlB,KAA+B,UAA/B,IAA6C,KAAKhB,KAAL,CAAWiB,OAA5D,EACIC,OAAO,CAACC,KAAR,CAAc,uIAAd;AACP;;AACD,QAAI,OAAO,KAAKnB,KAAL,CAAWgB,QAAlB,KAA+B,UAAnC,EAA+C;AAC3C,aAAO,KAAKhB,KAAL,CAAWgB,QAAX,CAAoB,KAAKpB,KAAL,CAAWC,YAA/B,CAAP;AACH;;AACD,WAAO,KAAKD,KAAL,CAAWC,YAAX,GAA0B,KAAKG,KAAL,CAAWgB,QAArC,GAAgD,KAAKhB,KAAL,CAAWiB,OAAlE;AACH;;AArC0C;AAuC/CxB,WAAW,CAAC2B,YAAZ,GAA2B;AACvBJ,EAAAA,QAAQ,EAAE,IADa;AAEvBC,EAAAA,OAAO,EAAE;AAFc,CAA3B","sourcesContent":["// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { PureComponent } from 'react';\nexport class PersistGate extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            bootstrapped: false,\n        };\n        this.handlePersistorState = () => {\n            const { persistor } = this.props;\n            const { bootstrapped } = persistor.getState();\n            if (bootstrapped) {\n                if (this.props.onBeforeLift) {\n                    Promise.resolve(this.props.onBeforeLift())\n                        .finally(() => this.setState({ bootstrapped: true }));\n                }\n                else {\n                    this.setState({ bootstrapped: true });\n                }\n                this._unsubscribe && this._unsubscribe();\n            }\n        };\n    }\n    componentDidMount() {\n        this._unsubscribe = this.props.persistor.subscribe(this.handlePersistorState.bind(this));\n        this.handlePersistorState();\n    }\n    componentWillUnmount() {\n        this._unsubscribe && this._unsubscribe();\n    }\n    render() {\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof this.props.children === 'function' && this.props.loading)\n                console.error('reduxjs-toolkit-persist: PersistGate expects either a function child or loading prop, but not both. The loading prop will be ignored.');\n        }\n        if (typeof this.props.children === 'function') {\n            return this.props.children(this.state.bootstrapped);\n        }\n        return this.state.bootstrapped ? this.props.children : this.props.loading;\n    }\n}\nPersistGate.defaultProps = {\n    children: null,\n    loading: null\n};\n"]},"metadata":{},"sourceType":"module"}