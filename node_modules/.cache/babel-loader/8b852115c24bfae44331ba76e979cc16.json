{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Todos/Todos.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation } from 'service/apiService';\nimport { TodoListWrapper } from './components/TodoListWrapper';\nimport TodoFilter from './components/TodoFilter';\nimport TodoEditor from './components/TodoEditor';\nimport ModalWindow from 'components/ModalWindow';\nimport { StyledList, HeaderTextContainer, Text } from './styles/TodoList.styled';\nimport { themeContext } from 'context/themeContext';\nimport { ButtonStyled } from 'components/CommonComponents';\nimport CreateTwoToneIcon from '@mui/icons-material/CreateTwoTone';\nimport { useModal } from 'hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Todos() {\n  _s();\n\n  const [showModal, toggleModal] = useModal(false); // const [addTodo] = useAddTodoMutation();\n  // const [updateTodo] = useUpdateTodoMutation();\n  // const [deleteTodo] = useDeleteTodoMutation();\n\n  /*\n   * useDispatch - connect actions with active UI elements\n   * useSelector - returns state elements\n   */\n\n  const storeTodos = useSelector(state => state.todoList.todos);\n\n  const filterTodos = e => {\n    if (!e) {\n      return storeTodos;\n    }\n\n    ;\n    const filter = e.target.value;\n    const normalizedFilter = filter.toLowerCase();\n    console.log(storeTodos.filter(todo => todo.name.includes(normalizedFilter) || todo.description.includes(normalizedFilter)));\n    return storeTodos.filter(todo => todo.name.includes(normalizedFilter) || todo.description.includes(normalizedFilter));\n  };\n\n  console.log(filterTodos());\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TodoContainer // listRef={listRef}\n    // diffLength={diff.length}\n    // completedTasksNumber={completedTasksNumber}\n    , {\n      todos: filterTodos(),\n      filterTasks: filterTodos,\n      toggleModal: toggleModal // deleteTask={deleteTask}\n      // toggleCompleted={toggleCompleted}\n      // addTask={addTask}\n      ,\n      showModal: showModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Todos, \"m9iGMdpGxe/XRGbw+t2FnwExbtQ=\", false, function () {\n  return [useModal, useSelector];\n});\n\n_c = Todos;\n\nfunction TodoContainer(_ref) {\n  _s2();\n\n  let {\n    listRef,\n    completedTasksNumber,\n    todos,\n    filterTasks,\n    toggleModal,\n    deleteTask,\n    toggleCompleted,\n    addTask,\n    showModal\n  } = _ref;\n  const {\n    mainTheme\n  } = useContext(themeContext);\n  return (\n    /*#__PURE__*/\n    // <StyledList ref={listRef}>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderTextContainer, {\n        colors: mainTheme.colors,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Year Task List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Completed: \", completedTasksNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Total: \", todos.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TodoFilter, {\n          colors: mainTheme.colors,\n          onChange: filterTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ButtonStyled, {\n          colors: mainTheme.colors,\n          onClick: toggleModal,\n          \"aria-label\": \"showModal\",\n          endIcon: /*#__PURE__*/_jsxDEV(CreateTwoToneIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 20\n          }, this),\n          addFeat: {\n            position: 'absolute',\n            right: '10px',\n            top: '10px'\n          },\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TodoListWrapper, {\n        todoList: todos,\n        onDelete: deleteTask,\n        onToggle: toggleCompleted,\n        themeColors: mainTheme.colors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), showModal && /*#__PURE__*/_jsxDEV(ModalWindow, {\n        todolist: \"todolist\",\n        onSubmit: addTask,\n        onClick: toggleModal,\n        mainTheme: mainTheme,\n        children: /*#__PURE__*/_jsxDEV(TodoEditor, {\n          colors: mainTheme.colors,\n          onSubmit: addTask,\n          onClick: toggleModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) // </StyledList>\n\n  );\n}\n\n_s2(TodoContainer, \"6O+QO+COAUPkhIjn1biEpC1Pcjc=\");\n\n_c2 = TodoContainer;\nexport default Todos;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Todos\");\n$RefreshReg$(_c2, \"TodoContainer\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Todos/Todos.jsx"],"names":["React","useContext","useState","useEffect","useSelector","useDispatch","useGetTodosQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation","TodoListWrapper","TodoFilter","TodoEditor","ModalWindow","StyledList","HeaderTextContainer","Text","themeContext","ButtonStyled","CreateTwoToneIcon","useModal","Todos","showModal","toggleModal","storeTodos","state","todoList","todos","filterTodos","e","filter","target","value","normalizedFilter","toLowerCase","console","log","todo","name","includes","description","TodoContainer","listRef","completedTasksNumber","filterTasks","deleteTask","toggleCompleted","addTask","mainTheme","colors","length","position","right","top"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  useGetTodosQuery,\n  useAddTodoMutation,\n  useUpdateTodoMutation,\n  useDeleteTodoMutation,\n} from 'service/apiService';\n\nimport { TodoListWrapper } from './components/TodoListWrapper';\nimport TodoFilter from './components/TodoFilter';\nimport TodoEditor from './components/TodoEditor';\nimport ModalWindow from 'components/ModalWindow';\n\nimport {\n  StyledList,\n  HeaderTextContainer,\n  Text,\n} from './styles/TodoList.styled';\n\nimport { themeContext } from 'context/themeContext';\n\nimport { ButtonStyled } from 'components/CommonComponents';\nimport CreateTwoToneIcon from '@mui/icons-material/CreateTwoTone';\n\nimport { useModal } from 'hooks';\n\nfunction Todos() {\n  const [showModal, toggleModal] = useModal(false);\n\n  // const [addTodo] = useAddTodoMutation();\n  // const [updateTodo] = useUpdateTodoMutation();\n  // const [deleteTodo] = useDeleteTodoMutation();\n\n  /*\n   * useDispatch - connect actions with active UI elements\n   * useSelector - returns state elements\n   */\n\n  const storeTodos = useSelector(state => state.todoList.todos);\n\n  const filterTodos = e => {\n    if (!e) {\n      return storeTodos;\n    };\n\n\n    const filter = e.target.value;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    console.log(storeTodos.filter(\n      todo =>\n        todo.name.includes(normalizedFilter) ||\n        todo.description.includes(normalizedFilter)\n    ));\n    return storeTodos.filter(\n      todo =>\n        todo.name.includes(normalizedFilter) ||\n        todo.description.includes(normalizedFilter)\n    );\n  };\n\n  console.log(filterTodos());\n\n  return (\n    <>\n      <TodoContainer\n        // listRef={listRef}\n        // diffLength={diff.length}\n        // completedTasksNumber={completedTasksNumber}\n        todos={filterTodos()}\n        filterTasks={filterTodos}\n        toggleModal={toggleModal}\n        // deleteTask={deleteTask}\n        // toggleCompleted={toggleCompleted}\n        // addTask={addTask}\n        showModal={showModal}\n      />\n    </>\n  );\n}\n\nfunction TodoContainer({\n  listRef,\n  completedTasksNumber,\n  todos,\n  filterTasks,\n  toggleModal,\n  deleteTask,\n  toggleCompleted,\n  addTask,\n  showModal,\n}) {\n  const { mainTheme } = useContext(themeContext);\n\n  return (\n    // <StyledList ref={listRef}>\n    <>\n      <HeaderTextContainer colors={mainTheme.colors}>\n        <h2>Year Task List</h2>\n        <Text>Completed: {completedTasksNumber}</Text>\n        <Text>Total: {todos.length}</Text>\n        <TodoFilter colors={mainTheme.colors} onChange={filterTasks} />\n        <ButtonStyled\n          colors={mainTheme.colors}\n          onClick={toggleModal}\n          aria-label=\"showModal\"\n          endIcon={<CreateTwoToneIcon />}\n          addFeat={{ position: 'absolute', right: '10px', top: '10px' }}\n        >\n          Add Task\n        </ButtonStyled>\n      </HeaderTextContainer>\n\n      <TodoListWrapper\n        todoList={todos}\n        onDelete={deleteTask}\n        onToggle={toggleCompleted}\n        themeColors={mainTheme.colors}\n      />\n      {showModal && (\n        <ModalWindow\n          todolist=\"todolist\"\n          onSubmit={addTask}\n          onClick={toggleModal}\n          mainTheme={mainTheme}\n        >\n          <TodoEditor\n            colors={mainTheme.colors}\n            onSubmit={addTask}\n            onClick={toggleModal}\n          />\n        </ModalWindow>\n      )}\n    </>\n    // </StyledList>\n  );\n}\n\nexport default Todos;\n"]},"metadata":{},"sourceType":"module"}