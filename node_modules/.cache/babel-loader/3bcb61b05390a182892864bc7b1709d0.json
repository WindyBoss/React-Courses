{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/components/Appbar/Appbar.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport authContext from '../../context/authContext';\nimport { Layout } from '../Layout';\nimport UserMenu from '../../pages/UserMenu';\nimport Button from '@mui/material/Button';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { themeContext } from '../../context/authContext';\nimport { btnStyles } from 'components/globalStyles';\n/*\n* this Appbar is made by hook useContext, where all information is written in variable\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Appbar() {\n  _s();\n\n  const {\n    user,\n    isLoggedIn,\n    onLogIn,\n    onLogOut,\n    mainTheme,\n    changeTheme\n  } = useContext(authContext);\n  /*\n  * useContext can be used multiple time in on App\n  const x = useContext(qqq);\n  const user = useContext(xxx);\n  */\n\n  return /*#__PURE__*/_jsxDEV(themeContext.Consumer, {\n    children: _ref => {\n      let {\n        mainTheme\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          children: isLoggedIn ? /*#__PURE__*/_jsxDEV(UserMenu, {\n            onLogOut: onLogOut,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'inline-flex',\n              width: '250px',\n              padding: '10px',\n              margin: '20px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: btnStyles(mainTheme.colors),\n              variant: \"contained\",\n              endIcon: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 26\n              }, this),\n              onClick: onLogIn,\n              type: \"button\",\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Appbar, \"rt+wRIAGcq/FKycaceyXyz0oQzg=\");\n\n_c = Appbar;\n;\n/*\n* this Appbar is made by using authContext.Consumer component, which made code less readable than by using hook useContext\n*/\n// export default function Appbar() {\n//   return (\n//     <authContext.Consumer>\n//       {({ user, isLoggedIn, onLogIn, onLogOut }) => (\n//         <header>\n//           <Layout>\n//           {isLoggedIn ? (\n//             <UserMenu onLogOut={onLogOut} user={user} />\n//           ) : (\n//             <div style={{ display: 'inline-flex', width: '250px', padding: '10px', margin: '20px' }}>\n//               <Button style={{ fontSize: '10px', width: '100px', marginRight: '15px' }} variant=\"contained\" endIcon={<PersonIcon />} onClick={onLogIn} type=\"button\">Log in</Button>\n//             </div>\n//             )}\n//           </Layout>\n//         </header>\n//       )}\n//     </authContext.Consumer>\n//   );\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"Appbar\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/components/Appbar/Appbar.jsx"],"names":["useContext","authContext","Layout","UserMenu","Button","PersonIcon","themeContext","btnStyles","Appbar","user","isLoggedIn","onLogIn","onLogOut","mainTheme","changeTheme","display","width","padding","margin","colors"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,SAASC,YAAT,QAA6B,2BAA7B;AAEA,SAASC,SAAT,QAA0B,yBAA1B;AAEA;AACA;AACA;;;AACA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA,QAA7B;AAAuCC,IAAAA,SAAvC;AAAkDC,IAAAA;AAAlD,MAAkEd,UAAU,CAACC,WAAD,CAAlF;AAGA;AACF;AACA;AACA;AACA;;AAEE,sBACE,QAAC,YAAD,CAAc,QAAd;AAAA,cACG;AAAA,UAAC;AAACY,QAAAA;AAAD,OAAD;AAAA,0BACC;AAAA,+BACA,QAAC,MAAD;AAAA,oBACGH,UAAU,gBACT,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAEE,QAApB;AAA8B,YAAA,IAAI,EAAEH;AAApC;AAAA;AAAA;AAAA;AAAA,kBADS,gBAGT;AAAK,YAAA,KAAK,EAAE;AAAEM,cAAAA,OAAO,EAAE,aAAX;AAA0BC,cAAAA,KAAK,EAAE,OAAjC;AAA0CC,cAAAA,OAAO,EAAE,MAAnD;AAA2DC,cAAAA,MAAM,EAAE;AAAnE,aAAZ;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,KAAK,EAAEX,SAAS,CAACM,SAAS,CAACM,MAAX,CADlB;AAEE,cAAA,OAAO,EAAC,WAFV;AAGE,cAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,sBAHX;AAIE,cAAA,OAAO,EAAER,OAJX;AAKE,cAAA,IAAI,EAAC,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADD;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAhCuBH,M;;KAAAA,M;AAgCvB;AAID;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {useContext} from 'react';\nimport authContext from '../../context/authContext';\nimport { Layout } from '../Layout';\nimport UserMenu from '../../pages/UserMenu';\nimport Button from '@mui/material/Button';\nimport PersonIcon from '@mui/icons-material/Person';\n\nimport { themeContext } from '../../context/authContext';\n\nimport { btnStyles } from 'components/globalStyles';\n\n/*\n* this Appbar is made by hook useContext, where all information is written in variable\n*/\nexport default function Appbar() {\n  const { user, isLoggedIn, onLogIn, onLogOut, mainTheme, changeTheme } = useContext(authContext);\n\n\n  /*\n  * useContext can be used multiple time in on App\n  const x = useContext(qqq);\n  const user = useContext(xxx);\n  */\n  \n  return (\n    <themeContext.Consumer>\n      {({mainTheme}) => (\n        <header>\n        <Layout>\n          {isLoggedIn ? (\n            <UserMenu onLogOut={onLogOut} user={user} />\n          ) : (\n            <div style={{ display: 'inline-flex', width: '250px', padding: '10px', margin: '20px' }}>\n              <Button \n                style={btnStyles(mainTheme.colors)} \n                variant=\"contained\" \n                endIcon={<PersonIcon />} \n                onClick={onLogIn} \n                type=\"button\">Log in</Button>\n            </div>\n          )}\n        </Layout>\n        </header>\n      )}\n    </themeContext.Consumer>\n  );\n};\n\n\n\n/*\n* this Appbar is made by using authContext.Consumer component, which made code less readable than by using hook useContext\n*/\n\n// export default function Appbar() {\n//   return (\n//     <authContext.Consumer>\n//       {({ user, isLoggedIn, onLogIn, onLogOut }) => (\n//         <header>\n//           <Layout>\n//           {isLoggedIn ? (\n//             <UserMenu onLogOut={onLogOut} user={user} />\n//           ) : (\n//             <div style={{ display: 'inline-flex', width: '250px', padding: '10px', margin: '20px' }}>\n//               <Button style={{ fontSize: '10px', width: '100px', marginRight: '15px' }} variant=\"contained\" endIcon={<PersonIcon />} onClick={onLogIn} type=\"button\">Log in</Button>\n//             </div>\n//             )}\n//           </Layout>\n//         </header>\n//       )}\n//     </authContext.Consumer>\n//   );\n// };"]},"metadata":{},"sourceType":"module"}