{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/ColorPicker/ColorPicker.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport ButtonList from './components/ButtonList';\nimport { themeContext } from 'context/authContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = [{\n  label: 'red',\n  color: 'red'\n}, {\n  label: 'green',\n  color: 'green'\n}, {\n  label: 'blue',\n  color: 'blue'\n}, {\n  label: 'yellow',\n  color: 'yellow'\n}, {\n  label: 'black',\n  color: 'black'\n}, {\n  label: 'white',\n  color: 'white'\n}, {\n  label: 'pink',\n  color: 'pink'\n}, {\n  label: 'purple',\n  color: 'purple'\n}, {\n  label: 'orange',\n  color: 'orange'\n}];\n\nfunction ColorPicker() {\n  _s();\n\n  const [activeOptionIndex, setActiveOptionIndex] = useState(0);\n  const {\n    label\n  } = options[activeOptionIndex];\n  const {\n    mainTheme\n  } = useContext(themeContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: `${mainTheme.colors.globalBgColor === label ? `${'#' + Math.floor(Math.random() * 16777215).toString(16)}` : 'transparent'}`,\n        padding: '20px',\n        display: 'inline-block',\n        margin: '20px',\n        border: `1px solid ${mainTheme.colors.containerBorderColor}`,\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: `${label}`\n        },\n        children: \"ColorPicker by Hooks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: `${label}`\n        },\n        children: [\"Chosen color \", label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonList, {\n      options: options,\n      setActiveIdx: setActiveOptionIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ColorPicker, \"/Hwdv/Hkpq0W/Q9n4VOvuzPIQAc=\");\n\n_c = ColorPicker;\n;\nexport default ColorPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorPicker\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/ColorPicker/ColorPicker.jsx"],"names":["React","useState","useContext","ButtonList","themeContext","options","label","color","ColorPicker","activeOptionIndex","setActiveOptionIndex","mainTheme","backgroundColor","colors","globalBgColor","Math","floor","random","toString","padding","display","margin","border","containerBorderColor","borderRadius"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,YAAT,QAA6B,qBAA7B;;;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CADc,EAEd;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAFc,EAGd;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CAHc,EAId;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAJc,EAKd;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CALc,EAMd;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CANc,EAOd;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CAPc,EAQd;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CARc,EASd;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CATc,CAAhB;;AAYA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CT,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAYD,OAAO,CAACI,iBAAD,CAAzB;AAEA,QAAM;AAAEE,IAAAA;AAAF,MAAgBT,UAAU,CAACE,YAAD,CAAhC;AAEA,sBACE;AAAA,4BACE;AACE,MAAA,KAAK,EAAE;AACLQ,QAAAA,eAAe,EAAG,GAChBD,SAAS,CAACE,MAAV,CAAiBC,aAAjB,KAAmCR,KAAnC,GACK,GAAE,MAAMS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAkD,EAD/D,GAEI,aACL,EALI;AAMLC,QAAAA,OAAO,EAAE,MANJ;AAOLC,QAAAA,OAAO,EAAE,cAPJ;AAQLC,QAAAA,MAAM,EAAE,MARH;AASLC,QAAAA,MAAM,EAAG,aAAYX,SAAS,CAACE,MAAV,CAAiBU,oBAAqB,EATtD;AAULC,QAAAA,YAAY,EAAE;AAVT,OADT;AAAA,8BAcE;AAAI,QAAA,KAAK,EAAE;AAAEjB,UAAAA,KAAK,EAAG,GAAED,KAAM;AAAlB,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAG,GAAED,KAAM;AAAlB,SAAV;AAAA,oCAA+CA,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAED,OAArB;AAA8B,MAAA,YAAY,EAAEK;AAA5C;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA,kBADF;AAsBD;;GA5BQF,W;;KAAAA,W;AA4BR;AAED,eAAeA,WAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport ButtonList from './components/ButtonList';\nimport { themeContext } from 'context/authContext';\n\nconst options = [\n  { label: 'red', color: 'red' },\n  { label: 'green', color: 'green' },\n  { label: 'blue', color: 'blue' },\n  { label: 'yellow', color: 'yellow' },\n  { label: 'black', color: 'black' },\n  { label: 'white', color: 'white' },\n  { label: 'pink', color: 'pink' },\n  { label: 'purple', color: 'purple' },\n  { label: 'orange', color: 'orange' },\n];\n\nfunction ColorPicker() {\n  const [activeOptionIndex, setActiveOptionIndex] = useState(0);\n  const { label } = options[activeOptionIndex];\n\n  const { mainTheme } = useContext(themeContext);\n\n  return (\n    <>\n      <div\n        style={{\n          backgroundColor: `${\n            mainTheme.colors.globalBgColor === label\n              ? `${'#' + Math.floor(Math.random() * 16777215).toString(16)}`\n              : 'transparent'\n          }`,\n          padding: '20px',\n          display: 'inline-block',\n          margin: '20px',\n          border: `1px solid ${mainTheme.colors.containerBorderColor}`,\n          borderRadius: '5px',\n        }}\n      >\n        <h2 style={{ color: `${label}` }}>ColorPicker by Hooks</h2>\n        <p style={{ color: `${label}` }}>Chosen color {label}</p>\n      </div>\n      <ButtonList options={options} setActiveIdx={setActiveOptionIndex} />\n    </>\n  );\n};\n\nexport default ColorPicker;"]},"metadata":{},"sourceType":"module"}