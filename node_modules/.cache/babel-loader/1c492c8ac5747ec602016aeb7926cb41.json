{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Todos/Todos.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation } from 'service/apiService';\nimport { TodoListWrapper } from './components/TodoListWrapper';\nimport TodoFilter from './components/TodoFilter';\nimport TodoEditor from './components/TodoEditor';\nimport ModalWindow from 'components/ModalWindow';\nimport { StyledList, HeaderTextContainer, Text } from './styles/TodoList.styled';\nimport { themeContext } from 'context/themeContext';\nimport { ButtonStyled } from 'components/CommonComponents';\nimport CreateTwoToneIcon from '@mui/icons-material/CreateTwoTone';\nimport TodoContainer from './components/TodoContainer';\nimport { useModal } from 'hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Todos() {\n  _s();\n\n  /*\n   * useDispatch - connect actions with active UI elements\n   * useSelector - returns state elements\n   */\n  const storeTodo = useSelector(state => state.todoList.todos);\n  const [showModal, toggleModal] = useModal(false);\n  const [filter, setFilter] = useState('');\n  const [todos, setTodos] = useState([]);\n  const getTodos = useGetTodosQuery();\n  console.log(getTodos); // const {\n  //   data,\n  //   isLoading,\n  //   isSuccess,\n  //   isError,\n  //   error,\n  // } = useGetTodosQuery('api');\n\n  useEffect(() => {\n    const normalizedFilter = filter.toLowerCase();\n    setTodos(storeTodo.filter(todo => todo.name.includes(normalizedFilter) || todo.description.includes(normalizedFilter)));\n  }, [filter, storeTodo]);\n\n  const filterTodos = e => {\n    if (!e) {\n      return storeTodo;\n    }\n\n    setFilter(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TodoContainer // listRef={listRef}\n    // diffLength={diff.length}\n    // completedTasksNumber={completedTasksNumber}\n    , {\n      todos: todos,\n      filterTasks: filterTodos,\n      toggleModal: toggleModal // deleteTask={deleteTask}\n      // toggleCompleted={toggleCompleted}\n      // addTask={addTask}\n      ,\n      showModal: showModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Todos, \"6qJRb0nSUjaRAN8/r4sGXYnFj14=\", false, function () {\n  return [useSelector, useModal, useGetTodosQuery];\n});\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Todos/Todos.jsx"],"names":["React","useContext","useState","useEffect","useSelector","useDispatch","useGetTodosQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation","TodoListWrapper","TodoFilter","TodoEditor","ModalWindow","StyledList","HeaderTextContainer","Text","themeContext","ButtonStyled","CreateTwoToneIcon","TodoContainer","useModal","Todos","storeTodo","state","todoList","todos","showModal","toggleModal","filter","setFilter","setTodos","getTodos","console","log","normalizedFilter","toLowerCase","todo","name","includes","description","filterTodos","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SACEC,gBADF,EAEEC,kBAFF,EAGEC,qBAHF,EAIEC,qBAJF,QAKO,oBALP;AAOA,SAASC,eAAT,QAAgC,8BAAhC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,SACEC,UADF,EAEEC,mBAFF,EAGEC,IAHF,QAIO,0BAJP;AAMA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,SAASC,YAAT,QAA6B,6BAA7B;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AAEA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf;AACF;AACA;AACA;AACE,QAAMC,SAAS,GAAGnB,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,KAAzB,CAA7B;AACA,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BP,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsB5B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACwB,KAAD,EAAQK,QAAR,IAAoB7B,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM8B,QAAQ,GAAG1B,gBAAgB,EAAjC;AAEA2B,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAZe,CAcf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA7B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgC,gBAAgB,GAAGN,MAAM,CAACO,WAAP,EAAzB;AAEAL,IAAAA,QAAQ,CACNR,SAAS,CAACM,MAAV,CACEQ,IAAI,IACFA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmBJ,gBAAnB,KACAE,IAAI,CAACG,WAAL,CAAiBD,QAAjB,CAA0BJ,gBAA1B,CAHJ,CADM,CAAR;AAOD,GAVQ,EAUN,CAACN,MAAD,EAASN,SAAT,CAVM,CAAT;;AAYA,QAAMkB,WAAW,GAAGC,CAAC,IAAI;AACvB,QAAI,CAACA,CAAL,EAAQ;AACN,aAAOnB,SAAP;AACD;;AAEDO,IAAAA,SAAS,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAND;;AAQA,sBACE;AAAA,2BACE,QAAC,aAAD,CACE;AACA;AACA;AAHF;AAIE,MAAA,KAAK,EAAElB,KAJT;AAKE,MAAA,WAAW,EAAEe,WALf;AAME,MAAA,WAAW,EAAEb,WANf,CAOE;AACA;AACA;AATF;AAUE,MAAA,SAAS,EAAED;AAVb;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgBD;;GA1DQL,K;UAKWlB,W,EACeiB,Q,EAIhBf,gB;;;KAVVgB,K;AA4DT,eAAeA,KAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  useGetTodosQuery,\n  useAddTodoMutation,\n  useUpdateTodoMutation,\n  useDeleteTodoMutation,\n} from 'service/apiService';\n\nimport { TodoListWrapper } from './components/TodoListWrapper';\nimport TodoFilter from './components/TodoFilter';\nimport TodoEditor from './components/TodoEditor';\nimport ModalWindow from 'components/ModalWindow';\n\nimport {\n  StyledList,\n  HeaderTextContainer,\n  Text,\n} from './styles/TodoList.styled';\n\nimport { themeContext } from 'context/themeContext';\n\nimport { ButtonStyled } from 'components/CommonComponents';\nimport CreateTwoToneIcon from '@mui/icons-material/CreateTwoTone';\n\nimport TodoContainer from './components/TodoContainer';\n\nimport { useModal } from 'hooks';\n\nfunction Todos() {\n  /*\n   * useDispatch - connect actions with active UI elements\n   * useSelector - returns state elements\n   */\n  const storeTodo = useSelector(state => state.todoList.todos);\n  const [showModal, toggleModal] = useModal(false);\n  const [filter, setFilter] = useState('');\n  const [todos, setTodos] = useState([]);\n\n  const getTodos = useGetTodosQuery();\n\n  console.log(getTodos);\n\n  // const {\n  //   data,\n  //   isLoading,\n  //   isSuccess,\n  //   isError,\n  //   error,\n  // } = useGetTodosQuery('api');\n\n  useEffect(() => {\n    const normalizedFilter = filter.toLowerCase();\n\n    setTodos(\n      storeTodo.filter(\n        todo =>\n          todo.name.includes(normalizedFilter) ||\n          todo.description.includes(normalizedFilter)\n      )\n    );\n  }, [filter, storeTodo]);\n\n  const filterTodos = e => {\n    if (!e) {\n      return storeTodo;\n    }\n\n    setFilter(e.target.value);\n  };\n\n  return (\n    <>\n      <TodoContainer\n        // listRef={listRef}\n        // diffLength={diff.length}\n        // completedTasksNumber={completedTasksNumber}\n        todos={todos}\n        filterTasks={filterTodos}\n        toggleModal={toggleModal}\n        // deleteTask={deleteTask}\n        // toggleCompleted={toggleCompleted}\n        // addTask={addTask}\n        showModal={showModal}\n      />\n    </>\n  );\n}\n\nexport default Todos;\n"]},"metadata":{},"sourceType":"module"}