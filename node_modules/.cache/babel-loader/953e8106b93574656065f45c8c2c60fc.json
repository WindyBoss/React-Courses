{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Reader/pages/CreatePublication/CreatePublication.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { nanoid } from 'nanoid';\nimport TextareaAutosize from '@mui/base/TextareaAutosize';\nimport { ButtonStyled, TextFieldStyled, ErrorContainer, LinearProgressStyled } from 'components/CommonComponents';\nimport { themeContext } from 'context/authContext';\nimport { FormContainer } from '../../common/styles/Reader.styled';\nimport toast from 'react-hot-toast';\nimport { createPublications } from 'services/readerApi';\nimport { withApiState } from 'services/ApiState';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreatePublicationNoState = _ref => {\n  _s();\n\n  let {\n    apiState\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const {\n    mainTheme\n  } = useContext(themeContext);\n  const navigate = useNavigate(); // hook of react router dom, which replace useHistory and help to navigate user\n\n  const setField = e => {\n    const value = e.target.value.trim(' ');\n\n    if (value === '') {\n      return;\n    }\n\n    switch (e.target.name) {\n      case 'title':\n        setTitle(value);\n        break;\n\n      case 'text':\n        setText(value);\n        break;\n\n      default:\n    }\n  };\n\n  const addPublication = async () => {\n    if (title === '') {\n      toast.error('add Title');\n      return;\n    }\n\n    if (text === '') {\n      toast.error('add Text');\n      return;\n    }\n\n    const publication = {\n      title: title,\n      text: text,\n      id: nanoid()\n    };\n    apiState.pending();\n\n    try {\n      await createPublications(publication);\n      toast.success('Publication added');\n      apiState.idle();\n    } catch (err) {\n      apiState.error();\n    }\n\n    setText('');\n    setTitle('');\n    navigate('/react-homework-template/ReaderWithApi/preview'); // - helps to navigate user to necessary page\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [apiState.isError() && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ErrorContainer, {\n          text: \"Something went wrong, try please later\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), apiState.isPending() && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(LinearProgressStyled, {\n          colors: mainTheme.colors,\n          addFeat: {\n            marginTop: '350px',\n            maxWidth: '500px',\n            height: ' 30px',\n            borderRadius: '5px',\n            marginRight: 'auto',\n            marginLeft: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), apiState.isIdle() && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(FormContainer, {\n          colors: mainTheme.colors,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginBottom: '10px',\n              fontSize: '20px'\n            },\n            children: \"Add Publication\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextFieldStyled, {\n            onChange: setField,\n            name: \"title\",\n            type: \"text\",\n            value: title,\n            addFeat: {\n              minWidth: '300px',\n              marginBottom: '25px',\n              marginRight: 'auto'\n            },\n            colors: mainTheme.colors,\n            label: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n            style: {\n              border: `1px solid ${mainTheme.colors.btnBgColor}`,\n              backgroundColor: 'transparent',\n              color: mainTheme.colors.mainText,\n              maxWidth: '100%',\n              minHeight: '200px',\n              minWidth: '100%',\n              marginRight: 'auto',\n              marginBottom: '30px',\n              font: 'inherit'\n            },\n            onChange: setField,\n            name: \"text\",\n            type: \"text\",\n            value: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ButtonStyled, {\n            onClick: addPublication,\n            colors: mainTheme.colors,\n            children: \"Add new Publication\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(CreatePublicationNoState, \"6BfOEFqR5R5Co+tqXy2BvAAnDVY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreatePublicationNoState;\nconst CreatePublication = withApiState(CreatePublicationNoState);\n_c2 = CreatePublication;\nexport default CreatePublication;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreatePublicationNoState\");\n$RefreshReg$(_c2, \"CreatePublication\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Reader/pages/CreatePublication/CreatePublication.jsx"],"names":["React","useState","useContext","nanoid","TextareaAutosize","ButtonStyled","TextFieldStyled","ErrorContainer","LinearProgressStyled","themeContext","FormContainer","toast","createPublications","withApiState","useNavigate","CreatePublicationNoState","apiState","title","setTitle","text","setText","mainTheme","navigate","setField","e","value","target","trim","name","addPublication","error","publication","id","pending","success","idle","err","isError","isPending","colors","marginTop","maxWidth","height","borderRadius","marginRight","marginLeft","isIdle","marginBottom","fontSize","minWidth","border","btnBgColor","backgroundColor","color","mainText","minHeight","font","CreatePublication"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { nanoid } from 'nanoid';\nimport TextareaAutosize from '@mui/base/TextareaAutosize';\n\nimport {\n  ButtonStyled,\n  TextFieldStyled,\n  ErrorContainer,\n  LinearProgressStyled,\n} from 'components/CommonComponents';\n\nimport { themeContext } from 'context/authContext';\nimport { FormContainer } from '../../common/styles/Reader.styled';\nimport toast from 'react-hot-toast';\n\nimport { createPublications } from 'services/readerApi';\nimport { withApiState } from 'services/ApiState';\n\nimport { useNavigate } from 'react-router-dom';\n\nconst CreatePublicationNoState = ({ apiState }) => {\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n\n  const { mainTheme } = useContext(themeContext);\n\n  const navigate = useNavigate(); // hook of react router dom, which replace useHistory and help to navigate user\n\n  const setField = e => {\n    const value = e.target.value.trim(' ');\n    if (value === '') {\n      return;\n    }\n    switch (e.target.name) {\n      case 'title':\n        setTitle(value);\n        break;\n      case 'text':\n        setText(value);\n        break;\n      default:\n    }\n  };\n\n  const addPublication = async () => {\n    if (title === '') {\n      toast.error('add Title');\n      return;\n    }\n    if (text === '') {\n      toast.error('add Text');\n      return;\n    }\n\n    const publication = {\n      title: title,\n      text: text,\n      id: nanoid(),\n    };\n\n    apiState.pending();\n    try {\n      await createPublications(publication);\n      toast.success('Publication added');\n      apiState.idle();\n    } catch (err) {\n      apiState.error();\n    }\n\n    setText('');\n    setTitle('');\n    navigate('/react-homework-template/ReaderWithApi/preview'); // - helps to navigate user to necessary page\n  };\n\n  return (\n    <>\n      <>\n        {apiState.isError() && (\n          <>\n            <ErrorContainer text=\"Something went wrong, try please later\" />\n          </>\n        )}\n        {apiState.isPending() && (\n          <>\n            <LinearProgressStyled\n              colors={mainTheme.colors}\n              addFeat={{\n                marginTop: '350px',\n                maxWidth: '500px',\n                height: ' 30px',\n                borderRadius: '5px',\n                marginRight: 'auto',\n                marginLeft: 'auto',\n              }}\n            />\n          </>\n        )}\n        {apiState.isIdle() && (\n          <>\n            <FormContainer colors={mainTheme.colors}>\n              <p style={{ marginBottom: '10px', fontSize: '20px' }}>\n                Add Publication\n              </p>\n              <TextFieldStyled\n                onChange={setField}\n                name=\"title\"\n                type=\"text\"\n                value={title}\n                addFeat={{\n                  minWidth: '300px',\n                  marginBottom: '25px',\n                  marginRight: 'auto',\n                }}\n                colors={mainTheme.colors}\n                label=\"Title\"\n              />\n              <TextareaAutosize\n                style={{\n                  border: `1px solid ${mainTheme.colors.btnBgColor}`,\n                  backgroundColor: 'transparent',\n                  color: mainTheme.colors.mainText,\n                  maxWidth: '100%',\n                  minHeight: '200px',\n                  minWidth: '100%',\n                  marginRight: 'auto',\n                  marginBottom: '30px',\n                  font: 'inherit',\n                }}\n                onChange={setField}\n                name=\"text\"\n                type=\"text\"\n                value={text}\n              />\n              <ButtonStyled onClick={addPublication} colors={mainTheme.colors}>\n                Add new Publication\n              </ButtonStyled>\n            </FormContainer>\n          </>\n        )}\n      </>\n    </>\n  );\n};\n\nconst CreatePublication = withApiState(CreatePublicationNoState);\n\nexport default CreatePublication;\n"]},"metadata":{},"sourceType":"module"}