{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Todos/components/TodoContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { TodoListWrapper } from './TodoListWrapper';\nimport TodoFilter from './TodoFilter';\nimport TodoEditor from './TodoEditor';\nimport ModalWindow from 'components/ModalWindow';\nimport { HeaderTextContainer, Text, StyledList } from '../styles/TodoList.styled';\nimport { themeContext } from 'context/themeContext';\nimport { ButtonStyled } from 'components/CommonComponents';\nimport CreateTwoToneIcon from '@mui/icons-material/CreateTwoTone';\nimport { useModal } from 'hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TodoContainer(_ref) {\n  _s();\n\n  let {\n    todos,\n    deleteTask,\n    toggleCompleted,\n    addTask\n  } = _ref;\n  const {\n    mainTheme\n  } = useContext(themeContext);\n  const [showModal, toggleModal] = useModal();\n  useEffect(() => {\n    setFilteredTodos(todos);\n  }, [todos]);\n  const [filteredTodos, setFilteredTodos] = useState(todos);\n\n  function filterTodos(e) {\n    const normalizedFilter = e.target.value.toLowerCase();\n    console.log(normalizedFilter);\n    const filteredTodos = todos.filter(todo => todo.name.toLowerCase().includes(normalizedFilter) || todo.description.toLowerCase().includes(normalizedFilter));\n    setFilteredTodos(filteredTodos);\n  }\n\n  function findCompleteTaskNumber() {\n    return todos.reduce((acc, task) => {\n      if (task.completed) {\n        return acc + 1;\n      } else {\n        return acc;\n      }\n    }, 0);\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledList, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderTextContainer, {\n        colors: mainTheme.colors,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Year Task List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Completed: \", findCompleteTaskNumber()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Total: \", todos.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TodoFilter, {\n          colors: mainTheme.colors,\n          onChange: filterTodos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonStyled, {\n          colors: mainTheme.colors,\n          onClick: toggleModal,\n          \"aria-label\": \"showModal\",\n          endIcon: /*#__PURE__*/_jsxDEV(CreateTwoToneIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 22\n          }, this),\n          addFeat: {\n            position: 'absolute',\n            right: '10px',\n            top: '10px'\n          },\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListWrapper, {\n        todoList: filteredTodos,\n        onDelete: deleteTask,\n        onToggle: toggleCompleted,\n        themeColors: mainTheme.colors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(ModalWindow, {\n        todolist: \"todolist\",\n        onSubmit: addTask,\n        onClick: toggleModal,\n        mainTheme: mainTheme,\n        children: /*#__PURE__*/_jsxDEV(TodoEditor, {\n          colors: mainTheme.colors,\n          onSubmit: addTask,\n          onClick: toggleModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoContainer, \"wF+7Ot9fFUOOJmOKoEQmQBsjv4w=\", false, function () {\n  return [useModal];\n});\n\n_c = TodoContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContainer\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Todos/components/TodoContainer.jsx"],"names":["React","useContext","useState","useEffect","TodoListWrapper","TodoFilter","TodoEditor","ModalWindow","HeaderTextContainer","Text","StyledList","themeContext","ButtonStyled","CreateTwoToneIcon","useModal","TodoContainer","todos","deleteTask","toggleCompleted","addTask","mainTheme","showModal","toggleModal","setFilteredTodos","filteredTodos","filterTodos","e","normalizedFilter","target","value","toLowerCase","console","log","filter","todo","name","includes","description","findCompleteTaskNumber","reduce","acc","task","completed","colors","length","position","right","top"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\n\nimport { TodoListWrapper } from './TodoListWrapper';\nimport TodoFilter from './TodoFilter';\nimport TodoEditor from './TodoEditor';\nimport ModalWindow from 'components/ModalWindow';\n\nimport {\n  HeaderTextContainer,\n  Text,\n  StyledList,\n} from '../styles/TodoList.styled';\n\nimport { themeContext } from 'context/themeContext';\n\nimport { ButtonStyled } from 'components/CommonComponents';\nimport CreateTwoToneIcon from '@mui/icons-material/CreateTwoTone';\n\nimport { useModal } from 'hooks';\n\nexport default function TodoContainer({\n  todos,\n  deleteTask,\n  toggleCompleted,\n  addTask,\n}) {\n  const { mainTheme } = useContext(themeContext);\n\n  const [showModal, toggleModal] = useModal();\n\n  useEffect(() => {\n    setFilteredTodos(todos);\n  }, [todos]);\n\n  const [filteredTodos, setFilteredTodos] = useState(todos);\n\n  function filterTodos(e) {\n    const normalizedFilter = e.target.value.toLowerCase();\n    console.log(normalizedFilter);\n\n    const filteredTodos = todos.filter(\n      todo =>\n        todo.name.toLowerCase().includes(normalizedFilter) ||\n        todo.description.toLowerCase().includes(normalizedFilter)\n    );\n\n    setFilteredTodos(filteredTodos);\n  }\n\n  function findCompleteTaskNumber() {\n    return todos.reduce((acc, task) => {\n      if (task.completed) {\n        return acc + 1;\n      } else {\n        return acc;\n      }\n    }, 0);\n  }\n\n  return (\n    <StyledList>\n      <>\n        <HeaderTextContainer colors={mainTheme.colors}>\n          <h2>Year Task List</h2>\n          <Text>Completed: {findCompleteTaskNumber()}</Text>\n          <Text>Total: {todos.length}</Text>\n          <TodoFilter colors={mainTheme.colors} onChange={filterTodos} />\n          <ButtonStyled\n            colors={mainTheme.colors}\n            onClick={toggleModal}\n            aria-label=\"showModal\"\n            endIcon={<CreateTwoToneIcon />}\n            addFeat={{ position: 'absolute', right: '10px', top: '10px' }}\n          >\n            Add Task\n          </ButtonStyled>\n        </HeaderTextContainer>\n\n        <TodoListWrapper\n          todoList={filteredTodos}\n          onDelete={deleteTask}\n          onToggle={toggleCompleted}\n          themeColors={mainTheme.colors}\n        />\n        {showModal && (\n          <ModalWindow\n            todolist=\"todolist\"\n            onSubmit={addTask}\n            onClick={toggleModal}\n            mainTheme={mainTheme}\n          >\n            <TodoEditor\n              colors={mainTheme.colors}\n              onSubmit={addTask}\n              onClick={toggleModal}\n            />\n          </ModalWindow>\n        )}\n      </>\n    </StyledList>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}