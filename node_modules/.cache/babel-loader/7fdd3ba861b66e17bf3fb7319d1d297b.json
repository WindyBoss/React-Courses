{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/components/SignupForm/UserList.jsx\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport EmailIcon from '@mui/icons-material/Email';\nimport { UserListContainer, UserListItem, InfoContainer } from \"./SignupForm.styled\";\nimport { themeContext } from '../../context/authContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UserList(_ref) {\n  let {\n    userList\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(themeContext.Consumer, {\n    children: _ref2 => {\n      let {\n        mainTheme\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(UserListContainer, {\n        children: userList.map(user => /*#__PURE__*/_jsxDEV(UserListItem, {\n          colors: mainTheme.colors,\n          children: [/*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InfoContainer, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Email: \", user.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Password: \", user.password]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = UserList;\n;\nUserList.propTypes = {\n  userList: PropTypes.array.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/components/SignupForm/UserList.jsx"],"names":["React","PropTypes","EmailIcon","UserListContainer","UserListItem","InfoContainer","themeContext","UserList","userList","mainTheme","map","user","colors","email","password","id","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,iBAAT,EAA4BC,YAA5B,EAA0CC,aAA1C,QAA+D,qBAA/D;AAEA,SAASC,YAAT,QAA6B,2BAA7B;;AAEA,OAAO,SAASC,QAAT,OAAgC;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACrC,sBACE,QAAC,YAAD,CAAc,QAAd;AAAA,cACC,SAAiB;AAAA,UAAhB;AAACC,QAAAA;AAAD,OAAgB;AAChB,0BACE,QAAC,iBAAD;AAAA,kBACGD,QAAQ,CAACE,GAAT,CAAaC,IAAI,iBAChB,QAAC,YAAD;AAAc,UAAA,MAAM,EAAEF,SAAS,CAACG,MAAhC;AAAA,kCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,aAAD;AAAA,oCACE;AAAA,oCAAWD,IAAI,CAACE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,uCAAcF,IAAI,CAACG,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAA6CH,IAAI,CAACI,EAAlD;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AAaC;AAfH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;KApBeR,Q;AAoBf;AAEDA,QAAQ,CAACS,SAAT,GAAqB;AACnBR,EAAAA,QAAQ,EAAEP,SAAS,CAACgB,KAAV,CAAgBC;AADP,CAArB","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport EmailIcon from '@mui/icons-material/Email';\nimport { UserListContainer, UserListItem, InfoContainer } from \"./SignupForm.styled\";\n\nimport { themeContext } from '../../context/authContext';\n\nexport function UserList({ userList }) {\n  return (\n    <themeContext.Consumer>\n    {({mainTheme}) => {  \n      return (\n        <UserListContainer>\n          {userList.map(user => (\n            <UserListItem colors={mainTheme.colors} key={user.id}>\n              <EmailIcon />\n              <InfoContainer>\n                <p>Email: {user.email}</p>\n                <p>Password: {user.password}</p>\n              </InfoContainer>\n            </UserListItem>\n          ))}\n        </UserListContainer>\n      );\n      }}\n    </themeContext.Consumer> \n  );\n};\n\nUserList.propTypes = {\n  userList: PropTypes.array.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}