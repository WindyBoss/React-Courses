{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation } from 'service/apiService';\nimport { TodoListWrapper } from './components/TodoListWrapper';\nimport TodoFilter from './components/TodoFilter';\nimport TodoEditor from './components/TodoEditor';\nimport ModalWindow from 'components/ModalWindow';\nimport { StyledList, HeaderTextContainer, Text } from './styles/TodoList.styled';\nimport { themeContext } from 'context/themeContext';\nimport { ButtonStyled } from 'components/CommonComponents';\nimport CreateTwoToneIcon from '@mui/icons-material/CreateTwoTone';\nimport TodoContainer from './components/TodoContainer';\nimport { useModal } from 'hooks';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todos() {\n  _s();\n\n  /*\n   * useDispatch - connect actions with active UI elements\n   * useSelector - returns state elements\n   */\n  const storeTodo = useSelector(state => state.todoList.todos);\n  const [showModal, toggleModal] = useModal(false);\n  const [filter, setFilter] = useState(''); // const [todos, setTodos] = useState([]);\n  // const getTodos = useGetTodosQuery();\n  // console.log(getTodos);\n\n  const {\n    data: todos,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetTodosQuery();\n  console.log(todos); // useEffect(() => {\n  //   const normalizedFilter = filter.toLowerCase();\n  //   setTodos(\n  //     storeTodo.filter(\n  //       todo =>\n  //         todo.name.includes(normalizedFilter) ||\n  //         todo.description.includes(normalizedFilter)\n  //     )\n  //   );\n  // }, [filter, storeTodo]);\n  // const filterTodos = e => {\n  //   if (!e) {\n  //     return storeTodo;\n  //   }\n  //   setFilter(e.target.value);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Todos, \"L0s4WrMYnMsqxjkUuE7LFgmXfH4=\", false, function () {\n  return [useSelector, useModal, useGetTodosQuery];\n});\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Todos/Todos.jsx"],"names":["React","useContext","useState","useEffect","useSelector","useDispatch","useGetTodosQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation","TodoListWrapper","TodoFilter","TodoEditor","ModalWindow","StyledList","HeaderTextContainer","Text","themeContext","ButtonStyled","CreateTwoToneIcon","TodoContainer","useModal","Todos","storeTodo","state","todoList","todos","showModal","toggleModal","filter","setFilter","data","isLoading","isSuccess","isError","error","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SACEC,gBADF,EAEEC,kBAFF,EAGEC,qBAHF,EAIEC,qBAJF,QAKO,oBALP;AAOA,SAASC,eAAT,QAAgC,8BAAhC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,SACEC,UADF,EAEEC,mBAFF,EAGEC,IAHF,QAIO,0BAJP;AAMA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,SAASC,YAAT,QAA6B,6BAA7B;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AAEA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf;AACF;AACA;AACA;AACE,QAAMC,SAAS,GAAGnB,WAAW,CAACoB,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,KAAzB,CAA7B;AACA,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BP,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsB5B,QAAQ,CAAC,EAAD,CAApC,CAPe,CAQf;AAEA;AAEA;;AAEA,QAAM;AACJ6B,IAAAA,IAAI,EAAEL,KADF;AAEJM,IAAAA,SAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA;AALI,MAMF7B,gBAAgB,EANpB;AAQA8B,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ,EAtBe,CAwBf;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA,sBACE,qCADF;AAiBD;;GA7DQJ,K;UAKWlB,W,EACeiB,Q,EAc7Bf,gB;;;KApBGgB,K;AA+DT,eAAeA,KAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  useGetTodosQuery,\n  useAddTodoMutation,\n  useUpdateTodoMutation,\n  useDeleteTodoMutation,\n} from 'service/apiService';\n\nimport { TodoListWrapper } from './components/TodoListWrapper';\nimport TodoFilter from './components/TodoFilter';\nimport TodoEditor from './components/TodoEditor';\nimport ModalWindow from 'components/ModalWindow';\n\nimport {\n  StyledList,\n  HeaderTextContainer,\n  Text,\n} from './styles/TodoList.styled';\n\nimport { themeContext } from 'context/themeContext';\n\nimport { ButtonStyled } from 'components/CommonComponents';\nimport CreateTwoToneIcon from '@mui/icons-material/CreateTwoTone';\n\nimport TodoContainer from './components/TodoContainer';\n\nimport { useModal } from 'hooks';\n\nfunction Todos() {\n  /*\n   * useDispatch - connect actions with active UI elements\n   * useSelector - returns state elements\n   */\n  const storeTodo = useSelector(state => state.todoList.todos);\n  const [showModal, toggleModal] = useModal(false);\n  const [filter, setFilter] = useState('');\n  // const [todos, setTodos] = useState([]);\n\n  // const getTodos = useGetTodosQuery();\n\n  // console.log(getTodos);\n\n  const {\n    data: todos,\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n  } = useGetTodosQuery();\n\n  console.log(todos)\n\n  // useEffect(() => {\n  //   const normalizedFilter = filter.toLowerCase();\n\n  //   setTodos(\n  //     storeTodo.filter(\n  //       todo =>\n  //         todo.name.includes(normalizedFilter) ||\n  //         todo.description.includes(normalizedFilter)\n  //     )\n  //   );\n  // }, [filter, storeTodo]);\n\n  // const filterTodos = e => {\n  //   if (!e) {\n  //     return storeTodo;\n  //   }\n\n  //   setFilter(e.target.value);\n  // };\n\n  return (\n    <>\n      {/* <TodoContainer\n        // listRef={listRef}\n        // diffLength={diff.length}\n        // completedTasksNumber={completedTasksNumber}\n        todos={todos}\n        filterTasks={filterTodos}\n        toggleModal={toggleModal}\n        // deleteTask={deleteTask}\n        // toggleCompleted={toggleCompleted}\n        // addTask={addTask}\n      //   showModal={showModal}\n      // />\n      */}\n    </>\n  );\n}\n\nexport default Todos;\n"]},"metadata":{},"sourceType":"module"}