{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/components/ModalWindow/Modal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { ModalContent, Backdrop } from './styles/Modal.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalRoot = document.querySelector('#modal-root');\nexport default function Modal(_ref) {\n  _s();\n\n  let {\n    colors,\n    children,\n    onClose,\n    todolist,\n    loader\n  } = _ref;\n\n  const handleBackBackdropClick = e => {\n    if (e.target === e.currentTarget && !loader) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape' && !loader) {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose, loader]);\n  return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(Backdrop, {\n    onClick: handleBackBackdropClick,\n    colors: colors,\n    children: /*#__PURE__*/_jsxDEV(ModalContent, {\n      todolist: todolist,\n      colors: colors,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), modalRoot);\n}\n\n_s(Modal, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Modal;\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  colors: PropTypes.objectOf(PropTypes.string).isRequired,\n  children: PropTypes.any.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/components/ModalWindow/Modal.jsx"],"names":["React","useEffect","createPortal","PropTypes","ModalContent","Backdrop","modalRoot","document","querySelector","Modal","colors","children","onClose","todolist","loader","handleBackBackdropClick","e","target","currentTarget","handleKeyDown","code","window","addEventListener","removeEventListener","propTypes","func","isRequired","objectOf","string","any"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,uBAAvC;;AAEA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAlB;AAEA,eAAe,SAASC,KAAT,OAAgE;AAAA;;AAAA,MAAjD;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA,QAA7B;AAAuCC,IAAAA;AAAvC,GAAiD;;AAC7E,QAAMC,uBAAuB,GAAGC,CAAC,IAAI;AACnC,QAAIA,CAAC,CAACC,MAAF,KAAaD,CAAC,CAACE,aAAf,IAAgC,CAACJ,MAArC,EAA6C;AAC3CF,MAAAA,OAAO;AACR;AACF,GAJD;;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,aAAa,GAAGH,CAAC,IAAI;AACzB,UAAIA,CAAC,CAACI,IAAF,KAAW,QAAX,IAAuB,CAACN,MAA5B,EAAoC;AAClCF,QAAAA,OAAO;AACR;AACF,KAJD;;AAMAS,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCH,aAAnC;AAEA,WAAO,MAAM;AACXE,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCJ,aAAtC;AACD,KAFD;AAGD,GAZQ,EAYN,CAACP,OAAD,EAAUE,MAAV,CAZM,CAAT;AAcA,sBAAOZ,YAAY,eACjB,QAAC,QAAD;AAAU,IAAA,OAAO,EAAEa,uBAAnB;AAA4C,IAAA,MAAM,EAAEL,MAApD;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEG,QAAxB;AAAkC,MAAA,MAAM,EAAEH,MAA1C;AAAA,gBACGC;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADiB,EAMjBL,SANiB,CAAnB;AAQD;;GA7BuBG,K;;KAAAA,K;AA+BxBA,KAAK,CAACe,SAAN,GAAkB;AAChBZ,EAAAA,OAAO,EAAET,SAAS,CAACsB,IAAV,CAAeC,UADR;AAEhBhB,EAAAA,MAAM,EAAEP,SAAS,CAACwB,QAAV,CAAmBxB,SAAS,CAACyB,MAA7B,EAAqCF,UAF7B;AAGhBf,EAAAA,QAAQ,EAAER,SAAS,CAAC0B,GAAV,CAAcH;AAHR,CAAlB","sourcesContent":["import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { ModalContent, Backdrop } from './styles/Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ colors, children, onClose, todolist, loader }) {\n  const handleBackBackdropClick = e => {\n    if (e.target === e.currentTarget && !loader) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape' && !loader) {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose, loader]);\n\n  return createPortal(\n    <Backdrop onClick={handleBackBackdropClick} colors={colors}>\n      <ModalContent todolist={todolist} colors={colors}>\n        {children}\n      </ModalContent>\n    </Backdrop>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  colors: PropTypes.objectOf(PropTypes.string).isRequired,\n  children: PropTypes.any.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}