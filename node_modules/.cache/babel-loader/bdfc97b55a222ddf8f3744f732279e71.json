{"ast":null,"code":"import React, { Component, useState, useCallback, createContext, useContext, useMemo, useRef } from \"react\";\n\nclass ErrorBoundary extends Component {\n  displayName = \"ReactUseErrorBoundary\";\n\n  componentDidCatch() {\n    this.setState({});\n    this.props.onError(...arguments);\n  }\n\n  render() {\n    return this.props.children;\n  }\n\n}\n\nconst noop = () => false;\n\nconst errorBoundaryContext = createContext({\n  componentDidCatch: {\n    current: undefined\n  },\n  error: undefined,\n  setError: noop\n});\nexport function ErrorBoundaryContext(_ref) {\n  let {\n    children\n  } = _ref;\n  const [error, setError] = useState();\n  const componentDidCatch = useRef();\n  const ctx = useMemo(() => ({\n    componentDidCatch,\n    error,\n    setError\n  }), [error]);\n  return React.createElement(errorBoundaryContext.Provider, {\n    value: ctx\n  }, React.createElement(ErrorBoundary, {\n    error: error,\n    onError: (error, errorInfo) => {\n      setError(error);\n      componentDidCatch.current?.(error, errorInfo);\n    }\n  }, children));\n}\nErrorBoundaryContext.displayName = \"ReactUseErrorBoundaryContext\";\nexport function withErrorBoundary(WrappedComponent) {\n  function WithErrorBoundary(props) {\n    return React.createElement(ErrorBoundaryContext, null, React.createElement(WrappedComponent, {\n      key: \"WrappedComponent\",\n      ...props\n    }));\n  }\n\n  WithErrorBoundary.displayName = `WithErrorBoundary(${WrappedComponent.displayName ?? WrappedComponent.name ?? \"Component\"})`;\n  return WithErrorBoundary;\n}\nexport function useErrorBoundary(componentDidCatch) {\n  const ctx = useContext(errorBoundaryContext);\n  ctx.componentDidCatch.current = componentDidCatch;\n  const resetError = useCallback(() => {\n    ctx.setError(undefined);\n  }, []);\n  return [ctx.error, resetError];\n}","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/node_modules/react-use-error-boundary/index.js"],"names":["React","Component","useState","useCallback","createContext","useContext","useMemo","useRef","ErrorBoundary","displayName","componentDidCatch","setState","props","onError","render","children","noop","errorBoundaryContext","current","undefined","error","setError","ErrorBoundaryContext","ctx","createElement","Provider","value","errorInfo","withErrorBoundary","WrappedComponent","WithErrorBoundary","key","name","useErrorBoundary","resetError"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,EAAkDC,aAAlD,EAAiEC,UAAjE,EAA6EC,OAA7E,EAAsFC,MAAtF,QAAqG,OAArG;;AACA,MAAMC,aAAN,SAA4BP,SAA5B,CAAsC;AAClCQ,EAAAA,WAAW,GAAG,uBAAH;;AACXC,EAAAA,iBAAiB,GAAU;AACvB,SAAKC,QAAL,CAAc,EAAd;AACA,SAAKC,KAAL,CAAWC,OAAX,CAAmB,YAAnB;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKF,KAAL,CAAWG,QAAlB;AACH;;AARiC;;AAUtC,MAAMC,IAAI,GAAG,MAAM,KAAnB;;AACA,MAAMC,oBAAoB,GAAGb,aAAa,CAAC;AACvCM,EAAAA,iBAAiB,EAAE;AAAEQ,IAAAA,OAAO,EAAEC;AAAX,GADoB;AAEvCC,EAAAA,KAAK,EAAED,SAFgC;AAGvCE,EAAAA,QAAQ,EAAEL;AAH6B,CAAD,CAA1C;AAKA,OAAO,SAASM,oBAAT,OAA6C;AAAA,MAAf;AAAEP,IAAAA;AAAF,GAAe;AAChD,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,EAAlC;AACA,QAAMQ,iBAAiB,GAAGH,MAAM,EAAhC;AACA,QAAMgB,GAAG,GAAGjB,OAAO,CAAC,OAAO;AACvBI,IAAAA,iBADuB;AAEvBU,IAAAA,KAFuB;AAGvBC,IAAAA;AAHuB,GAAP,CAAD,EAIf,CAACD,KAAD,CAJe,CAAnB;AAKA,SAAQpB,KAAK,CAACwB,aAAN,CAAoBP,oBAAoB,CAACQ,QAAzC,EAAmD;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAnD,EACJvB,KAAK,CAACwB,aAAN,CAAoBhB,aAApB,EAAmC;AAAEY,IAAAA,KAAK,EAAEA,KAAT;AAAgBP,IAAAA,OAAO,EAAE,CAACO,KAAD,EAAQO,SAAR,KAAsB;AAC1EN,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAV,MAAAA,iBAAiB,CAACQ,OAAlB,GAA4BE,KAA5B,EAAmCO,SAAnC;AACH;AAH8B,GAAnC,EAGSZ,QAHT,CADI,CAAR;AAKH;AACDO,oBAAoB,CAACb,WAArB,GAAmC,8BAAnC;AACA,OAAO,SAASmB,iBAAT,CAA2BC,gBAA3B,EAA6C;AAChD,WAASC,iBAAT,CAA2BlB,KAA3B,EAAkC;AAC9B,WAAQZ,KAAK,CAACwB,aAAN,CAAoBF,oBAApB,EAA0C,IAA1C,EACJtB,KAAK,CAACwB,aAAN,CAAoBK,gBAApB,EAAsC;AAAEE,MAAAA,GAAG,EAAE,kBAAP;AAA2B,SAAGnB;AAA9B,KAAtC,CADI,CAAR;AAEH;;AACDkB,EAAAA,iBAAiB,CAACrB,WAAlB,GAAiC,qBAAoBoB,gBAAgB,CAACpB,WAAjB,IAAgCoB,gBAAgB,CAACG,IAAjD,IAAyD,WAAY,GAA1H;AACA,SAAOF,iBAAP;AACH;AACD,OAAO,SAASG,gBAAT,CAA0BvB,iBAA1B,EAA6C;AAChD,QAAMa,GAAG,GAAGlB,UAAU,CAACY,oBAAD,CAAtB;AACAM,EAAAA,GAAG,CAACb,iBAAJ,CAAsBQ,OAAtB,GAAgCR,iBAAhC;AACA,QAAMwB,UAAU,GAAG/B,WAAW,CAAC,MAAM;AACjCoB,IAAAA,GAAG,CAACF,QAAJ,CAAaF,SAAb;AACH,GAF6B,EAE3B,EAF2B,CAA9B;AAGA,SAAO,CAACI,GAAG,CAACH,KAAL,EAAYc,UAAZ,CAAP;AACH","sourcesContent":["import React, { Component, useState, useCallback, createContext, useContext, useMemo, useRef, } from \"react\";\nclass ErrorBoundary extends Component {\n    displayName = \"ReactUseErrorBoundary\";\n    componentDidCatch(...args) {\n        this.setState({});\n        this.props.onError(...args);\n    }\n    render() {\n        return this.props.children;\n    }\n}\nconst noop = () => false;\nconst errorBoundaryContext = createContext({\n    componentDidCatch: { current: undefined },\n    error: undefined,\n    setError: noop,\n});\nexport function ErrorBoundaryContext({ children, }) {\n    const [error, setError] = useState();\n    const componentDidCatch = useRef();\n    const ctx = useMemo(() => ({\n        componentDidCatch,\n        error,\n        setError,\n    }), [error]);\n    return (React.createElement(errorBoundaryContext.Provider, { value: ctx },\n        React.createElement(ErrorBoundary, { error: error, onError: (error, errorInfo) => {\n                setError(error);\n                componentDidCatch.current?.(error, errorInfo);\n            } }, children)));\n}\nErrorBoundaryContext.displayName = \"ReactUseErrorBoundaryContext\";\nexport function withErrorBoundary(WrappedComponent) {\n    function WithErrorBoundary(props) {\n        return (React.createElement(ErrorBoundaryContext, null,\n            React.createElement(WrappedComponent, { key: \"WrappedComponent\", ...props })));\n    }\n    WithErrorBoundary.displayName = `WithErrorBoundary(${WrappedComponent.displayName ?? WrappedComponent.name ?? \"Component\"})`;\n    return WithErrorBoundary;\n}\nexport function useErrorBoundary(componentDidCatch) {\n    const ctx = useContext(errorBoundaryContext);\n    ctx.componentDidCatch.current = componentDidCatch;\n    const resetError = useCallback(() => {\n        ctx.setError(undefined);\n    }, []);\n    return [ctx.error, resetError];\n}\n"]},"metadata":{},"sourceType":"module"}