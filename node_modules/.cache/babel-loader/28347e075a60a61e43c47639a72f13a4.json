{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/views/BookDetailsView.jsx\",\n    _s = $RefreshSig$();\n\nimport { useLocation, useParams } from 'react-router-dom';\nimport { withApiState } from 'services/ApiState';\nimport { useFetch } from '../../src/Hooks/useFetch';\nimport { getBook } from 'services/FetchApi';\nimport PageHeading from 'components/PageHeading';\nimport Pending from 'components/Pending';\nimport BookView from 'components/BookView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BookDetailsViewNoState(_ref) {\n  _s();\n\n  var _location$state;\n\n  let {\n    apiState\n  } = _ref;\n  const book = useFetch(apiState, getBook, useParams().bookId);\n  const location = useLocation();\n  console.log(useParams().bookId);\n  /* Chaining operator \n  -- console.log(location?.state?.from) \n   the same as:\n   -- if(location && location.state && location.state.from) {\n        console.log(location.state.from)\n     }\n  */\n\n  console.log(location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [apiState.isPending() && /*#__PURE__*/_jsxDEV(Pending, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 32\n    }, this), apiState.isSuccess() && /*#__PURE__*/_jsxDEV(BookView, {\n      book: book,\n      children: /*#__PURE__*/_jsxDEV(PageHeading, {\n        text: book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), apiState.isError() && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ops something went wrong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BookDetailsViewNoState, \"rvfnyDgJSfGxeSUIaHHb97CBwOo=\", false, function () {\n  return [useFetch, useParams, useLocation, useParams];\n});\n\n_c = BookDetailsViewNoState;\nconst BookDetailsView = withApiState(BookDetailsViewNoState);\n_c2 = BookDetailsView;\nexport default BookDetailsView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BookDetailsViewNoState\");\n$RefreshReg$(_c2, \"BookDetailsView\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/views/BookDetailsView.jsx"],"names":["useLocation","useParams","withApiState","useFetch","getBook","PageHeading","Pending","BookView","BookDetailsViewNoState","apiState","book","bookId","location","console","log","state","from","isPending","isSuccess","title","isError","BookDetailsView"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AAEA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;;AAEA,SAASC,sBAAT,OAA8C;AAAA;;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC5C,QAAMC,IAAI,GAAGP,QAAQ,CAACM,QAAD,EAAWL,OAAX,EAAoBH,SAAS,GAAGU,MAAhC,CAArB;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEAa,EAAAA,OAAO,CAACC,GAAR,CAAYb,SAAS,GAAGU,MAAxB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AAGEE,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,aAAYA,QAAZ,0CAAYA,QAAQ,CAAEG,KAAtB,oDAAY,gBAAiBC,IAA7B;AAEA,sBACE;AAAA,eACGP,QAAQ,CAACQ,SAAT,mBAAwB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAD3B,EAEGR,QAAQ,CAACS,SAAT,mBACC,QAAC,QAAD;AAAU,MAAA,IAAI,EAAER,IAAhB;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEA,IAAI,CAACS;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGV,QAAQ,CAACW,OAAT,mBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPzB;AAAA,kBADF;AAWD;;GA5BQZ,sB;UACML,Q,EAA4BF,S,EACxBD,W,EAELC,S;;;KAJLO,sB;AA8BT,MAAMa,eAAe,GAAGnB,YAAY,CAACM,sBAAD,CAApC;MAAMa,e;AACN,eAAeA,eAAf","sourcesContent":["import { useLocation, useParams } from 'react-router-dom';\n\nimport { withApiState } from 'services/ApiState';\nimport { useFetch } from '../../src/Hooks/useFetch';\nimport { getBook } from 'services/FetchApi';\n\nimport PageHeading from 'components/PageHeading';\nimport Pending from 'components/Pending';\nimport BookView from 'components/BookView';\n\nfunction BookDetailsViewNoState({ apiState }) {\n  const book = useFetch(apiState, getBook, useParams().bookId);\n  const location = useLocation();\n\n  console.log(useParams().bookId);\n\n  /* Chaining operator \n  -- console.log(location?.state?.from) \n\n  the same as:\n\n  -- if(location && location.state && location.state.from) {\n        console.log(location.state.from)\n     }\n  */\n  console.log(location?.state?.from);\n\n  return (\n    <>\n      {apiState.isPending() && <Pending />}\n      {apiState.isSuccess() && (\n        <BookView book={book}>\n          <PageHeading text={book.title} />\n        </BookView>\n      )}\n      {apiState.isError() && <p>Ops something went wrong</p>}\n    </>\n  );\n}\n\nconst BookDetailsView = withApiState(BookDetailsViewNoState);\nexport default BookDetailsView;\n"]},"metadata":{},"sourceType":"module"}