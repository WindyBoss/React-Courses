{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Video.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { themeContext } from \"context/authContext\";\nimport { Player } from '../components/Player/Player';\nimport { VideoList } from '../components/Player/VideoList';\nimport { VideoContainer, PlayerWrapper } from '../components/Player/Player.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Video(_ref) {\n  _s();\n\n  let {\n    videos\n  } = _ref;\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  return /*#__PURE__*/_jsxDEV(themeContext.Consumer, {\n    children: _ref2 => {\n      let {\n        mainTheme\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(VideoContainer, {\n        colors: mainTheme.colors,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Selected video: \", selectedVideo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(PlayerWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(VideoList, {\n            videos: videos,\n            onSelect: setSelectedVideo,\n            colors: mainTheme.colors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Player, {\n            url: selectedVideo,\n            colors: mainTheme.colors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Video, \"2WJSNS9e/v/J6WdyH+35pInMpMA=\");\n\n_c = Video;\n;\n/*\n* Use Proptypes for checking type of props data of the component\n*/\n\nVideo.propTypes = {\n  videos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    link: PropTypes.string.isRequired\n  })).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Video.jsx"],"names":["useState","PropTypes","themeContext","Player","VideoList","VideoContainer","PlayerWrapper","Video","videos","selectedVideo","setSelectedVideo","mainTheme","colors","propTypes","arrayOf","shape","id","number","isRequired","link","string"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,oCAA9C;;AAEA,OAAO,SAASC,KAAT,OAA0B;AAAA;;AAAA,MAAV;AAACC,IAAAA;AAAD,GAAU;AAC/B,QAAM,CAAEC,aAAF,EAAiBC,gBAAjB,IAAsCV,QAAQ,CAAC,IAAD,CAApD;AACA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAA,cACC;AAAA,UAAC;AAACW,QAAAA;AAAD,OAAD;AAAA,0BACD,QAAC,cAAD;AAAgB,QAAA,MAAM,EAAGA,SAAS,CAACC,MAAnC;AAAA,gCACE;AAAA,yCAAsBH,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,aAAD;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,MAAM,EAAGD,MAApB;AAA6B,YAAA,QAAQ,EAAGE,gBAAxC;AAA2D,YAAA,MAAM,EAAGC,SAAS,CAACC;AAA9E;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AAAQ,YAAA,GAAG,EAAGH,aAAd;AAA+B,YAAA,MAAM,EAAGE,SAAS,CAACC;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADC;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAfeL,K;;KAAAA,K;AAef;AAGD;AACA;AACA;;AAGAA,KAAK,CAACM,SAAN,GAAkB;AAChBL,EAAAA,MAAM,EAAEP,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACc,KAAV,CAAgB;AACxCC,IAAAA,EAAE,EAAEf,SAAS,CAACgB,MAAV,CAAiBC,UADmB;AAExCC,IAAAA,IAAI,EAAElB,SAAS,CAACmB,MAAV,CAAiBF;AAFiB,GAAhB,CAAlB,EAGJA;AAJY,CAAlB","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { themeContext } from \"context/authContext\";\n\nimport { Player } from '../components/Player/Player';\nimport { VideoList } from '../components/Player/VideoList';\nimport { VideoContainer, PlayerWrapper } from '../components/Player/Player.styled';\n\nexport function Video ({videos}) {\n  const [ selectedVideo, setSelectedVideo ] = useState(null);\n  return (\n    <themeContext.Consumer>\n    {({mainTheme}) => (      \n    <VideoContainer colors={ mainTheme.colors }>\n      <h1>Selected video: { selectedVideo }</h1>\n      <PlayerWrapper>\n        <VideoList videos={ videos } onSelect={ setSelectedVideo } colors={ mainTheme.colors } />\n        <Player url={ selectedVideo }  colors={ mainTheme.colors }/>\n      </PlayerWrapper>\n    </VideoContainer>\n    )}\n    </themeContext.Consumer>          \n  );\n};\n\n\n/*\n* Use Proptypes for checking type of props data of the component\n*/\n\n\nVideo.propTypes = {\n  videos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    link: PropTypes.string.isRequired\n  })).isRequired,\n};"]},"metadata":{},"sourceType":"module"}