{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/components/Player/VideoList.jsx\";\nimport { VideoListWrapper } from './Player.styled';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function VideoList(_ref) {\n  let {\n    videos,\n    onSelect,\n    colors\n  } = _ref;\n  console.log(onSelect);\n  return /*#__PURE__*/_jsxDEV(VideoListWrapper, {\n    children: videos.map((_ref2, idx) => {\n      let {\n        id,\n        link\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            height: '40px',\n            minWidth: '100px',\n            padding: '15px',\n            fontSize: '14px',\n            marginBottom: '10px',\n            marginRight: '20px'\n          },\n          colors: colors,\n          type: \"button\",\n          variant: \"contained\",\n          onClick: () => onSelect(link),\n          children: [\"Video: \", idx]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = VideoList;\n;\nVideoList.propTypes = {\n  videos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    link: PropTypes.string\n  })).isRequired,\n  onSelect: PropTypes.func.isRequired,\n  colors: PropTypes.objectOf(PropTypes.string).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoList\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/components/Player/VideoList.jsx"],"names":["VideoListWrapper","PropTypes","Button","VideoList","videos","onSelect","colors","console","log","map","idx","id","link","height","minWidth","padding","fontSize","marginBottom","marginRight","propTypes","arrayOf","shape","number","string","isRequired","func","objectOf"],"mappings":";AAAA,SAASA,gBAAT,QAAiC,iBAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,OAAO,SAASC,SAAT,OAIJ;AAAA,MAJuB;AACxBC,IAAAA,MADwB;AAExBC,IAAAA,QAFwB;AAGxBC,IAAAA;AAHwB,GAIvB;AACCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACF,sBACE,QAAC,gBAAD;AAAA,cACGD,MAAM,CAACK,GAAP,CAAW,QAAeC,GAAf;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA;AAAN,OAAD;AAAA,0BACV;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAE;AACHC,YAAAA,MAAM,EAAE,MADL;AAEHC,YAAAA,QAAQ,EAAE,OAFP;AAGHC,YAAAA,OAAO,EAAE,MAHN;AAIHC,YAAAA,QAAQ,EAAE,MAJP;AAKHC,YAAAA,YAAY,EAAE,MALX;AAMHC,YAAAA,WAAW,EAAE;AANV,WADT;AASE,UAAA,MAAM,EAAEZ,MATV;AAUE,UAAA,IAAI,EAAC,QAVP;AAWE,UAAA,OAAO,EAAC,WAXV;AAYE,UAAA,OAAO,EAAE,MAAMD,QAAQ,CAACO,IAAD,CAZzB;AAAA,gCAY0CF,GAZ1C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAASC,EAAT;AAAA;AAAA;AAAA;AAAA,cADU;AAAA,KAAX;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;KA5BeR,S;AA4Bf;AAGDA,SAAS,CAACgB,SAAV,GAAsB;AACpBf,EAAAA,MAAM,EAAEH,SAAS,CAACmB,OAAV,CAAkBnB,SAAS,CAACoB,KAAV,CAAgB;AACxCV,IAAAA,EAAE,EAAEV,SAAS,CAACqB,MAD0B;AAExCV,IAAAA,IAAI,EAAEX,SAAS,CAACsB;AAFwB,GAAhB,CAAlB,EAGJC,UAJgB;AAKpBnB,EAAAA,QAAQ,EAAEJ,SAAS,CAACwB,IAAV,CAAeD,UALL;AAMpBlB,EAAAA,MAAM,EAAEL,SAAS,CAACyB,QAAV,CAAmBzB,SAAS,CAACsB,MAA7B,EAAqCC;AANzB,CAAtB","sourcesContent":["import { VideoListWrapper } from './Player.styled';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\n\n\nexport function VideoList({\n  videos,\n  onSelect,\n  colors\n}) {\n    console.log(onSelect);\n  return (\n    <VideoListWrapper>\n      {videos.map(({ id, link }, idx) => (\n        <li key={id}>\n          <Button \n            style={{ \n                height: '40px', \n                minWidth: '100px', \n                padding: '15px', \n                fontSize: '14px', \n                marginBottom: '10px', \n                marginRight: '20px' \n            }} \n            colors={colors} \n            type=\"button\" \n            variant=\"contained\" \n            onClick={() => onSelect(link)} >Video: {idx}\n          </Button>\n        </li>\n      ))}\n    </VideoListWrapper>\n  );\n};\n\n\nVideoList.propTypes = {\n  videos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    link: PropTypes.string\n  })).isRequired,\n  onSelect: PropTypes.func.isRequired,\n  colors: PropTypes.objectOf(PropTypes.string).isRequired,\n};"]},"metadata":{},"sourceType":"module"}