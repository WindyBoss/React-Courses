{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Todos/components/TodoEditor.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport toast from 'react-hot-toast';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { themeContext } from 'context/themeContext';\nimport { ButtonStyled } from 'components/CommonComponents';\nimport { useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation, useGetTodoQuery } from 'service/apiService';\nimport { StyledField, ErrorText, FormLabelContainer, FormLabel, FormContainer, FormTitle } from '../styles/TodoList.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst priorities = ['high', 'middle', 'low'];\n\nconst notify = () => toast.success('The task was added successfully!');\n\nlet schema = yup.object().shape({\n  name: yup.string().required(),\n  description: yup.string().required(),\n  deadline: yup.date().min(new Date()).required(),\n  priority: yup.string().required('Please select a priority').oneOf(priorities)\n});\n\nconst FormError = _ref => {\n  let {\n    name,\n    colors\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    name: name,\n    render: message => /*#__PURE__*/_jsxDEV(ErrorText, {\n      colors: colors,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 26\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FormError;\n\nconst FormField = _ref2 => {\n  let {\n    colors,\n    name,\n    type,\n    placeholder,\n    htmlFor\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(FormLabelContainer, {\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: htmlFor,\n      children: \"Task deadline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledField, {\n      colors: colors,\n      name: name,\n      type: type,\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormError, {\n      colors: colors,\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = FormField;\nexport default function TodoEditor(_ref3) {\n  _s();\n\n  let {\n    onClick,\n    onSubmit,\n    colors\n  } = _ref3;\n  const [addTodo] = useAddTodoMutation();\n\n  const handleSubmit = (values, _ref4) => {\n    let {\n      resetForm\n    } = _ref4;\n    // onSubmit(values);\n    addTodo(values);\n    onClick();\n    resetForm();\n    notify();\n  };\n\n  const {\n    mainTheme\n  } = useContext(themeContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: '',\n        description: '',\n        deadline: '',\n        priority: ''\n      },\n      validationSchema: schema,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(FormContainer, {\n        colors: mainTheme.colors,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n            children: \"Add new task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            colors: mainTheme.colors,\n            placeholder: \"Text task name\",\n            htmlFor: \"name\",\n            name: \"name\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            colors: mainTheme.colors,\n            placeholder: \"Text task description\",\n            htmlFor: \"description\",\n            name: \"description\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            colors: mainTheme.colors,\n            placeholder: \"Text task deadline\",\n            htmlFor: \"deadline\",\n            name: \"deadline\",\n            type: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormLabelContainer, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"priority\",\n              children: \"Task deadline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              style: {\n                fontSize: '16px',\n                width: '50%',\n                padding: '5px 10px',\n                borderRadius: '4px',\n                color: `${mainTheme.colors.btnBgColor}`,\n                border: `1px solid ${colors.counterColor}`\n              },\n              colors: mainTheme.colors,\n              name: \"priority\",\n              as: \"select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), priorities.map((priority, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: priority,\n                children: priority\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormError, {\n              colors: mainTheme.colors,\n              name: \"priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonStyled, {\n            colors: mainTheme.colors,\n            type: \"submit\",\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(TodoEditor, \"643NYOzwfrHGKCgn0m0FgmNnBjI=\", false, function () {\n  return [useAddTodoMutation];\n});\n\n_c3 = TodoEditor;\nTodoEditor.propTypes = {\n  colors: PropTypes.objectOf(PropTypes.string).isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FormError\");\n$RefreshReg$(_c2, \"FormField\");\n$RefreshReg$(_c3, \"TodoEditor\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Todos/components/TodoEditor.jsx"],"names":["React","useContext","toast","PropTypes","Formik","Form","Field","ErrorMessage","yup","themeContext","ButtonStyled","useGetTodosQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation","useGetTodoQuery","StyledField","ErrorText","FormLabelContainer","FormLabel","FormContainer","FormTitle","priorities","notify","success","schema","object","shape","name","string","required","description","deadline","date","min","Date","priority","oneOf","FormError","colors","message","FormField","type","placeholder","htmlFor","TodoEditor","onClick","onSubmit","addTodo","handleSubmit","values","resetForm","mainTheme","fontSize","width","padding","borderRadius","color","btnBgColor","border","counterColor","map","idx","propTypes","objectOf","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport toast from 'react-hot-toast';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nimport { themeContext } from 'context/themeContext';\n\nimport { ButtonStyled } from 'components/CommonComponents';\n\nimport {\n  useGetTodosQuery,\n  useAddTodoMutation,\n  useUpdateTodoMutation,\n  useDeleteTodoMutation,\n  useGetTodoQuery,\n} from 'service/apiService';\n\nimport {\n  StyledField,\n  ErrorText,\n  FormLabelContainer,\n  FormLabel,\n  FormContainer,\n  FormTitle,\n} from '../styles/TodoList.styled';\nconst priorities = ['high', 'middle', 'low'];\nconst notify = () => toast.success('The task was added successfully!');\n\nlet schema = yup.object().shape({\n  name: yup.string().required(),\n  description: yup.string().required(),\n  deadline: yup.date().min(new Date()).required(),\n  priority: yup.string().required('Please select a priority').oneOf(priorities),\n});\n\nconst FormError = ({ name, colors }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText colors={colors}>{message}</ErrorText>}\n    />\n  );\n};\n\nconst FormField = ({ colors, name, type, placeholder, htmlFor }) => {\n  return (\n    <FormLabelContainer>\n      <FormLabel htmlFor={htmlFor}>Task deadline</FormLabel>\n      <StyledField\n        colors={colors}\n        name={name}\n        type={type}\n        placeholder={placeholder}\n      ></StyledField>\n      <FormError colors={colors} name={name} />\n    </FormLabelContainer>\n  );\n};\n\nexport default function TodoEditor({ onClick, onSubmit, colors }) {\n  const [addTodo] = useAddTodoMutation();\n\n  const handleSubmit = (values, { resetForm }) => {\n    // onSubmit(values);\n    addTodo(values)\n    onClick();\n    resetForm();\n    notify();\n  };\n  const { mainTheme } = useContext(themeContext);\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          description: '',\n          deadline: '',\n          priority: '',\n        }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <FormContainer colors={mainTheme.colors}>\n          <Form autoComplete=\"off\">\n            <FormTitle>Add new task</FormTitle>\n            <FormField\n              colors={mainTheme.colors}\n              placeholder=\"Text task name\"\n              htmlFor=\"name\"\n              name=\"name\"\n              type=\"text\"\n            />\n            <FormField\n              colors={mainTheme.colors}\n              placeholder=\"Text task description\"\n              htmlFor=\"description\"\n              name=\"description\"\n              type=\"text\"\n            />\n            <FormField\n              colors={mainTheme.colors}\n              placeholder=\"Text task deadline\"\n              htmlFor=\"deadline\"\n              name=\"deadline\"\n              type=\"Date\"\n            />\n\n            <FormLabelContainer>\n              <FormLabel htmlFor=\"priority\">Task deadline</FormLabel>\n              <Field\n                style={{\n                  fontSize: '16px',\n                  width: '50%',\n                  padding: '5px 10px',\n                  borderRadius: '4px',\n                  color: `${mainTheme.colors.btnBgColor}`,\n                  border: `1px solid ${colors.counterColor}`,\n                }}\n                colors={mainTheme.colors}\n                name=\"priority\"\n                as=\"select\"\n              >\n                <option value=\"\">Select priority</option>\n                {priorities.map((priority, idx) => (\n                  <option value={priority} key={idx}>\n                    {priority}\n                  </option>\n                ))}\n              </Field>\n              <FormError colors={mainTheme.colors} name=\"priority\" />\n            </FormLabelContainer>\n            <ButtonStyled colors={mainTheme.colors} type=\"submit\">\n              Add Task\n            </ButtonStyled>\n          </Form>\n        </FormContainer>\n      </Formik>\n    </>\n  );\n}\n\nTodoEditor.propTypes = {\n  colors: PropTypes.objectOf(PropTypes.string).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}