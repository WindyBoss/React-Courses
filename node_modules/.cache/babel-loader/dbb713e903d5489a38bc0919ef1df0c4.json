{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/SkipEffectOnFirstRender/SkipEffectOnFirstRender.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef, useContext } from 'react';\nimport { themeContext } from 'context/authContext';\nimport { ButtonStyled } from 'components/CommonComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SkipEffectOnFirstRender() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const isFirstRender = useRef(true);\n  const {\n    mainTheme\n  } = useContext(themeContext);\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    console.log(`useEffect - ${Date.now()}`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: mainTheme.colors.containerBgColor,\n      color: mainTheme.colors.mainText,\n      display: 'inline-flex',\n      alignItems: 'center',\n      margin: '20px',\n      padding: '20px',\n      border: `1px solid ${mainTheme.colors.containerBorderColor}`,\n      maxWidth: '500px',\n      borderRadius: '5px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ButtonStyled, {\n      colors: mainTheme.colors,\n      onClick: () => setCount(c => c + 1),\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginLeft: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"code\", {\n        style: {\n          fontSize: '20px',\n          color: mainTheme.colors.hoverBtnBgColor\n        },\n        children: [' ', \"UseEffect\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), ' ', \"of this component does not perform on first render\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SkipEffectOnFirstRender, \"y95ZErTWQR8y7DrSr46bJjtfEQM=\");\n\n_c = SkipEffectOnFirstRender;\n;\nexport default SkipEffectOnFirstRender;\n\nvar _c;\n\n$RefreshReg$(_c, \"SkipEffectOnFirstRender\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/SkipEffectOnFirstRender/SkipEffectOnFirstRender.jsx"],"names":["useState","useEffect","useRef","useContext","themeContext","ButtonStyled","SkipEffectOnFirstRender","count","setCount","isFirstRender","mainTheme","current","console","log","Date","now","backgroundColor","colors","containerBgColor","color","mainText","display","alignItems","margin","padding","border","containerBorderColor","maxWidth","borderRadius","c","marginLeft","fontSize","hoverBtnBgColor"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,EAAsCC,UAAtC,QAAwD,OAAxD;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,YAAT,QAA6B,6BAA7B;;;AAEA,SAASC,uBAAT,GAAmC;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMS,aAAa,GAAGP,MAAM,CAAC,IAAD,CAA5B;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAgBP,UAAU,CAACC,YAAD,CAAhC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,aAAa,CAACE,OAAlB,EAA2B;AACzBF,MAAAA,aAAa,CAACE,OAAd,GAAwB,KAAxB;AACA;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAa,eAAcC,IAAI,CAACC,GAAL,EAAW,EAAtC;AACD,GANQ,CAAT;AAQA,sBACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAEN,SAAS,CAACO,MAAV,CAAiBC,gBAD7B;AAELC,MAAAA,KAAK,EAAET,SAAS,CAACO,MAAV,CAAiBG,QAFnB;AAGLC,MAAAA,OAAO,EAAE,aAHJ;AAILC,MAAAA,UAAU,EAAE,QAJP;AAKLC,MAAAA,MAAM,EAAE,MALH;AAMLC,MAAAA,OAAO,EAAE,MANJ;AAOLC,MAAAA,MAAM,EAAG,aAAYf,SAAS,CAACO,MAAV,CAAiBS,oBAAqB,EAPtD;AAQLC,MAAAA,QAAQ,EAAE,OARL;AASLC,MAAAA,YAAY,EAAE;AATT,KADT;AAAA,4BAaE,QAAC,YAAD;AACE,MAAA,MAAM,EAAElB,SAAS,CAACO,MADpB;AAEE,MAAA,OAAO,EAAE,MAAMT,QAAQ,CAACqB,CAAC,IAAIA,CAAC,GAAG,CAAV,CAFzB;AAAA,gBAIGtB;AAJH;AAAA;AAAA;AAAA;AAAA,YAbF,eAmBE;AACE,MAAA,KAAK,EAAE;AACLuB,QAAAA,UAAU,EAAE;AADP,OADT;AAAA,8BAKE;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,MAAZ;AAAoBZ,UAAAA,KAAK,EAAET,SAAS,CAACO,MAAV,CAAiBe;AAA5C,SADT;AAAA,mBAGG,GAHH;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAUU,GAVV;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAjDQ1B,uB;;KAAAA,uB;AAiDR;AAED,eAAeA,uBAAf","sourcesContent":["import { useState, useEffect, useRef, useContext } from 'react';\nimport { themeContext } from 'context/authContext';\nimport { ButtonStyled } from 'components/CommonComponents';\n\nfunction SkipEffectOnFirstRender() {\n  const [count, setCount] = useState(0);\n  const isFirstRender = useRef(true);\n\n  const { mainTheme } = useContext(themeContext);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    console.log(`useEffect - ${Date.now()}`);\n  });\n\n  return (\n    <div\n      style={{\n        backgroundColor: mainTheme.colors.containerBgColor,\n        color: mainTheme.colors.mainText,\n        display: 'inline-flex',\n        alignItems: 'center',\n        margin: '20px',\n        padding: '20px',\n        border: `1px solid ${mainTheme.colors.containerBorderColor}`,\n        maxWidth: '500px',\n        borderRadius: '5px',\n      }}\n    >\n      <ButtonStyled\n        colors={mainTheme.colors}\n        onClick={() => setCount(c => c + 1)}\n      >\n        {count}\n      </ButtonStyled>\n      <p\n        style={{\n          marginLeft: '20px',\n        }}\n      >\n        <code\n          style={{ fontSize: '20px', color: mainTheme.colors.hoverBtnBgColor }}\n        >\n          {' '}\n          UseEffect\n        </code>{' '}\n        of this component does not perform on first render\n      </p>\n    </div>\n  );\n};\n\nexport default SkipEffectOnFirstRender;\n"]},"metadata":{},"sourceType":"module"}