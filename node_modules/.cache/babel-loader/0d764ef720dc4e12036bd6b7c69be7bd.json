{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport axios from 'axios';\nexport const todoApi = createApi({\n  reducerPath: 'apiService',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:3000/'\n  }),\n  tagTypes: ['Post'],\n  endpoints: build => ({\n    getTodos: build.query({\n      query: () => 'todos'\n    })\n  }) // endpoints: builder => ({\n  //     getAllTodos: builder.query({\n  //         query: () => ({\n  //             url: 'todos',\n  //             method: 'GET',\n  //         }),\n  //         providesTags: result => console.log(result),\n  //         // result ? [\n  //         //     ...result.map(({ id }) => ({\n  //         //         type: 'Todo',\n  //         //         id,\n  //         //     })),\n  //         //     { type: 'Todo', id: 'LIST' },\n  //         // ] : [{ type: 'Todo', id: 'LIST' }],\n  //     }),\n  //     addTodo: builder.mutation({\n  //         query: body => ({\n  //             url: 'todos',\n  //             method: 'POST',\n  //             body,\n  //         }),\n  //     }),\n  //     toggleComplete: builder.mutation({\n  //         query: ({ id, ...patch }) => ({\n  //             url: `todos/${id}`,\n  //             method: 'PUT',\n  //             body: patch,\n  //         }),\n  //     }),\n  //     deleteTodo: builder.mutation({\n  //         query: id => ({\n  //             url: `todos/${id}`,\n  //             method: 'DELETE',\n  //         }),\n  //     }),\n  // }),\n\n});\nexport const {\n  useGetTodosQuery\n} = todoApi;\nconsole.log(todoApi);\nexport const getTodos = async () => {\n  const {\n    data\n  } = await axios.get('http://localhost:3000/todos');\n  return data;\n};\nexport const postTodos = async todo => {\n  const {\n    data\n  } = await axios.post('http://localhost:3000/todos', todo);\n  return data;\n};\nexport const deleteTodos = async todoId => {\n  const {\n    data\n  } = await axios.delete('http://localhost:3000/todos', todoId);\n  return data;\n};","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/service/apiService.js"],"names":["createApi","fetchBaseQuery","axios","todoApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","build","getTodos","query","useGetTodosQuery","console","log","data","get","postTodos","todo","post","deleteTodos","todoId","delete"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAGH,SAAS,CAAC;AAC7BI,EAAAA,WAAW,EAAE,YADgB;AAE7BC,EAAAA,SAAS,EAAEJ,cAAc,CAAC;AAAEK,IAAAA,OAAO,EAAE;AAAX,GAAD,CAFI;AAG7BC,EAAAA,QAAQ,EAAE,CAAC,MAAD,CAHmB;AAI7BC,EAAAA,SAAS,EAAEC,KAAK,KAAK;AACjBC,IAAAA,QAAQ,EAAED,KAAK,CAACE,KAAN,CAAY;AAClBA,MAAAA,KAAK,EAAE,MAAM;AADK,KAAZ;AADO,GAAL,CAJa,CAS7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7C6B,CAAD,CAAzB;AAgDP,OAAO,MAAM;AAAEC,EAAAA;AAAF,IAAuBT,OAA7B;AACPU,OAAO,CAACC,GAAR,CAAYX,OAAZ;AAEA,OAAO,MAAMO,QAAQ,GAAG,YAAW;AAC/B,QAAM;AAAEK,IAAAA;AAAF,MAAW,MAAMb,KAAK,CAACc,GAAN,CAAU,6BAAV,CAAvB;AACA,SAAOD,IAAP;AACH,CAHM;AAKP,OAAO,MAAME,SAAS,GAAG,MAAMC,IAAN,IAAc;AACnC,QAAM;AAAEH,IAAAA;AAAF,MAAW,MAAMb,KAAK,CAACiB,IAAN,CAAW,6BAAX,EAA0CD,IAA1C,CAAvB;AACA,SAAOH,IAAP;AACH,CAHM;AAKP,OAAO,MAAMK,WAAW,GAAG,MAAMC,MAAN,IAAgB;AACvC,QAAM;AAAEN,IAAAA;AAAF,MAAW,MAAMb,KAAK,CAACoB,MAAN,CAAa,6BAAb,EAA4CD,MAA5C,CAAvB;AACA,SAAON,IAAP;AACH,CAHM","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport axios from 'axios';\n\nexport const todoApi = createApi({\n    reducerPath: 'apiService',\n    baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:3000/' }),\n    tagTypes: ['Post'],\n    endpoints: build => ({\n        getTodos: build.query({\n            query: () => 'todos',\n        }),\n    }),\n    // endpoints: builder => ({\n    //     getAllTodos: builder.query({\n    //         query: () => ({\n    //             url: 'todos',\n    //             method: 'GET',\n    //         }),\n    //         providesTags: result => console.log(result),\n    //         // result ? [\n    //         //     ...result.map(({ id }) => ({\n    //         //         type: 'Todo',\n    //         //         id,\n    //         //     })),\n    //         //     { type: 'Todo', id: 'LIST' },\n    //         // ] : [{ type: 'Todo', id: 'LIST' }],\n    //     }),\n\n    //     addTodo: builder.mutation({\n    //         query: body => ({\n    //             url: 'todos',\n    //             method: 'POST',\n    //             body,\n    //         }),\n    //     }),\n    //     toggleComplete: builder.mutation({\n    //         query: ({ id, ...patch }) => ({\n    //             url: `todos/${id}`,\n    //             method: 'PUT',\n    //             body: patch,\n    //         }),\n    //     }),\n    //     deleteTodo: builder.mutation({\n    //         query: id => ({\n    //             url: `todos/${id}`,\n    //             method: 'DELETE',\n    //         }),\n    //     }),\n    // }),\n});\n\nexport const { useGetTodosQuery } = todoApi;\nconsole.log(todoApi);\n\nexport const getTodos = async() => {\n    const { data } = await axios.get('http://localhost:3000/todos');\n    return data;\n};\n\nexport const postTodos = async todo => {\n    const { data } = await axios.post('http://localhost:3000/todos', todo);\n    return data;\n};\n\nexport const deleteTodos = async todoId => {\n    const { data } = await axios.delete('http://localhost:3000/todos', todoId);\n    return data;\n};"]},"metadata":{},"sourceType":"module"}