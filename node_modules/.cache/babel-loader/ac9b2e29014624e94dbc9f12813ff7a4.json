{"ast":null,"code":"import { configureStore, combineReducers } from '@reduxjs/toolkit'; // import todoReducer from './todos/todoSlice';\n\nimport counterReducer from './counter/counterSlice';\nimport storage from 'reduxjs-toolkit-persist/lib/storage'; // defaults to localStorage for web\n\nimport { persistCombineReducers, persistReducer, persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'reduxjs-toolkit-persist';\nimport { todoReducer } from './todos/todoReducer';\nimport logger from 'redux-logger';\nconst persistConfig = {\n  key: 'root',\n  storage: storage\n};\nconst persistClickConfig = {\n  key: 'clicks',\n  storage: storage // blacklist: ['auth'],\n\n}; // const authPersistConfig = {\n//     key: 'auth',\n//     storage: storage,\n//     blacklist: ['somethingTemporary'],\n// };\n\nconst rootReducer = combineReducers({\n  todoList: persistReducer(persistConfig, todoReducer),\n  counter: persistReducer(persistClickConfig, counterReducer) //   auth: persistReducer(authPersistConfig, authReducer),\n  //   other: otherReducer,\n\n}); // const persistedReducer = persistCombineReducers(persistConfig, {\n//     todoList: todoReducer,\n//     counter: counterReducer,\n// });\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      /* ignore persistance actions */\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  }).concat(logger),\n  devTools: process.env.NODE_ENV !== 'production',\n  enhancers: defaultEnhancers => {\n    console.log(defaultEnhancers);\n    return defaultEnhancers;\n  }\n});\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/redux/store.js"],"names":["configureStore","combineReducers","counterReducer","storage","persistCombineReducers","persistReducer","persistStore","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","todoReducer","logger","persistConfig","key","persistClickConfig","rootReducer","todoList","counter","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","devTools","process","env","NODE_ENV","enhancers","defaultEnhancers","console","log","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD,C,CACA;;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,OAAP,MAAoB,qCAApB,C,CAA2D;;AAC3D,SACIC,sBADJ,EAEIC,cAFJ,EAGIC,YAHJ,EAIIC,KAJJ,EAKIC,SALJ,EAMIC,KANJ,EAOIC,OAPJ,EAQIC,KARJ,EASIC,QATJ,QAUO,yBAVP;AAYA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBb,EAAAA,OAAO,EAAEA;AAFS,CAAtB;AAKA,MAAMc,kBAAkB,GAAG;AACvBD,EAAAA,GAAG,EAAE,QADkB;AAEvBb,EAAAA,OAAO,EAAEA,OAFc,CAGvB;;AAHuB,CAA3B,C,CAMA;AACA;AACA;AACA;AACA;;AAEA,MAAMe,WAAW,GAAGjB,eAAe,CAAC;AAChCkB,EAAAA,QAAQ,EAAEd,cAAc,CAACU,aAAD,EAAgBF,WAAhB,CADQ;AAEhCO,EAAAA,OAAO,EAAEf,cAAc,CAACY,kBAAD,EAAqBf,cAArB,CAFS,CAIhC;AACA;;AALgC,CAAD,CAAnC,C,CAQA;AACA;AACA;AACA;;AAEA,MAAMmB,KAAK,GAAGrB,cAAc,CAAC;AACzBsB,EAAAA,OAAO,EAAEJ,WADgB;AAEzBK,EAAAA,UAAU,EAAEC,oBAAoB,IAC5BA,oBAAoB,CAAC;AACjBC,IAAAA,iBAAiB,EAAE;AACf;AACAC,MAAAA,cAAc,EAAE,CAACnB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AAFD;AADF,GAAD,CAApB,CAKGe,MALH,CAKUb,MALV,CAHqB;AASzBc,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YATV;AAUzBC,EAAAA,SAAS,EAAEC,gBAAgB,IAAI;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,gBAAZ;AACA,WAAOA,gBAAP;AACH;AAbwB,CAAD,CAA5B;AAgBA,MAAMG,SAAS,GAAG9B,YAAY,CAACe,KAAD,CAA9B;AAEA,SAASA,KAAT,EAAgBe,SAAhB","sourcesContent":["import { configureStore, combineReducers } from '@reduxjs/toolkit';\n// import todoReducer from './todos/todoSlice';\nimport counterReducer from './counter/counterSlice';\nimport storage from 'reduxjs-toolkit-persist/lib/storage'; // defaults to localStorage for web\nimport {\n    persistCombineReducers,\n    persistReducer,\n    persistStore,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'reduxjs-toolkit-persist';\n\nimport { todoReducer } from './todos/todoReducer';\n\nimport logger from 'redux-logger';\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n};\n\nconst persistClickConfig = {\n    key: 'clicks',\n    storage: storage,\n    // blacklist: ['auth'],\n};\n\n// const authPersistConfig = {\n//     key: 'auth',\n//     storage: storage,\n//     blacklist: ['somethingTemporary'],\n// };\n\nconst rootReducer = combineReducers({\n    todoList: persistReducer(persistConfig, todoReducer),\n    counter: persistReducer(persistClickConfig, counterReducer),\n\n    //   auth: persistReducer(authPersistConfig, authReducer),\n    //   other: otherReducer,\n});\n\n// const persistedReducer = persistCombineReducers(persistConfig, {\n//     todoList: todoReducer,\n//     counter: counterReducer,\n// });\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware: getDefaultMiddleware =>\n        getDefaultMiddleware({\n            serializableCheck: {\n                /* ignore persistance actions */\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n            },\n        }).concat(logger),\n    devTools: process.env.NODE_ENV !== 'production',\n    enhancers: defaultEnhancers => {\n        console.log(defaultEnhancers);\n        return defaultEnhancers;\n    },\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n"]},"metadata":{},"sourceType":"module"}