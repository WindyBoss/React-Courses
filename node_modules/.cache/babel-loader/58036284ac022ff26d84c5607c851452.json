{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/components/News/NewSearchForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class NewSearchFormClass extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      query: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        query: e.currentTarget.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.onSubmit(this.state.query);\n      this.setState({\n        query: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        value: this.state.query,\n        onChange: this.handleChange,\n        id: \"outlined-basic\",\n        label: \"Text News\",\n        variant: \"outlined\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          fontSize: '10px',\n          marginLeft: '10px'\n        },\n        endIcon: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 75\n        }, this),\n        variant: \"contained\",\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;\nNewSearchFormClass.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport function NewSearchFormHooks(_ref) {\n  _s();\n\n  let {\n    onSubmit\n  } = _ref;\n\n  /*\n  * instead of using state in class, we use useState hook to create state in functional component Hook\n  * useState => returns array with two elements: [x, setX], where x is element of state and setX is function to change it\n  * It is good practice to use useState hook for single element of state in functional component, because it is easier to control\n  */\n  const [query, setQuery] = useState('');\n  /*\n  * in Hook function component instead of methods of the class we use functions inside functional component\n  */\n\n  const handleChange = e => setQuery(e.currentTarget.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n  /*\n  * TextField => styled input taken from Mui library\n  * Button => styled button taken from Mui library, with icon (SearchIcon)\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      type: \"text\",\n      value: query,\n      onChange: handleChange,\n      id: \"outlined-basic\",\n      label: \"Text News\",\n      variant: \"outlined\",\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        fontSize: '10px',\n        marginLeft: '10px'\n      },\n      endIcon: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 73\n      }, this),\n      variant: \"contained\",\n      type: \"submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewSearchFormHooks, \"qO/HZodsWTfJhuzZtdaxiosei2U=\");\n\n_c = NewSearchFormHooks;\n;\nNewSearchFormHooks.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"NewSearchFormHooks\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/components/News/NewSearchForm.jsx"],"names":["React","Component","useState","Button","TextField","SearchIcon","PropTypes","NewSearchFormClass","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","render","display","alignItems","fontSize","marginLeft","propTypes","func","isRequired","NewSearchFormHooks","setQuery"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport PropTypes from 'prop-types';\n\nexport class NewSearchFormClass extends Component {\n  state = { query: '' };\n\n  handleChange = e => {\n    this.setState({ query: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} style={{ display: 'flex', alignItems: 'center' }}>\n        <TextField\n          type=\"text\"\n          value={this.state.query}\n          onChange={this.handleChange}\n          id=\"outlined-basic\"\n          label=\"Text News\"\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <Button style={{ fontSize: '10px', marginLeft: '10px' }} endIcon={<SearchIcon />} variant=\"contained\" type=\"submit\">Search</Button>\n      </form>\n    );\n  };\n};\n\nNewSearchFormClass.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\n\nexport function NewSearchFormHooks({ onSubmit }) {\n  /*\n  * instead of using state in class, we use useState hook to create state in functional component Hook\n  * useState => returns array with two elements: [x, setX], where x is element of state and setX is function to change it\n  * It is good practice to use useState hook for single element of state in functional component, because it is easier to control\n  */\n  const [query, setQuery] = useState('');\n\n  /*\n  * in Hook function component instead of methods of the class we use functions inside functional component\n  */\n  const handleChange = e => setQuery(e.currentTarget.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  /*\n  * TextField => styled input taken from Mui library\n  * Button => styled button taken from Mui library, with icon (SearchIcon)\n  */\n\n  return (\n    <form onSubmit={handleSubmit} style={{display: 'flex', alignItems: 'center'}}>\n      <TextField\n        type=\"text\"\n        value={query}\n        onChange={handleChange}\n        id=\"outlined-basic\"\n        label=\"Text News\"\n        variant=\"outlined\"\n        size='small'\n      />\n      <Button style={{ fontSize: '10px', marginLeft: '10px' }} endIcon={<SearchIcon />} variant=\"contained\" type=\"submit\">Search</Button>\n    </form>\n  );\n};\n\nNewSearchFormHooks.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}