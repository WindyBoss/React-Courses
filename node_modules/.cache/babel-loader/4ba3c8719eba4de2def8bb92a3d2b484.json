{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Pokemon/components/PokemonInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport PokemonPendingView from './state/PokemonPendingView';\nimport PokemonDataView from './state/PokemonDataView';\nimport PokemonFallBackView from './state/PokemonErrorView';\nimport { IdleWrapper } from '../styles/Pokemon.styled';\nimport { withApiState } from 'services/ApiState';\nimport { pokeApi } from 'services/pokeApi';\nimport { useFetch } from 'hooks';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PokemonInfoHooks(_ref) {\n  _s();\n\n  let {\n    apiState,\n    colors\n  } = _ref;\n  let [searchParams] = useSearchParams();\n  const pokemonName = searchParams.get('search');\n  const {\n    state\n  } = useFetch({\n    fetchFunc: pokeApi.fetchPokemon,\n    apiState: apiState,\n    firstRenderCheck: true,\n    addProp: pokemonName\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [apiState.isIdle() && /*#__PURE__*/_jsxDEV(IdleWrapper, {\n      colors: colors,\n      children: \"Text Pokemon Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), apiState.isPending() && /*#__PURE__*/_jsxDEV(PokemonPendingView, {\n      isPending: true,\n      pokemonName: pokemonName,\n      colors: colors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), apiState.isSuccess() && /*#__PURE__*/_jsxDEV(PokemonDataView, {\n      pokemon: state,\n      colors: colors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), apiState.isError() && /*#__PURE__*/_jsxDEV(PokemonFallBackView, {\n      message: `Sorry, something went wrong`,\n      colors: colors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PokemonInfoHooks, \"7pr0ZTM12nMX+UTyWejGONAR3QQ=\", false, function () {\n  return [useSearchParams, useFetch];\n});\n\n_c = PokemonInfoHooks;\nexport const PokemonInfoHooksState = withApiState(PokemonInfoHooks);\n_c2 = PokemonInfoHooksState;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PokemonInfoHooks\");\n$RefreshReg$(_c2, \"PokemonInfoHooksState\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Pokemon/components/PokemonInfo.jsx"],"names":["PokemonPendingView","PokemonDataView","PokemonFallBackView","IdleWrapper","withApiState","pokeApi","useFetch","useSearchParams","PokemonInfoHooks","apiState","colors","searchParams","pokemonName","get","state","fetchFunc","fetchPokemon","firstRenderCheck","addProp","isIdle","isPending","isSuccess","isError","PokemonInfoHooksState"],"mappings":";;;AAAA,OAAOA,kBAAP,MAA+B,4BAA/B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,mBAAP,MAAgC,0BAAhC;AACA,SAASC,WAAT,QAA4B,0BAA5B;AAEA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,kBAAhC;;;;AAEA,SAASC,gBAAT,OAAgD;AAAA;;AAAA,MAAtB;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAsB;AAC9C,MAAI,CAACC,YAAD,IAAiBJ,eAAe,EAApC;AAEA,QAAMK,WAAW,GAAGD,YAAY,CAACE,GAAb,CAAiB,QAAjB,CAApB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAYR,QAAQ,CAAC;AACzBS,IAAAA,SAAS,EAAEV,OAAO,CAACW,YADM;AAEzBP,IAAAA,QAAQ,EAAEA,QAFe;AAGzBQ,IAAAA,gBAAgB,EAAE,IAHO;AAIzBC,IAAAA,OAAO,EAAEN;AAJgB,GAAD,CAA1B;AAOA,sBACE;AAAA,eACGH,QAAQ,CAACU,MAAT,mBACC,QAAC,WAAD;AAAa,MAAA,MAAM,EAAET,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIGD,QAAQ,CAACW,SAAT,mBACC,QAAC,kBAAD;AACE,MAAA,SAAS,EAAE,IADb;AAEE,MAAA,WAAW,EAAER,WAFf;AAGE,MAAA,MAAM,EAAEF;AAHV;AAAA;AAAA;AAAA;AAAA,YALJ,EAWGD,QAAQ,CAACY,SAAT,mBACC,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEP,KAA1B;AAAiC,MAAA,MAAM,EAAEJ;AAAzC;AAAA;AAAA;AAAA;AAAA,YAZJ,EAcGD,QAAQ,CAACa,OAAT,mBACC,QAAC,mBAAD;AACE,MAAA,OAAO,EAAG,6BADZ;AAEE,MAAA,MAAM,EAAEZ;AAFV;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA,kBADF;AAuBD;;GAnCQF,gB;UACcD,e,EAIHD,Q;;;KALXE,gB;AAqCT,OAAO,MAAMe,qBAAqB,GAAGnB,YAAY,CAACI,gBAAD,CAA1C;MAAMe,qB","sourcesContent":["import PokemonPendingView from './state/PokemonPendingView';\nimport PokemonDataView from './state/PokemonDataView';\nimport PokemonFallBackView from './state/PokemonErrorView';\nimport { IdleWrapper } from '../styles/Pokemon.styled';\n\nimport { withApiState } from 'services/ApiState';\nimport { pokeApi } from 'services/pokeApi';\n\nimport { useFetch } from 'hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nfunction PokemonInfoHooks({ apiState, colors }) {\n  let [searchParams] = useSearchParams();\n\n  const pokemonName = searchParams.get('search');\n\n  const { state } = useFetch({\n    fetchFunc: pokeApi.fetchPokemon,\n    apiState: apiState,\n    firstRenderCheck: true,\n    addProp: pokemonName,\n  });\n\n  return (\n    <>\n      {apiState.isIdle() && (\n        <IdleWrapper colors={colors}>Text Pokemon Name</IdleWrapper>\n      )}\n      {apiState.isPending() && (\n        <PokemonPendingView\n          isPending={true}\n          pokemonName={pokemonName}\n          colors={colors}\n        />\n      )}\n      {apiState.isSuccess() && (\n        <PokemonDataView pokemon={state} colors={colors} />\n      )}\n      {apiState.isError() && (\n        <PokemonFallBackView\n          message={`Sorry, something went wrong`}\n          colors={colors}\n        />\n      )}\n    </>\n  );\n}\n\nexport const PokemonInfoHooksState = withApiState(PokemonInfoHooks);\n"]},"metadata":{},"sourceType":"module"}