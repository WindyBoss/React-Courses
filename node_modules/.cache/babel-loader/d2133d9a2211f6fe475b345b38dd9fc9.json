{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { addTodo, deleteTodo, toggleTodo } from './todoActions'; // export const todoReducer = createReducer(initialState, builder => {\n//     builder\n//         .addCase(addTodo, (state, { payload }) => {\n//             state.push(payload);\n//         })\n//         .addCase(deleteTodo, (state, { payload }) => [\n//             ...state.filter(({ id }) => id !== payload),\n//         ])\n//         .addCase(toggleTodo, (state, { payload }) =>\n//             state.map(todo =>\n//                 todo.id === payload ? {...todo, completed: !todo.completed } : todo\n//             )\n//         )\n//         .addDefaultCase(state => {\n//             return state;\n//         });\n// });\n\nexport const todoReducer = createReducer({\n  todos: []\n}, {\n  [addTodo]: (state, _ref) => {\n    let {\n      payload\n    } = _ref;\n    state.todos.push(payload);\n  },\n  [deleteTodo]: (state, _ref2) => {\n    let {\n      payload\n    } = _ref2;\n    return {\n      todos: [...state.todos.filter(_ref3 => {\n        let {\n          id\n        } = _ref3;\n        return id !== payload;\n      })]\n    };\n  },\n  [toggleTodo]: (state, _ref4) => {\n    let {\n      payload\n    } = _ref4;\n    return {\n      todos: [...state.todos.map(todo => todo.id === payload ? { ...todo,\n        completed: !todo.completed\n      } : todo)]\n    };\n  }\n});\nexport { addTodo, deleteTodo, toggleTodo };","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/redux/todos/todoReducer.js"],"names":["createReducer","addTodo","deleteTodo","toggleTodo","todoReducer","todos","state","payload","push","filter","id","map","todo","completed"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B,QAAgD,eAAhD,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,CAAC;AAAEK,EAAAA,KAAK,EAAE;AAAT,CAAD,EAAgB;AACpD,GAACJ,OAAD,GAAW,CAACK,KAAD,WAAwB;AAAA,QAAhB;AAAEC,MAAAA;AAAF,KAAgB;AAC/BD,IAAAA,KAAK,CAACD,KAAN,CAAYG,IAAZ,CAAiBD,OAAjB;AACH,GAHmD;AAIpD,GAACL,UAAD,GAAc,CAACI,KAAD,YAAwB;AAAA,QAAhB;AAAEC,MAAAA;AAAF,KAAgB;AAClC,WAAO;AAAEF,MAAAA,KAAK,EAAE,CAAC,GAAGC,KAAK,CAACD,KAAN,CAAYI,MAAZ,CAAmB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAYA,EAAE,KAAKH,OAAnB;AAAA,OAAnB,CAAJ;AAAT,KAAP;AACH,GANmD;AAOpD,GAACJ,UAAD,GAAc,CAACG,KAAD,YAAwB;AAAA,QAAhB;AAAEC,MAAAA;AAAF,KAAgB;AAClC,WAAO;AACHF,MAAAA,KAAK,EAAE,CACH,GAAGC,KAAK,CAACD,KAAN,CAAYM,GAAZ,CAAgBC,IAAI,IACnBA,IAAI,CAACF,EAAL,KAAYH,OAAZ,GAAsB,EAAC,GAAGK,IAAJ;AAAUC,QAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAA3B,OAAtB,GAA+DD,IADhE,CADA;AADJ,KAAP;AAOH;AAfmD,CAAhB,CAAjC;AAkBP,SAASX,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B","sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\nimport { addTodo, deleteTodo, toggleTodo } from './todoActions';\n\n// export const todoReducer = createReducer(initialState, builder => {\n//     builder\n//         .addCase(addTodo, (state, { payload }) => {\n//             state.push(payload);\n//         })\n//         .addCase(deleteTodo, (state, { payload }) => [\n//             ...state.filter(({ id }) => id !== payload),\n//         ])\n//         .addCase(toggleTodo, (state, { payload }) =>\n//             state.map(todo =>\n//                 todo.id === payload ? {...todo, completed: !todo.completed } : todo\n//             )\n//         )\n//         .addDefaultCase(state => {\n//             return state;\n//         });\n// });\n\nexport const todoReducer = createReducer({ todos: [] }, {\n    [addTodo]: (state, { payload }) => {\n        state.todos.push(payload);\n    },\n    [deleteTodo]: (state, { payload }) => {\n        return { todos: [...state.todos.filter(({ id }) => id !== payload)] };\n    },\n    [toggleTodo]: (state, { payload }) => {\n        return {\n            todos: [\n                ...state.todos.map(todo =>\n                    todo.id === payload ? {...todo, completed: !todo.completed } : todo\n                ),\n            ],\n        };\n    },\n});\n\nexport { addTodo, deleteTodo, toggleTodo };\n"]},"metadata":{},"sourceType":"module"}