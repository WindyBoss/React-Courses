{"ast":null,"code":"import { configureStore, combineReducers } from '@reduxjs/toolkit'; // import todoReducer from './todos/todoSlice';\n\nimport counterReducer from './counter/counterSlice';\nimport storage from 'reduxjs-toolkit-persist/lib/storage'; // defaults to localStorage for web\n\nimport { persistCombineReducers, persistReducer, persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'reduxjs-toolkit-persist';\nimport { todoReducer } from './todos/todoReducer';\nimport logger from 'redux-logger';\nconst persistConfig = {\n  key: 'root',\n  storage: storage\n}; // const rootPersistConfig = {\n//     key: 'root',\n//     storage: storage,\n//     blacklist: ['auth'],\n// };\n// const authPersistConfig = {\n//     key: 'auth',\n//     storage: storage,\n//     blacklist: ['somethingTemporary'],\n// };\n\nconst rootReducer = combineReducers({\n  todoList: persistReducer(persistConfig, todoReducer),\n  counter: counterReducer //   auth: persistReducer(authPersistConfig, authReducer),\n  //   other: otherReducer,\n\n});\nconst persistedReducer = persistCombineReducers(persistConfig, {\n  todoList: todoReducer,\n  counter: counterReducer\n});\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      /* ignore persistance actions */\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  }).concat(logger),\n  devTools: process.env.NODE_ENV !== 'production'\n});\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/redux/store.js"],"names":["configureStore","combineReducers","counterReducer","storage","persistCombineReducers","persistReducer","persistStore","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","todoReducer","logger","persistConfig","key","rootReducer","todoList","counter","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","devTools","process","env","NODE_ENV","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD,C,CACA;;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,OAAP,MAAoB,qCAApB,C,CAA2D;;AAC3D,SACIC,sBADJ,EAEIC,cAFJ,EAGIC,YAHJ,EAIIC,KAJJ,EAKIC,SALJ,EAMIC,KANJ,EAOIC,OAPJ,EAQIC,KARJ,EASIC,QATJ,QAUO,yBAVP;AAYA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBb,EAAAA,OAAO,EAAEA;AAFS,CAAtB,C,CAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMc,WAAW,GAAGhB,eAAe,CAAC;AAChCiB,EAAAA,QAAQ,EAAEb,cAAc,CAACU,aAAD,EAAgBF,WAAhB,CADQ;AAEhCM,EAAAA,OAAO,EAAEjB,cAFuB,CAIhC;AACA;;AALgC,CAAD,CAAnC;AAQA,MAAMkB,gBAAgB,GAAGhB,sBAAsB,CAACW,aAAD,EAAgB;AAC3DG,EAAAA,QAAQ,EAAEL,WADiD;AAE3DM,EAAAA,OAAO,EAAEjB;AAFkD,CAAhB,CAA/C;AAKA,MAAMmB,KAAK,GAAGrB,cAAc,CAAC;AACzBsB,EAAAA,OAAO,EAAEF,gBADgB;AAEzBG,EAAAA,UAAU,EAAEC,oBAAoB,IAC5BA,oBAAoB,CAAC;AACjBC,IAAAA,iBAAiB,EAAE;AACf;AACAC,MAAAA,cAAc,EAAE,CAACnB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AAFD;AADF,GAAD,CAApB,CAKGe,MALH,CAKUb,MALV,CAHqB;AASzBc,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AATV,CAAD,CAA5B;AAYA,MAAMC,SAAS,GAAG1B,YAAY,CAACe,KAAD,CAA9B;AAEA,SAASA,KAAT,EAAgBW,SAAhB","sourcesContent":["import { configureStore, combineReducers } from '@reduxjs/toolkit';\n// import todoReducer from './todos/todoSlice';\nimport counterReducer from './counter/counterSlice';\nimport storage from 'reduxjs-toolkit-persist/lib/storage'; // defaults to localStorage for web\nimport {\n    persistCombineReducers,\n    persistReducer,\n    persistStore,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'reduxjs-toolkit-persist';\n\nimport { todoReducer } from './todos/todoReducer';\n\nimport logger from 'redux-logger';\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n};\n\n// const rootPersistConfig = {\n//     key: 'root',\n//     storage: storage,\n//     blacklist: ['auth'],\n// };\n\n// const authPersistConfig = {\n//     key: 'auth',\n//     storage: storage,\n//     blacklist: ['somethingTemporary'],\n// };\n\nconst rootReducer = combineReducers({\n    todoList: persistReducer(persistConfig, todoReducer),\n    counter: counterReducer,\n\n    //   auth: persistReducer(authPersistConfig, authReducer),\n    //   other: otherReducer,\n});\n\nconst persistedReducer = persistCombineReducers(persistConfig, {\n    todoList: todoReducer,\n    counter: counterReducer,\n});\n\nconst store = configureStore({\n    reducer: persistedReducer,\n    middleware: getDefaultMiddleware =>\n        getDefaultMiddleware({\n            serializableCheck: {\n                /* ignore persistance actions */\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n            },\n        }).concat(logger),\n    devTools: process.env.NODE_ENV !== 'production',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };"]},"metadata":{},"sourceType":"module"}