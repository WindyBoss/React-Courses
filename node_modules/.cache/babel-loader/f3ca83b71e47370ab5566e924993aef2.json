{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Video.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Player } from '../components/Player/Player';\nimport { VideoList } from '../components/Player/VideoList';\nimport { VideoContainer, PlayerWrapper } from '../components/Player/Player.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Video(_ref) {\n  _s();\n\n  let {\n    colors,\n    videos\n  } = _ref;\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  return /*#__PURE__*/_jsxDEV(VideoContainer, {\n    colors: colors,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Selected video: \", selectedVideo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(PlayerWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(VideoList, {\n        videos: videos,\n        onSelect: setSelectedVideo,\n        colors: colors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Player, {\n        url: selectedVideo,\n        colors: colors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Video, \"2WJSNS9e/v/J6WdyH+35pInMpMA=\");\n\n_c = Video;\n;\n/*\n* Use Proptypes for checking type of props data of the component\n*/\n\nVideo.propTypes = {\n  videos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    link: PropTypes.string.isRequired\n  })).isRequired,\n  colors: PropTypes.objectOf(PropTypes.string).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Video.jsx"],"names":["useState","PropTypes","Player","VideoList","VideoContainer","PlayerWrapper","Video","colors","videos","selectedVideo","setSelectedVideo","propTypes","arrayOf","shape","id","number","isRequired","link","string","objectOf"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,oCAA9C;;AAEA,OAAO,SAASC,KAAT,OAAkC;AAAA;;AAAA,MAAlB;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAkB;AACrC,QAAM,CAAEC,aAAF,EAAiBC,gBAAjB,IAAsCV,QAAQ,CAAC,IAAD,CAApD;AACE,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAGO,MAAzB;AAAA,4BACE;AAAA,qCAAsBE,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,MAAM,EAAGD,MAApB;AAA6B,QAAA,QAAQ,EAAGE,gBAAxC;AAA2D,QAAA,MAAM,EAAGH;AAApE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAGE,aAAd;AAA+B,QAAA,MAAM,EAAGF;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASL;;GAXeD,K;;KAAAA,K;AAWf;AAGD;AACA;AACA;;AAGAA,KAAK,CAACK,SAAN,GAAkB;AAChBH,EAAAA,MAAM,EAAEP,SAAS,CAACW,OAAV,CAAkBX,SAAS,CAACY,KAAV,CAAgB;AACxCC,IAAAA,EAAE,EAAEb,SAAS,CAACc,MAAV,CAAiBC,UADmB;AAExCC,IAAAA,IAAI,EAAEhB,SAAS,CAACiB,MAAV,CAAiBF;AAFiB,GAAhB,CAAlB,EAGJA,UAJY;AAKhBT,EAAAA,MAAM,EAAEN,SAAS,CAACkB,QAAV,CAAmBlB,SAAS,CAACiB,MAA7B,EAAqCF;AAL7B,CAAlB","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport { Player } from '../components/Player/Player';\nimport { VideoList } from '../components/Player/VideoList';\nimport { VideoContainer, PlayerWrapper } from '../components/Player/Player.styled';\n\nexport function Video ({colors, videos}) {\n    const [ selectedVideo, setSelectedVideo ] = useState(null);\n      return (\n        <VideoContainer colors={ colors }>\n          <h1>Selected video: { selectedVideo }</h1>\n          <PlayerWrapper>\n            <VideoList videos={ videos } onSelect={ setSelectedVideo } colors={ colors } />\n            <Player url={ selectedVideo }  colors={ colors }/>\n          </PlayerWrapper>\n        </VideoContainer>\n      );\n};\n\n\n/*\n* Use Proptypes for checking type of props data of the component\n*/\n\n\nVideo.propTypes = {\n  videos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    link: PropTypes.string.isRequired\n  })).isRequired,\n  colors: PropTypes.objectOf(PropTypes.string).isRequired,\n};"]},"metadata":{},"sourceType":"module"}