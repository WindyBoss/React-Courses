{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/components/Reader/Progress.jsx\";\nimport { ProgressWrapper } from './Reader.styled';\nimport PropTypes from 'prop-types';\nimport { CircularProgress, CircularProgressProps } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Progress(_ref) {\n  let {\n    current,\n    total,\n    colors\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n      style: {\n        marginRight: '30px',\n        marginLeft: '30px'\n      },\n      variant: \"determinate\",\n      color: \"secondary\",\n      value: (current + 1) / total * 100,\n      size: \"100px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Progress;\n;\nProgress.propTypes = {\n  current: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  colors: PropTypes.objectOf(PropTypes.string)\n};\n\nfunction CircularProgressWithLabel(props) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative',\n      display: 'inline-flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        position: 'absolute',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginRight: '10px',\n        marginLeft: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        component: \"div\",\n        color: \"text.secondary\",\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = CircularProgressWithLabel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Progress\");\n$RefreshReg$(_c2, \"CircularProgressWithLabel\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/components/Reader/Progress.jsx"],"names":["ProgressWrapper","PropTypes","CircularProgress","CircularProgressProps","Typography","Box","Progress","current","total","colors","marginRight","marginLeft","propTypes","number","isRequired","objectOf","string","CircularProgressWithLabel","props","position","display","top","left","bottom","right","alignItems","justifyContent","Math","round","value"],"mappings":";AAAA,SAASA,eAAT,QAAgC,iBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,EAA2BC,qBAA3B,QAAwD,eAAxD;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;;AAEA,OAAO,SAASC,QAAT,OAIJ;AAAA,MAJsB;AACvBC,IAAAA,OADuB;AAEvBC,IAAAA,KAFuB;AAGvBC,IAAAA;AAHuB,GAItB;AACD,sBACE;AAAA,2BACI,QAAC,yBAAD;AAA2B,MAAA,KAAK,EAAE;AAAEC,QAAAA,WAAW,EAAE,MAAf;AAAuBC,QAAAA,UAAU,EAAE;AAAnC,OAAlC;AAA8E,MAAA,OAAO,EAAC,aAAtF;AAAoG,MAAA,KAAK,EAAC,WAA1G;AAAsH,MAAA,KAAK,EAAE,CAACJ,OAAO,GAAG,CAAX,IAAcC,KAAd,GAAsB,GAAnJ;AAAwJ,MAAA,IAAI,EAAC;AAA7J;AAAA;AAAA;AAAA;AAAA;AADJ,mBADF;AAKD;KAVeF,Q;AAUf;AAGDA,QAAQ,CAACM,SAAT,GAAqB;AACnBL,EAAAA,OAAO,EAAEN,SAAS,CAACY,MAAV,CAAiBC,UADP;AAEnBN,EAAAA,KAAK,EAAEP,SAAS,CAACY,MAAV,CAAiBC,UAFL;AAGnBL,EAAAA,MAAM,EAAER,SAAS,CAACc,QAAV,CAAmBd,SAAS,CAACe,MAA7B;AAHW,CAArB;;AAOA,SAASC,yBAAT,CACEC,KADF,EAEE;AACA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEC,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,OAAO,EAAE;AAAjC,KAAT;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,OAAO,EAAC,aAA1B;AAAA,SAA4CF;AAA5C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFG,QAAAA,GAAG,EAAE,CADH;AAEFC,QAAAA,IAAI,EAAE,CAFJ;AAGFC,QAAAA,MAAM,EAAE,CAHN;AAIFC,QAAAA,KAAK,EAAE,CAJL;AAKFL,QAAAA,QAAQ,EAAE,UALR;AAMFC,QAAAA,OAAO,EAAE,MANP;AAOFK,QAAAA,UAAU,EAAE,QAPV;AAQFC,QAAAA,cAAc,EAAE,QARd;AASFhB,QAAAA,WAAW,EAAE,MATX;AAUFC,QAAAA,UAAU,EAAE;AAVV,OADN;AAAA,6BAcE,QAAC,UAAD;AACE,QAAA,OAAO,EAAC,SADV;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,KAAK,EAAC,gBAHR;AAAA,kBAIG,GAAEgB,IAAI,CAACC,KAAL,CAAWV,KAAK,CAACW,KAAjB,CAAwB;AAJ7B;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;MA5BQZ,yB","sourcesContent":["import { ProgressWrapper } from './Reader.styled';\nimport PropTypes from 'prop-types';\nimport { CircularProgress, CircularProgressProps } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\n\nexport function Progress({\n  current,\n  total,\n  colors\n}) {\n  return (\n    <>\n        <CircularProgressWithLabel style={{ marginRight: '30px', marginLeft: '30px'}} variant=\"determinate\" color=\"secondary\" value={(current + 1)/total * 100} size='100px'/>\n    </>\n  );\n};\n\n\nProgress.propTypes = {\n  current: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  colors: PropTypes.objectOf(PropTypes.string),\n};\n\n\nfunction CircularProgressWithLabel(\n  props: CircularProgressProps & { value: number },\n) {\n  return (\n    <Box sx={{ position: 'relative', display: 'inline-flex' }}>\n      <CircularProgress variant=\"determinate\" {...props} />\n      <Box\n        sx={{\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          position: 'absolute',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginRight: '10px',\n          marginLeft: '10px',\n        }}\n      >\n        <Typography\n          variant=\"caption\"\n          component=\"div\"\n          color=\"text.secondary\"\n        >{`${Math.round(props.value)}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}"]},"metadata":{},"sourceType":"module"}