{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/components/Reader/TextWrapper.jsx\";\nimport { TextContainer } from './Reader.styled';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function TextWrapper(_ref) {\n  let {\n    publication,\n    colors\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TextContainer, {\n      colors: colors,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: publication.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: publication.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = TextWrapper;\n; // TextWrapper.propTypes = {\n//   publication: PropTypes.shape({\n//     text: PropTypes.string.isRequired,\n//     title: PropTypes.string.isRequired,\n//   }).isRequired,\n//   colors: PropTypes.objectOf(PropTypes.string).isRequired,\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"TextWrapper\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/components/Reader/TextWrapper.jsx"],"names":["TextContainer","PropTypes","TextWrapper","publication","colors","title","text"],"mappings":";AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,OAAO,SAASC,WAAT,OAGJ;AAAA,MAHyB;AAC1BC,IAAAA,WAD0B;AAE1BC,IAAAA;AAF0B,GAGzB;AACD,sBACE;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,MAAM,EAAEA,MADV;AAAA,8BAGE;AAAA,kBAAKD,WAAW,CAACE;AAAjB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAIF,WAAW,CAACG;AAAhB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD;KAdeJ,W;AAcf,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { TextContainer } from './Reader.styled';\nimport PropTypes from 'prop-types';\n\nexport function TextWrapper({\n  publication,\n  colors\n}) {\n  return (\n    <>\n      <TextContainer\n        colors={colors}\n      >\n        <h2>{publication.title}</h2>\n        <p>{publication.text}</p>\n      </TextContainer>\n    </>\n  );\n};\n\n\n// TextWrapper.propTypes = {\n//   publication: PropTypes.shape({\n//     text: PropTypes.string.isRequired,\n//     title: PropTypes.string.isRequired,\n//   }).isRequired,\n//   colors: PropTypes.objectOf(PropTypes.string).isRequired,\n// };"]},"metadata":{},"sourceType":"module"}