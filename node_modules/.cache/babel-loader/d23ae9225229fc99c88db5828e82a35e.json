{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/views/AuthorsView.jsx\",\n    _s = $RefreshSig$();\n\nimport { getAuthors } from 'services/FetchApi';\nimport { withApiState } from 'services/ApiState';\nimport { useFetch } from '../../src/Hooks/useFetch';\nimport ListRender from 'components/ListRender';\nimport Pending from 'components/Pending';\nimport PageHeading from 'components/PageHeading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AuthorsViewNoState(_ref) {\n  _s();\n\n  let {\n    apiState\n  } = _ref;\n  const authors = useFetch(apiState, getAuthors);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeading, {\n      text: \"Authors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), apiState.isPending() && /*#__PURE__*/_jsxDEV(Pending, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 32\n    }, this), apiState.isSuccess() && /*#__PURE__*/_jsxDEV(ListRender, {\n      list: authors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 32\n    }, this), apiState.isError() && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Ops something went wrong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AuthorsViewNoState, \"qEK0IkhQeqHYLAvySxwTSfIpI+g=\", false, function () {\n  return [useFetch];\n});\n\n_c = AuthorsViewNoState;\nconst AuthorsView = withApiState(AuthorsViewNoState);\n_c2 = AuthorsView;\nexport default AuthorsView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthorsViewNoState\");\n$RefreshReg$(_c2, \"AuthorsView\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/views/AuthorsView.jsx"],"names":["getAuthors","withApiState","useFetch","ListRender","Pending","PageHeading","AuthorsViewNoState","apiState","authors","isPending","isSuccess","isError","AuthorsView"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;;AAEA,SAASC,kBAAT,OAA0C;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACxC,QAAMC,OAAO,GAAGN,QAAQ,CAACK,QAAD,EAAWP,UAAX,CAAxB;AAEA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGO,QAAQ,CAACE,SAAT,mBAAwB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAF3B,EAGGF,QAAQ,CAACG,SAAT,mBAAwB,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,YAH3B,EAIGD,QAAQ,CAACI,OAAT,mBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJzB;AAAA,kBADF;AAQD;;GAXQL,kB;UACSJ,Q;;;KADTI,kB;AAaT,MAAMM,WAAW,GAAGX,YAAY,CAACK,kBAAD,CAAhC;MAAMM,W;AACN,eAAeA,WAAf","sourcesContent":["import { getAuthors } from 'services/FetchApi';\nimport { withApiState } from 'services/ApiState';\n\nimport { useFetch } from '../../src/Hooks/useFetch';\n\nimport ListRender from 'components/ListRender';\nimport Pending from 'components/Pending';\nimport PageHeading from 'components/PageHeading';\n\nfunction AuthorsViewNoState({ apiState }) {\n  const authors = useFetch(apiState, getAuthors);\n\n  return (\n    <>\n      <PageHeading text=\"Authors\" />\n      {apiState.isPending() && <Pending />}\n      {apiState.isSuccess() && <ListRender list={authors} />}\n      {apiState.isError() && <p>Ops something went wrong</p>}\n    </>\n  );\n}\n\nconst AuthorsView = withApiState(AuthorsViewNoState);\nexport default AuthorsView;\n"]},"metadata":{},"sourceType":"module"}