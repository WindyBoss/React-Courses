{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport todos from 'data/todos.json';\nconst initialState = {\n  todoList: []\n};\nexport const todoSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    addTodo: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      console.log(state);\n      state.todoList.push(payload);\n    },\n    deleteTodo: (_ref2, _ref3) => {\n      let {\n        todoList\n      } = _ref2;\n      let {\n        payload\n      } = _ref3;\n      return todoList.filter(_ref4 => {\n        let {\n          id\n        } = _ref4;\n        return id !== payload;\n      });\n    },\n    toggleComplicated: (_ref5, _ref6) => {\n      let {\n        todoList\n      } = _ref5;\n      let {\n        payload\n      } = _ref6;\n      console.log(todoList);\n      return todoList.map(todo => todo.id === payload ? { ...todo,\n        completed: !todo.completed\n      } : todo);\n    }\n  }\n});\nexport const {\n  addTodo,\n  deleteTodo,\n  toggleComplicated\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/redux/todos/todoSlice.js"],"names":["createSlice","todos","initialState","todoList","todoSlice","name","reducers","addTodo","state","payload","console","log","push","deleteTodo","filter","id","toggleComplicated","map","todo","completed","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;AAIA,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AACjCK,EAAAA,IAAI,EAAE,OAD2B;AAEjCH,EAAAA,YAFiC;AAGjCI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,CAACC,KAAD,WAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAA,MAAAA,KAAK,CAACL,QAAN,CAAeS,IAAf,CAAoBH,OAApB;AACH,KAJK;AAMNI,IAAAA,UAAU,EAAE;AAAA,UAAC;AAAEV,QAAAA;AAAF,OAAD;AAAA,UAAe;AAAEM,QAAAA;AAAF,OAAf;AAAA,aACRN,QAAQ,CAACW,MAAT,CAAgB;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAYA,EAAE,KAAKN,OAAnB;AAAA,OAAhB,CADQ;AAAA,KANN;AASNO,IAAAA,iBAAiB,EAAE,kBAA+B;AAAA,UAA9B;AAAEb,QAAAA;AAAF,OAA8B;AAAA,UAAhB;AAAEM,QAAAA;AAAF,OAAgB;AAC9CC,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACA,aAAOA,QAAQ,CAACc,GAAT,CAAaC,IAAI,IACpBA,IAAI,CAACH,EAAL,KAAYN,OAAZ,GAAsB,EAAC,GAAGS,IAAJ;AAAUC,QAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAA3B,OAAtB,GAA+DD,IAD5D,CAAP;AAGH;AAdK;AAHuB,CAAD,CAA7B;AAqBP,OAAO,MAAM;AAAEX,EAAAA,OAAF;AAAWM,EAAAA,UAAX;AAAuBG,EAAAA;AAAvB,IAA6CZ,SAAS,CAACgB,OAA7D;AAEP,eAAehB,SAAS,CAACiB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport todos from 'data/todos.json';\n\nconst initialState = {\n    todoList: [],\n};\n\nexport const todoSlice = createSlice({\n    name: 'todos',\n    initialState,\n    reducers: {\n        addTodo: (state, { payload }) => {\n            console.log(state);\n            state.todoList.push(payload);\n        },\n\n        deleteTodo: ({ todoList }, { payload }) =>\n            todoList.filter(({ id }) => id !== payload),\n\n        toggleComplicated: ({ todoList }, { payload }) => {\n            console.log(todoList);\n            return todoList.map(todo =>\n                todo.id === payload ? {...todo, completed: !todo.completed } : todo\n            );\n        },\n    },\n});\n\nexport const { addTodo, deleteTodo, toggleComplicated } = todoSlice.actions;\n\nexport default todoSlice.reducer;"]},"metadata":{},"sourceType":"module"}