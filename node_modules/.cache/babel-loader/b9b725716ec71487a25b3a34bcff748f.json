{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport todos from 'data/todos.json';\nimport { addTodoPrepare } from './todoPrepare';\nexport const todoSlice = createSlice({\n  name: 'todos',\n  initialState: {\n    todos: [...todos],\n    filter: ''\n  },\n  reducers: {\n    addTodo: {\n      reducer(state, _ref) {\n        let {\n          payload\n        } = _ref;\n        state.todos.push(payload);\n      },\n\n      prepare(payload) {\n        return addTodoPrepare(payload);\n      }\n\n    },\n    deleteTodo: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      return { ...state,\n        todos: [...state.todos.filter(_ref3 => {\n          let {\n            id\n          } = _ref3;\n          return id !== payload;\n        })]\n      };\n    },\n    toggleTodo: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      return { ...state,\n        todos: [...state.todos.map(todo => todo.id === payload ? { ...todo,\n          completed: !todo.completed\n        } : todo)]\n      };\n    },\n    setFilter: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      return { ...state,\n        filter: payload\n      };\n    }\n  }\n});\nexport const {\n  addTodo,\n  deleteTodo,\n  toggleTodo,\n  setFilter\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/redux/todos/todoSlice.js"],"names":["createSlice","todos","addTodoPrepare","todoSlice","name","initialState","filter","reducers","addTodo","reducer","state","payload","push","prepare","deleteTodo","id","toggleTodo","map","todo","completed","setFilter","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,SAASC,cAAT,QAA+B,eAA/B;AAEA,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;AACjCI,EAAAA,IAAI,EAAE,OAD2B;AAEjCC,EAAAA,YAAY,EAAE;AAAEJ,IAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ,CAAT;AAAqBK,IAAAA,MAAM,EAAE;AAA7B,GAFmB;AAGjCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,CAACC,KAAD,QAAqB;AAAA,YAAb;AAAEC,UAAAA;AAAF,SAAa;AACxBD,QAAAA,KAAK,CAACT,KAAN,CAAYW,IAAZ,CAAiBD,OAAjB;AACH,OAHI;;AAILE,MAAAA,OAAO,CAACF,OAAD,EAAU;AACb,eAAOT,cAAc,CAACS,OAAD,CAArB;AACH;;AANI,KADH;AAUNG,IAAAA,UAAU,EAAE,CAACJ,KAAD,YAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AAChC,aAAO,EACH,GAAGD,KADA;AAEHT,QAAAA,KAAK,EAAE,CAAC,GAAGS,KAAK,CAACT,KAAN,CAAYK,MAAZ,CAAmB;AAAA,cAAC;AAAES,YAAAA;AAAF,WAAD;AAAA,iBAAYA,EAAE,KAAKJ,OAAnB;AAAA,SAAnB,CAAJ;AAFJ,OAAP;AAIH,KAfK;AAiBNK,IAAAA,UAAU,EAAE,CAACN,KAAD,YAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AAChC,aAAO,EACH,GAAGD,KADA;AAEHT,QAAAA,KAAK,EAAE,CACH,GAAGS,KAAK,CAACT,KAAN,CAAYgB,GAAZ,CAAgBC,IAAI,IACnBA,IAAI,CAACH,EAAL,KAAYJ,OAAZ,GAAsB,EAAC,GAAGO,IAAJ;AAAUC,UAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAA3B,SAAtB,GAA+DD,IADhE,CADA;AAFJ,OAAP;AAQH,KA1BK;AA4BNE,IAAAA,SAAS,EAAE,CAACV,KAAD,YAAwB;AAAA,UAAhB;AAAEC,QAAAA;AAAF,OAAgB;AAC/B,aAAO,EACH,GAAGD,KADA;AAEHJ,QAAAA,MAAM,EAAEK;AAFL,OAAP;AAIH;AAjCK;AAHuB,CAAD,CAA7B;AAwCP,OAAO,MAAM;AAAEH,EAAAA,OAAF;AAAWM,EAAAA,UAAX;AAAuBE,EAAAA,UAAvB;AAAmCI,EAAAA;AAAnC,IAAiDjB,SAAS,CAACkB,OAAjE;AAEP,eAAelB,SAAS,CAACM,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport todos from 'data/todos.json';\n\nimport { addTodoPrepare } from './todoPrepare';\n\nexport const todoSlice = createSlice({\n    name: 'todos',\n    initialState: { todos: [...todos], filter: '' },\n    reducers: {\n        addTodo: {\n            reducer(state, { payload }) {\n                state.todos.push(payload);\n            },\n            prepare(payload) {\n                return addTodoPrepare(payload);\n            },\n        },\n\n        deleteTodo: (state, { payload }) => {\n            return {\n                ...state,\n                todos: [...state.todos.filter(({ id }) => id !== payload)],\n            };\n        },\n\n        toggleTodo: (state, { payload }) => {\n            return {\n                ...state,\n                todos: [\n                    ...state.todos.map(todo =>\n                        todo.id === payload ? {...todo, completed: !todo.completed } : todo\n                    ),\n                ],\n            };\n        },\n\n        setFilter: (state, { payload }) => {\n            return {\n                ...state,\n                filter: payload\n            };\n        },\n    },\n});\n\nexport const { addTodo, deleteTodo, toggleTodo, setFilter } = todoSlice.actions;\n\nexport default todoSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}