{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/components/ListRender/ListRender.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Outlet, NavLink, useLocation } from 'react-router-dom';\nimport { ListEl } from './ListRender.styled';\nimport slugify from 'slugify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListRender(_ref) {\n  _s();\n\n  let {\n    list,\n    redirect\n  } = _ref;\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n      children: list.map(item => /*#__PURE__*/_jsxDEV(ListEl, {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          state: {\n            from: location\n          } // In attribute state is send the current location to the next location, keeping all searchParams,\n          // which can be used when the user want to come back the code will do fetch automatically\n          ,\n          to: redirect ? `../../${redirect}/${item.id}` : `${item.id}`,\n          children: [item.name ? item.name : item.title, (item.name ? slugify(item.name) : slugify(item.title)) + item.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), list && /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListRender, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = ListRender;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListRender\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/components/ListRender/ListRender.jsx"],"names":["React","Outlet","NavLink","useLocation","ListEl","slugify","ListRender","list","redirect","location","map","item","from","id","name","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,WAA1B,QAA6C,kBAA7C;AACA,SAASC,MAAT,QAAuB,qBAAvB;AAEA,OAAOC,OAAP,MAAoB,SAApB;;AAEA,eAAe,SAASC,UAAT,OAAwC;AAAA;;AAAA,MAApB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAoB;AACrD,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,sBACE;AAAA,4BACE;AAAA,gBACGI,IAAI,CAACG,GAAL,CAASC,IAAI,iBACZ,QAAC,MAAD;AAAA,+BACE,QAAC,OAAD;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH;AAAR,WADT,CAEE;AACA;AAHF;AAIE,UAAA,EAAE,EAAED,QAAQ,GAAI,SAAQA,QAAS,IAAGG,IAAI,CAACE,EAAG,EAAhC,GAAqC,GAAEF,IAAI,CAACE,EAAG,EAJ7D;AAAA,qBAMGF,IAAI,CAACG,IAAL,GAAYH,IAAI,CAACG,IAAjB,GAAwBH,IAAI,CAACI,KANhC,EAOG,CAACJ,IAAI,CAACG,IAAL,GAAYT,OAAO,CAACM,IAAI,CAACG,IAAN,CAAnB,GAAiCT,OAAO,CAACM,IAAI,CAACI,KAAN,CAAzC,IAAyDJ,IAAI,CAACE,EAPjE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAaF,IAAI,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,EAiBGN,IAAI,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAjBX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAvBuBD,U;UACLH,W;;;KADKG,U","sourcesContent":["import React from 'react';\nimport { Outlet, NavLink, useLocation } from 'react-router-dom';\nimport { ListEl } from './ListRender.styled';\n\nimport slugify from 'slugify';\n\nexport default function ListRender({ list, redirect }) {\n  const location = useLocation();\n  return (\n    <div>\n      <ol>\n        {list.map(item => (\n          <ListEl key={item.id}>\n            <NavLink\n              state={{ from: location }}\n              // In attribute state is send the current location to the next location, keeping all searchParams,\n              // which can be used when the user want to come back the code will do fetch automatically\n              to={redirect ? `../../${redirect}/${item.id}` : `${item.id}`}\n            >\n              {item.name ? item.name : item.title}\n              {(item.name ? slugify(item.name) : slugify(item.title)) + item.id}\n            </NavLink>\n          </ListEl>\n        ))}\n      </ol>\n\n      {list && <Outlet />}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}