{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Pokemon/components/state/PokemonDataView.jsx\";\nimport PropTypes from 'prop-types';\nimport { FormWrapper, PokemonName, PokemonInfoContainer, PokemonImage, PendingContainer, PokemonStats } from '../../styles/Pokemon.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PokemonDataView(_ref) {\n  let {\n    pokemon,\n    colors,\n    isPending\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    colors: colors,\n    children: [isPending ? /*#__PURE__*/_jsxDEV(PendingContainer, {\n      children: [\" \", pokemon.sprites.front_default, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(PokemonImage, {\n      src: pokemon.sprites.front_default,\n      width: \"200\",\n      alt: pokemon.name[0].toUpperCase() + pokemon.name.slice(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PokemonInfoContainer, {\n      children: [/*#__PURE__*/_jsxDEV(PokemonName, {\n        children: pokemon.name[0].toUpperCase() + pokemon.name.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PokemonStats, {\n        children: pokemon.stats.map(entry => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [entry.stat.name, \": \", entry.base_stat]\n        }, entry.stat.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = PokemonDataView;\n;\nPokemonDataView.propTypes = {\n  colors: PropTypes.objectOf(PropTypes.string).isRequired,\n  pokemon: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    sprites: PropTypes.shape({\n      front_default: PropTypes.any.isRequired\n    }).isRequired,\n    stats: PropTypes.arrayOf(PropTypes.shape({\n      stat: PropTypes.objectOf(PropTypes.string).isRequired,\n      base_stat: PropTypes.number.isRequired\n    })).isRequired\n  }).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonDataView\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Pokemon/components/state/PokemonDataView.jsx"],"names":["PropTypes","FormWrapper","PokemonName","PokemonInfoContainer","PokemonImage","PendingContainer","PokemonStats","PokemonDataView","pokemon","colors","isPending","sprites","front_default","name","toUpperCase","slice","stats","map","entry","stat","base_stat","propTypes","objectOf","string","isRequired","shape","any","arrayOf","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,oBAAnC,EAAyDC,YAAzD,EAAuEC,gBAAvE,EAAyFC,YAAzF,QAA6G,6BAA7G;;AAEA,eAAe,SAASC,eAAT,OAAyD;AAAA,MAAhC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB,GAAgC;AACtE,sBACE,QAAC,WAAD;AAAa,IAAA,MAAM,EAAED,MAArB;AAAA,eAEIC,SAAS,gBACT,QAAC,gBAAD;AAAA,sBAAoBF,OAAO,CAACG,OAAR,CAAgBC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,gBAET,QAAC,YAAD;AACA,MAAA,GAAG,EAAEJ,OAAO,CAACG,OAAR,CAAgBC,aADrB;AAEA,MAAA,KAAK,EAAC,KAFN;AAGA,MAAA,GAAG,EAAEJ,OAAO,CAACK,IAAR,CAAa,CAAb,EAAgBC,WAAhB,KAAgCN,OAAO,CAACK,IAAR,CAAaE,KAAb,CAAmB,CAAnB;AAHrC;AAAA;AAAA;AAAA;AAAA,YAJJ,eAUE,QAAC,oBAAD;AAAA,8BACA,QAAC,WAAD;AAAA,kBAAcP,OAAO,CAACK,IAAR,CAAa,CAAb,EAAgBC,WAAhB,KAAgCN,OAAO,CAACK,IAAR,CAAaE,KAAb,CAAmB,CAAnB;AAA9C;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,YAAD;AAAA,kBACGP,OAAO,CAACQ,KAAR,CAAcC,GAAd,CAAkBC,KAAK,iBACtB;AAAA,qBACGA,KAAK,CAACC,IAAN,CAAWN,IADd,QACsBK,KAAK,CAACE,SAD5B;AAAA,WAASF,KAAK,CAACC,IAAN,CAAWN,IAApB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;KAzBuBN,e;AAyBvB;AAEDA,eAAe,CAACc,SAAhB,GAA4B;AAC1BZ,EAAAA,MAAM,EAAET,SAAS,CAACsB,QAAV,CAAmBtB,SAAS,CAACuB,MAA7B,EAAqCC,UADnB;AAE1BhB,EAAAA,OAAO,EAAER,SAAS,CAACyB,KAAV,CAAgB;AACvBZ,IAAAA,IAAI,EAAEb,SAAS,CAACuB,MAAV,CAAiBC,UADA;AAEvBb,IAAAA,OAAO,EAAEX,SAAS,CAACyB,KAAV,CAAgB;AACvBb,MAAAA,aAAa,EAAEZ,SAAS,CAAC0B,GAAV,CAAcF;AADN,KAAhB,EAENA,UAJoB;AAKvBR,IAAAA,KAAK,EAAEhB,SAAS,CAAC2B,OAAV,CAAkB3B,SAAS,CAACyB,KAAV,CAAgB;AACvCN,MAAAA,IAAI,EAAEnB,SAAS,CAACsB,QAAV,CAAmBtB,SAAS,CAACuB,MAA7B,EAAqCC,UADJ;AAEvCJ,MAAAA,SAAS,EAAEpB,SAAS,CAAC4B,MAAV,CAAiBJ;AAFW,KAAhB,CAAlB,EAGHA;AARmB,GAAhB,EASNA;AAXuB,CAA5B","sourcesContent":["import PropTypes from 'prop-types';\n\nimport { FormWrapper, PokemonName, PokemonInfoContainer, PokemonImage, PendingContainer, PokemonStats } from '../../styles/Pokemon.styled';\n\nexport default function PokemonDataView({ pokemon, colors, isPending }) {\n  return (\n    <FormWrapper colors={colors}>\n      {\n        isPending ?\n        <PendingContainer> {pokemon.sprites.front_default} </PendingContainer> :\n        <PokemonImage\n        src={pokemon.sprites.front_default}\n        width='200'\n        alt={pokemon.name[0].toUpperCase() + pokemon.name.slice(1)}\n        />\n      } \n      <PokemonInfoContainer>\n      <PokemonName>{pokemon.name[0].toUpperCase() + pokemon.name.slice(1)}</PokemonName>\n      <PokemonStats>\n        {pokemon.stats.map(entry => (\n          <li key={entry.stat.name}>\n            {entry.stat.name}: {entry.base_stat}\n          </li>\n        ))}\n\n      </PokemonStats>\n      </PokemonInfoContainer>\n    </FormWrapper>\n  );\n};\n\nPokemonDataView.propTypes = {\n  colors: PropTypes.objectOf(PropTypes.string).isRequired,\n  pokemon: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    sprites: PropTypes.shape({\n      front_default: PropTypes.any.isRequired,\n    }).isRequired,\n    stats: PropTypes.arrayOf(PropTypes.shape({\n      stat: PropTypes.objectOf(PropTypes.string).isRequired,\n      base_stat: PropTypes.number.isRequired,\n    })).isRequired\n  }).isRequired,\n};"]},"metadata":{},"sourceType":"module"}