{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Todos/components/TodoEl.jsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { TextContainer, Text, ButtonContainer, TextType, TaskHeader } from '../styles/TodoList.styled';\nimport { useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation, useGetTodoQuery } from 'service/apiService';\nimport { useDispatch } from 'react-redux';\nimport DeleteForeverTwoToneIcon from '@mui/icons-material/DeleteForeverTwoTone';\nimport DoneOutlineTwoToneIcon from '@mui/icons-material/DoneOutlineTwoTone';\nimport CloseTwoToneIcon from '@mui/icons-material/CloseTwoTone';\nimport DoneAllTwoToneIcon from '@mui/icons-material/DoneAllTwoTone';\nimport SdCardAlertTwoToneIcon from '@mui/icons-material/SdCardAlertTwoTone';\nimport { ButtonStyled } from 'components/CommonComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TodoEl(_ref) {\n  _s();\n\n  let {\n    deleteTask,\n    toggleCompleted,\n    todo,\n    colors\n  } = _ref;\n  const [addTodo] = useAddTodoMutation();\n  const [updateTodo] = useUpdateTodoMutation();\n  const [deleteTodo] = useDeleteTodoMutation();\n  const {\n    name,\n    priority,\n    completed,\n    id,\n    deadline,\n    description\n  } = todo;\n  console.log(id);\n  const d = useGetTodoQuery(id);\n  console.log(d);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextContainer, {\n      colors: colors,\n      children: [/*#__PURE__*/_jsxDEV(TaskHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginRight: '5px'\n          },\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), priority === 'high' && !completed && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(SdCardAlertTwoToneIcon, {\n            fontSize: \"large\",\n            style: {\n              fill: 'red'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false), completed && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DoneAllTwoToneIcon, {\n            fontSize: \"large\",\n            style: {\n              fill: 'green'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), ' ']\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [/*#__PURE__*/_jsxDEV(TextType, {\n          children: \"Deadline:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), \" \", deadline]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [/*#__PURE__*/_jsxDEV(TextType, {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), \" \", description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [/*#__PURE__*/_jsxDEV(TextType, {\n          children: \"Priority: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), priority]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ButtonStyled, {\n        onClick: () => deleteTodo(id),\n        colors: colors,\n        endIcon: /*#__PURE__*/_jsxDEV(DeleteForeverTwoToneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 20\n        }, this),\n        addFeat: {\n          minWidth: '240px',\n          margin: '5px'\n        },\n        children: \"Delete task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonStyled, {\n        colors: colors,\n        addFeat: {\n          minWidth: '240px',\n          margin: '5px'\n        },\n        onClick: () => {\n          updateTodo(todo);\n        },\n        endIcon: !completed ? /*#__PURE__*/_jsxDEV(DoneOutlineTwoToneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(CloseTwoToneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 55\n        }, this),\n        children: !completed ? 'Mark as Complete' : 'Mark as incomplete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoEl, \"lBH2hBKAvd6vU8nVlQgVcHSJbFA=\", false, function () {\n  return [useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation, useGetTodoQuery];\n});\n\n_c = TodoEl;\nTodoEl.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  deadline: PropTypes.string.isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  toggleCompleted: PropTypes.func.isRequired,\n  priority: PropTypes.string.isRequired,\n  colors: PropTypes.objectOf(PropTypes.string).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoEl\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/pages/Todos/components/TodoEl.jsx"],"names":["PropTypes","TextContainer","Text","ButtonContainer","TextType","TaskHeader","useGetTodosQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation","useGetTodoQuery","useDispatch","DeleteForeverTwoToneIcon","DoneOutlineTwoToneIcon","CloseTwoToneIcon","DoneAllTwoToneIcon","SdCardAlertTwoToneIcon","ButtonStyled","TodoEl","deleteTask","toggleCompleted","todo","colors","addTodo","updateTodo","deleteTodo","name","priority","completed","id","deadline","description","console","log","d","marginRight","fill","minWidth","margin","propTypes","string","isRequired","bool","func","objectOf"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  TextContainer,\n  Text,\n  ButtonContainer,\n  TextType,\n  TaskHeader,\n} from '../styles/TodoList.styled';\n\nimport {\n  useGetTodosQuery,\n  useAddTodoMutation,\n  useUpdateTodoMutation,\n  useDeleteTodoMutation,\n  useGetTodoQuery,\n} from 'service/apiService';\n\nimport { useDispatch } from 'react-redux';\n\nimport DeleteForeverTwoToneIcon from '@mui/icons-material/DeleteForeverTwoTone';\nimport DoneOutlineTwoToneIcon from '@mui/icons-material/DoneOutlineTwoTone';\nimport CloseTwoToneIcon from '@mui/icons-material/CloseTwoTone';\nimport DoneAllTwoToneIcon from '@mui/icons-material/DoneAllTwoTone';\nimport SdCardAlertTwoToneIcon from '@mui/icons-material/SdCardAlertTwoTone';\n\nimport { ButtonStyled } from 'components/CommonComponents';\n\nexport default function TodoEl({ deleteTask, toggleCompleted, todo, colors }) {\n  const [addTodo] = useAddTodoMutation();\n  const [updateTodo] = useUpdateTodoMutation();\n  const [deleteTodo] = useDeleteTodoMutation();\n\n  const { name, priority, completed, id, deadline, description } = todo;\n  console.log(id);\n\n  const d = useGetTodoQuery(id);\n  console.log(d)\n  return (\n    <>\n      <TextContainer colors={colors}>\n        <TaskHeader>\n          <p style={{ marginRight: '5px' }}>{name}</p>\n          {priority === 'high' && !completed && (\n            <>\n              <SdCardAlertTwoToneIcon\n                fontSize=\"large\"\n                style={{ fill: 'red' }}\n              />\n            </>\n          )}\n          {completed && (\n            <>\n              <DoneAllTwoToneIcon fontSize=\"large\" style={{ fill: 'green' }} />{' '}\n            </>\n          )}\n        </TaskHeader>\n        <Text>\n          <TextType>Deadline:</TextType> {deadline}\n        </Text>\n        <Text>\n          <TextType>Description:</TextType> {description}\n        </Text>\n        <Text>\n          <TextType>Priority: </TextType>\n          {priority}\n        </Text>\n      </TextContainer>\n      <ButtonContainer>\n        <ButtonStyled\n          onClick={() => deleteTodo(id)}\n          colors={colors}\n          endIcon={<DeleteForeverTwoToneIcon />}\n          addFeat={{ minWidth: '240px', margin: '5px' }}\n        >\n          Delete task\n        </ButtonStyled>\n\n        <ButtonStyled\n          colors={colors}\n          addFeat={{ minWidth: '240px', margin: '5px' }}\n          onClick={() => {\n            updateTodo(todo);\n          }}\n          endIcon={\n            !completed ? <DoneOutlineTwoToneIcon /> : <CloseTwoToneIcon />\n          }\n        >\n          {!completed ? 'Mark as Complete' : 'Mark as incomplete'}\n        </ButtonStyled>\n      </ButtonContainer>\n    </>\n  );\n}\n\nTodoEl.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  deadline: PropTypes.string.isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  toggleCompleted: PropTypes.func.isRequired,\n  priority: PropTypes.string.isRequired,\n  colors: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}