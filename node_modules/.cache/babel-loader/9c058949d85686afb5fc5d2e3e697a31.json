{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliy/Documents/GitHub/React-Courses/src/context/Provider.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useMemo } from 'react';\nimport { authContext } from './authContext';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Provider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const onLogIn = () => {\n    setIsLoggedIn(true);\n  };\n\n  const onLogOut = () => {\n    setUser(null);\n    setIsLoggedIn(false);\n  };\n\n  const providerValue = useMemo(() => {\n    return {\n      user,\n      isLoggedIn,\n      onLogIn,\n      onLogOut,\n      setUser\n    };\n  }, [isLoggedIn, user]);\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: providerValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Provider, \"8v/dzRZRUDR9v/njQC3fn1nR78s=\");\n\n_c = Provider;\nProvider.propTypes = {\n  children: PropTypes.any.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["/Users/vitaliy/Documents/GitHub/React-Courses/src/context/Provider.js"],"names":["useState","useMemo","authContext","PropTypes","Provider","children","user","setUser","isLoggedIn","setIsLoggedIn","onLogIn","onLogOut","providerValue","propTypes","any","isRequired"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,eAAe,SAASC,QAAT,OAAgC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC7C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMU,OAAO,GAAG,MAAM;AACpBD,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,QAAME,QAAQ,GAAG,MAAM;AACrBJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKA,QAAMG,aAAa,GAAGX,OAAO,CAAC,MAAM;AAClC,WAAO;AAAEK,MAAAA,IAAF;AAAQE,MAAAA,UAAR;AAAoBE,MAAAA,OAApB;AAA6BC,MAAAA,QAA7B;AAAuCJ,MAAAA;AAAvC,KAAP;AACD,GAF4B,EAE1B,CAACC,UAAD,EAAaF,IAAb,CAF0B,CAA7B;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEM,aAA7B;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAtBuBD,Q;;KAAAA,Q;AAwBxBA,QAAQ,CAACS,SAAT,GAAqB;AACnBR,EAAAA,QAAQ,EAAEF,SAAS,CAACW,GAAV,CAAcC;AADL,CAArB","sourcesContent":["import { useState, useMemo } from 'react';\nimport { authContext } from './authContext';\nimport PropTypes from 'prop-types';\n\nexport default function Provider({ children }) {\n  const [user, setUser] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const onLogIn = () => {\n    setIsLoggedIn(true);\n  };\n\n  const onLogOut = () => {\n    setUser(null);\n    setIsLoggedIn(false);\n  };\n\n  const providerValue = useMemo(() => {\n    return { user, isLoggedIn, onLogIn, onLogOut, setUser };\n  }, [isLoggedIn, user]);\n\n  return (\n    <authContext.Provider value={providerValue}>\n      {children}\n    </authContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}